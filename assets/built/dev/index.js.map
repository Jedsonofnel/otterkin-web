{
  "version": 3,
  "sources": ["../../js/vendored/htmx.cjs", "../../js/vendored/croppie.cjs", "../../js/index.js", "../../js/behaviours/hamburger.js", "../../js/behaviours/toggle-button.js", "../../js/behaviours/flash-message.js", "../../js/behaviours/modal.js", "../../js/behaviours/image-preview.js", "../../js/behaviours/avatar-modal.js"],
  "sourcesContent": ["var htmx = (function () {\n  \"use strict\"\n\n  // Public API\n  const htmx = {\n    // Tsc madness here, assigning the functions directly results in an invalid TypeScript output, but reassigning is fine\n    /* Event processing */\n    /** @type {typeof onLoadHelper} */\n    onLoad: null,\n    /** @type {typeof processNode} */\n    process: null,\n    /** @type {typeof addEventListenerImpl} */\n    on: null,\n    /** @type {typeof removeEventListenerImpl} */\n    off: null,\n    /** @type {typeof triggerEvent} */\n    trigger: null,\n    /** @type {typeof ajaxHelper} */\n    ajax: null,\n    /* DOM querying helpers */\n    /** @type {typeof find} */\n    find: null,\n    /** @type {typeof findAll} */\n    findAll: null,\n    /** @type {typeof closest} */\n    closest: null,\n    /**\n     * Returns the input values that would resolve for a given element via the htmx value resolution mechanism\n     *\n     * @see https://htmx.org/api/#values\n     *\n     * @param {Element} elt the element to resolve values on\n     * @param {HttpVerb} type the request type (e.g. **get** or **post**) non-GET's will include the enclosing form of the element. Defaults to **post**\n     * @returns {Object}\n     */\n    values: function (elt, type) {\n      const inputValues = getInputValues(elt, type || \"post\")\n      return inputValues.values\n    },\n    /* DOM manipulation helpers */\n    /** @type {typeof removeElement} */\n    remove: null,\n    /** @type {typeof addClassToElement} */\n    addClass: null,\n    /** @type {typeof removeClassFromElement} */\n    removeClass: null,\n    /** @type {typeof toggleClassOnElement} */\n    toggleClass: null,\n    /** @type {typeof takeClassForElement} */\n    takeClass: null,\n    /** @type {typeof swap} */\n    swap: null,\n    /* Extension entrypoints */\n    /** @type {typeof defineExtension} */\n    defineExtension: null,\n    /** @type {typeof removeExtension} */\n    removeExtension: null,\n    /* Debugging */\n    /** @type {typeof logAll} */\n    logAll: null,\n    /** @type {typeof logNone} */\n    logNone: null,\n    /* Debugging */\n    /**\n     * The logger htmx uses to log with\n     *\n     * @see https://htmx.org/api/#logger\n     */\n    logger: null,\n    /**\n     * A property holding the configuration htmx uses at runtime.\n     *\n     * Note that using a [meta tag](https://htmx.org/docs/#config) is the preferred mechanism for setting these properties.\n     *\n     * @see https://htmx.org/api/#config\n     */\n    config: {\n      /**\n       * Whether to use history.\n       * @type boolean\n       * @default true\n       */\n      historyEnabled: true,\n      /**\n       * The number of pages to keep in **localStorage** for history support.\n       * @type number\n       * @default 10\n       */\n      historyCacheSize: 10,\n      /**\n       * @type boolean\n       * @default false\n       */\n      refreshOnHistoryMiss: false,\n      /**\n       * The default swap style to use if **[hx-swap](https://htmx.org/attributes/hx-swap)** is omitted.\n       * @type HtmxSwapStyle\n       * @default 'innerHTML'\n       */\n      defaultSwapStyle: \"innerHTML\",\n      /**\n       * The default delay between receiving a response from the server and doing the swap.\n       * @type number\n       * @default 0\n       */\n      defaultSwapDelay: 0,\n      /**\n       * The default delay between completing the content swap and settling attributes.\n       * @type number\n       * @default 20\n       */\n      defaultSettleDelay: 20,\n      /**\n       * If true, htmx will inject a small amount of CSS into the page to make indicators invisible unless the **htmx-indicator** class is present.\n       * @type boolean\n       * @default true\n       */\n      includeIndicatorStyles: true,\n      /**\n       * The class to place on indicators when a request is in flight.\n       * @type string\n       * @default 'htmx-indicator'\n       */\n      indicatorClass: \"htmx-indicator\",\n      /**\n       * The class to place on triggering elements when a request is in flight.\n       * @type string\n       * @default 'htmx-request'\n       */\n      requestClass: \"htmx-request\",\n      /**\n       * The class to temporarily place on elements that htmx has added to the DOM.\n       * @type string\n       * @default 'htmx-added'\n       */\n      addedClass: \"htmx-added\",\n      /**\n       * The class to place on target elements when htmx is in the settling phase.\n       * @type string\n       * @default 'htmx-settling'\n       */\n      settlingClass: \"htmx-settling\",\n      /**\n       * The class to place on target elements when htmx is in the swapping phase.\n       * @type string\n       * @default 'htmx-swapping'\n       */\n      swappingClass: \"htmx-swapping\",\n      /**\n       * Allows the use of eval-like functionality in htmx, to enable **hx-vars**, trigger conditions & script tag evaluation. Can be set to **false** for CSP compatibility.\n       * @type boolean\n       * @default true\n       */\n      allowEval: true,\n      /**\n       * If set to false, disables the interpretation of script tags.\n       * @type boolean\n       * @default true\n       */\n      allowScriptTags: true,\n      /**\n       * If set, the nonce will be added to inline scripts.\n       * @type string\n       * @default ''\n       */\n      inlineScriptNonce: \"\",\n      /**\n       * If set, the nonce will be added to inline styles.\n       * @type string\n       * @default ''\n       */\n      inlineStyleNonce: \"\",\n      /**\n       * The attributes to settle during the settling phase.\n       * @type string[]\n       * @default ['class', 'style', 'width', 'height']\n       */\n      attributesToSettle: [\"class\", \"style\", \"width\", \"height\"],\n      /**\n       * Allow cross-site Access-Control requests using credentials such as cookies, authorization headers or TLS client certificates.\n       * @type boolean\n       * @default false\n       */\n      withCredentials: false,\n      /**\n       * @type number\n       * @default 0\n       */\n      timeout: 0,\n      /**\n       * The default implementation of **getWebSocketReconnectDelay** for reconnecting after unexpected connection loss by the event code **Abnormal Closure**, **Service Restart** or **Try Again Later**.\n       * @type {'full-jitter' | ((retryCount:number) => number)}\n       * @default \"full-jitter\"\n       */\n      wsReconnectDelay: \"full-jitter\",\n      /**\n       * The type of binary data being received over the WebSocket connection\n       * @type BinaryType\n       * @default 'blob'\n       */\n      wsBinaryType: \"blob\",\n      /**\n       * @type string\n       * @default '[hx-disable], [data-hx-disable]'\n       */\n      disableSelector: \"[hx-disable], [data-hx-disable]\",\n      /**\n       * @type {'auto' | 'instant' | 'smooth'}\n       * @default 'instant'\n       */\n      scrollBehavior: \"instant\",\n      /**\n       * If the focused element should be scrolled into view.\n       * @type boolean\n       * @default false\n       */\n      defaultFocusScroll: false,\n      /**\n       * If set to true htmx will include a cache-busting parameter in GET requests to avoid caching partial responses by the browser\n       * @type boolean\n       * @default false\n       */\n      getCacheBusterParam: false,\n      /**\n       * If set to true, htmx will use the View Transition API when swapping in new content.\n       * @type boolean\n       * @default false\n       */\n      globalViewTransitions: false,\n      /**\n       * htmx will format requests with these methods by encoding their parameters in the URL, not the request body\n       * @type {(HttpVerb)[]}\n       * @default ['get', 'delete']\n       */\n      methodsThatUseUrlParams: [\"get\", \"delete\"],\n      /**\n       * If set to true, disables htmx-based requests to non-origin hosts.\n       * @type boolean\n       * @default false\n       */\n      selfRequestsOnly: true,\n      /**\n       * If set to true htmx will not update the title of the document when a title tag is found in new content\n       * @type boolean\n       * @default false\n       */\n      ignoreTitle: false,\n      /**\n       * Whether the target of a boosted element is scrolled into the viewport.\n       * @type boolean\n       * @default true\n       */\n      scrollIntoViewOnBoost: true,\n      /**\n       * The cache to store evaluated trigger specifications into.\n       * You may define a simple object to use a never-clearing cache, or implement your own system using a [proxy object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Proxy)\n       * @type {Object|null}\n       * @default null\n       */\n      triggerSpecsCache: null,\n      /** @type boolean */\n      disableInheritance: false,\n      /** @type HtmxResponseHandlingConfig[] */\n      responseHandling: [\n        { code: \"204\", swap: false },\n        { code: \"[23]..\", swap: true },\n        { code: \"[45]..\", swap: false, error: true },\n      ],\n      /**\n       * Whether to process OOB swaps on elements that are nested within the main response element.\n       * @type boolean\n       * @default true\n       */\n      allowNestedOobSwaps: true,\n    },\n    /** @type {typeof parseInterval} */\n    parseInterval: null,\n    /** @type {typeof internalEval} */\n    _: null,\n    version: \"2.0.2\",\n  }\n  // Tsc madness part 2\n  htmx.onLoad = onLoadHelper\n  htmx.process = processNode\n  htmx.on = addEventListenerImpl\n  htmx.off = removeEventListenerImpl\n  htmx.trigger = triggerEvent\n  htmx.ajax = ajaxHelper\n  htmx.find = find\n  htmx.findAll = findAll\n  htmx.closest = closest\n  htmx.remove = removeElement\n  htmx.addClass = addClassToElement\n  htmx.removeClass = removeClassFromElement\n  htmx.toggleClass = toggleClassOnElement\n  htmx.takeClass = takeClassForElement\n  htmx.swap = swap\n  htmx.defineExtension = defineExtension\n  htmx.removeExtension = removeExtension\n  htmx.logAll = logAll\n  htmx.logNone = logNone\n  htmx.parseInterval = parseInterval\n  htmx._ = internalEval\n\n  const internalAPI = {\n    addTriggerHandler,\n    bodyContains,\n    canAccessLocalStorage,\n    findThisElement,\n    filterValues,\n    swap,\n    hasAttribute,\n    getAttributeValue,\n    getClosestAttributeValue,\n    getClosestMatch,\n    getExpressionVars,\n    getHeaders,\n    getInputValues,\n    getInternalData,\n    getSwapSpecification,\n    getTriggerSpecs,\n    getTarget,\n    makeFragment,\n    mergeObjects,\n    makeSettleInfo,\n    oobSwap,\n    querySelectorExt,\n    settleImmediately,\n    shouldCancel,\n    triggerEvent,\n    triggerErrorEvent,\n    withExtensions,\n  }\n\n  const VERBS = [\"get\", \"post\", \"put\", \"delete\", \"patch\"]\n  const VERB_SELECTOR = VERBS.map(function (verb) {\n    return \"[hx-\" + verb + \"], [data-hx-\" + verb + \"]\"\n  }).join(\", \")\n\n  const HEAD_TAG_REGEX = makeTagRegEx(\"head\")\n\n  //= ===================================================================\n  // Utilities\n  //= ===================================================================\n\n  /**\n   * @param {string} tag\n   * @param {boolean} global\n   * @returns {RegExp}\n   */\n  function makeTagRegEx(tag, global = false) {\n    return new RegExp(\n      `<${tag}(\\\\s[^>]*>|>)([\\\\s\\\\S]*?)<\\\\/${tag}>`,\n      global ? \"gim\" : \"im\"\n    )\n  }\n\n  /**\n   * Parses an interval string consistent with the way htmx does. Useful for plugins that have timing-related attributes.\n   *\n   * Caution: Accepts an int followed by either **s** or **ms**. All other values use **parseFloat**\n   *\n   * @see https://htmx.org/api/#parseInterval\n   *\n   * @param {string} str timing string\n   * @returns {number|undefined}\n   */\n  function parseInterval(str) {\n    if (str == undefined) {\n      return undefined\n    }\n\n    let interval = NaN\n    if (str.slice(-2) == \"ms\") {\n      interval = parseFloat(str.slice(0, -2))\n    } else if (str.slice(-1) == \"s\") {\n      interval = parseFloat(str.slice(0, -1)) * 1000\n    } else if (str.slice(-1) == \"m\") {\n      interval = parseFloat(str.slice(0, -1)) * 1000 * 60\n    } else {\n      interval = parseFloat(str)\n    }\n    return isNaN(interval) ? undefined : interval\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {string} name\n   * @returns {(string | null)}\n   */\n  function getRawAttribute(elt, name) {\n    return elt instanceof Element && elt.getAttribute(name)\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} qualifiedName\n   * @returns {boolean}\n   */\n  // resolve with both hx and data-hx prefixes\n  function hasAttribute(elt, qualifiedName) {\n    return (\n      !!elt.hasAttribute &&\n      (elt.hasAttribute(qualifiedName) ||\n        elt.hasAttribute(\"data-\" + qualifiedName))\n    )\n  }\n\n  /**\n   *\n   * @param {Node} elt\n   * @param {string} qualifiedName\n   * @returns {(string | null)}\n   */\n  function getAttributeValue(elt, qualifiedName) {\n    return (\n      getRawAttribute(elt, qualifiedName) ||\n      getRawAttribute(elt, \"data-\" + qualifiedName)\n    )\n  }\n\n  /**\n   * @param {Node} elt\n   * @returns {Node | null}\n   */\n  function parentElt(elt) {\n    const parent = elt.parentElement\n    if (!parent && elt.parentNode instanceof ShadowRoot) return elt.parentNode\n    return parent\n  }\n\n  /**\n   * @returns {Document}\n   */\n  function getDocument() {\n    return document\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {boolean} global\n   * @returns {Node|Document}\n   */\n  function getRootNode(elt, global) {\n    return elt.getRootNode\n      ? elt.getRootNode({ composed: global })\n      : getDocument()\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {(e:Node) => boolean} condition\n   * @returns {Node | null}\n   */\n  function getClosestMatch(elt, condition) {\n    while (elt && !condition(elt)) {\n      elt = parentElt(elt)\n    }\n\n    return elt || null\n  }\n\n  /**\n   * @param {Element} initialElement\n   * @param {Element} ancestor\n   * @param {string} attributeName\n   * @returns {string|null}\n   */\n  function getAttributeValueWithDisinheritance(\n    initialElement,\n    ancestor,\n    attributeName\n  ) {\n    const attributeValue = getAttributeValue(ancestor, attributeName)\n    const disinherit = getAttributeValue(ancestor, \"hx-disinherit\")\n    var inherit = getAttributeValue(ancestor, \"hx-inherit\")\n    if (initialElement !== ancestor) {\n      if (htmx.config.disableInheritance) {\n        if (\n          inherit &&\n          (inherit === \"*\" || inherit.split(\" \").indexOf(attributeName) >= 0)\n        ) {\n          return attributeValue\n        } else {\n          return null\n        }\n      }\n      if (\n        disinherit &&\n        (disinherit === \"*\" ||\n          disinherit.split(\" \").indexOf(attributeName) >= 0)\n      ) {\n        return \"unset\"\n      }\n    }\n    return attributeValue\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} attributeName\n   * @returns {string | null}\n   */\n  function getClosestAttributeValue(elt, attributeName) {\n    let closestAttr = null\n    getClosestMatch(elt, function (e) {\n      return !!(closestAttr = getAttributeValueWithDisinheritance(\n        elt,\n        asElement(e),\n        attributeName\n      ))\n    })\n    if (closestAttr !== \"unset\") {\n      return closestAttr\n    }\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {string} selector\n   * @returns {boolean}\n   */\n  function matches(elt, selector) {\n    // @ts-ignore: non-standard properties for browser compatibility\n    // noinspection JSUnresolvedVariable\n    const matchesFunction =\n      elt instanceof Element &&\n      (elt.matches ||\n        elt.matchesSelector ||\n        elt.msMatchesSelector ||\n        elt.mozMatchesSelector ||\n        elt.webkitMatchesSelector ||\n        elt.oMatchesSelector)\n    return !!matchesFunction && matchesFunction.call(elt, selector)\n  }\n\n  /**\n   * @param {string} str\n   * @returns {string}\n   */\n  function getStartTag(str) {\n    const tagMatcher = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i\n    const match = tagMatcher.exec(str)\n    if (match) {\n      return match[1].toLowerCase()\n    } else {\n      return \"\"\n    }\n  }\n\n  /**\n   * @param {string} resp\n   * @returns {Document}\n   */\n  function parseHTML(resp) {\n    const parser = new DOMParser()\n    return parser.parseFromString(resp, \"text/html\")\n  }\n\n  /**\n   * @param {DocumentFragment} fragment\n   * @param {Node} elt\n   */\n  function takeChildrenFor(fragment, elt) {\n    while (elt.childNodes.length > 0) {\n      fragment.append(elt.childNodes[0])\n    }\n  }\n\n  /**\n   * @param {HTMLScriptElement} script\n   * @returns {HTMLScriptElement}\n   */\n  function duplicateScript(script) {\n    const newScript = getDocument().createElement(\"script\")\n    forEach(script.attributes, function (attr) {\n      newScript.setAttribute(attr.name, attr.value)\n    })\n    newScript.textContent = script.textContent\n    newScript.async = false\n    if (htmx.config.inlineScriptNonce) {\n      newScript.nonce = htmx.config.inlineScriptNonce\n    }\n    return newScript\n  }\n\n  /**\n   * @param {HTMLScriptElement} script\n   * @returns {boolean}\n   */\n  function isJavaScriptScriptNode(script) {\n    return (\n      script.matches(\"script\") &&\n      (script.type === \"text/javascript\" ||\n        script.type === \"module\" ||\n        script.type === \"\")\n    )\n  }\n\n  /**\n   * we have to make new copies of script tags that we are going to insert because\n   * SOME browsers (not saying who, but it involves an element and an animal) don't\n   * execute scripts created in <template> tags when they are inserted into the DOM\n   * and all the others do lmao\n   * @param {DocumentFragment} fragment\n   */\n  function normalizeScriptTags(fragment) {\n    Array.from(fragment.querySelectorAll(\"script\")).forEach(\n      /** @param {HTMLScriptElement} script */ (script) => {\n        if (isJavaScriptScriptNode(script)) {\n          const newScript = duplicateScript(script)\n          const parent = script.parentNode\n          try {\n            parent.insertBefore(newScript, script)\n          } catch (e) {\n            logError(e)\n          } finally {\n            script.remove()\n          }\n        }\n      }\n    )\n  }\n\n  /**\n   * @typedef {DocumentFragment & {title?: string}} DocumentFragmentWithTitle\n   * @description  a document fragment representing the response HTML, including\n   * a `title` property for any title information found\n   */\n\n  /**\n   * @param {string} response HTML\n   * @returns {DocumentFragmentWithTitle}\n   */\n  function makeFragment(response) {\n    // strip head tag to determine shape of response we are dealing with\n    const responseWithNoHead = response.replace(HEAD_TAG_REGEX, \"\")\n    const startTag = getStartTag(responseWithNoHead)\n    /** @type DocumentFragmentWithTitle */\n    let fragment\n    if (startTag === \"html\") {\n      // if it is a full document, parse it and return the body\n      fragment = /** @type DocumentFragmentWithTitle */ (new DocumentFragment())\n      const doc = parseHTML(response)\n      takeChildrenFor(fragment, doc.body)\n      fragment.title = doc.title\n    } else if (startTag === \"body\") {\n      // parse body w/o wrapping in template\n      fragment = /** @type DocumentFragmentWithTitle */ (new DocumentFragment())\n      const doc = parseHTML(responseWithNoHead)\n      takeChildrenFor(fragment, doc.body)\n      fragment.title = doc.title\n    } else {\n      // otherwise we have non-body partial HTML content, so wrap it in a template to maximize parsing flexibility\n      const doc = parseHTML(\n        '<body><template class=\"internal-htmx-wrapper\">' +\n          responseWithNoHead +\n          \"</template></body>\"\n      )\n      fragment = /** @type DocumentFragmentWithTitle */ (\n        doc.querySelector(\"template\").content\n      )\n      // extract title into fragment for later processing\n      fragment.title = doc.title\n\n      // for legacy reasons we support a title tag at the root level of non-body responses, so we need to handle it\n      var titleElement = fragment.querySelector(\"title\")\n      if (titleElement && titleElement.parentNode === fragment) {\n        titleElement.remove()\n        fragment.title = titleElement.innerText\n      }\n    }\n    if (fragment) {\n      if (htmx.config.allowScriptTags) {\n        normalizeScriptTags(fragment)\n      } else {\n        // remove all script tags if scripts are disabled\n        fragment.querySelectorAll(\"script\").forEach((script) => script.remove())\n      }\n    }\n    return fragment\n  }\n\n  /**\n   * @param {Function} func\n   */\n  function maybeCall(func) {\n    if (func) {\n      func()\n    }\n  }\n\n  /**\n   * @param {any} o\n   * @param {string} type\n   * @returns\n   */\n  function isType(o, type) {\n    return Object.prototype.toString.call(o) === \"[object \" + type + \"]\"\n  }\n\n  /**\n   * @param {*} o\n   * @returns {o is Function}\n   */\n  function isFunction(o) {\n    return typeof o === \"function\"\n  }\n\n  /**\n   * @param {*} o\n   * @returns {o is Object}\n   */\n  function isRawObject(o) {\n    return isType(o, \"Object\")\n  }\n\n  /**\n   * @typedef {Object} OnHandler\n   * @property {(keyof HTMLElementEventMap)|string} event\n   * @property {EventListener} listener\n   */\n\n  /**\n   * @typedef {Object} ListenerInfo\n   * @property {string} trigger\n   * @property {EventListener} listener\n   * @property {EventTarget} on\n   */\n\n  /**\n   * @typedef {Object} HtmxNodeInternalData\n   * Element data\n   * @property {number} [initHash]\n   * @property {boolean} [boosted]\n   * @property {OnHandler[]} [onHandlers]\n   * @property {number} [timeout]\n   * @property {ListenerInfo[]} [listenerInfos]\n   * @property {boolean} [cancelled]\n   * @property {boolean} [triggeredOnce]\n   * @property {number} [delayed]\n   * @property {number|null} [throttle]\n   * @property {string} [lastValue]\n   * @property {boolean} [loaded]\n   * @property {string} [path]\n   * @property {string} [verb]\n   * @property {boolean} [polling]\n   * @property {HTMLButtonElement|HTMLInputElement|null} [lastButtonClicked]\n   * @property {number} [requestCount]\n   * @property {XMLHttpRequest} [xhr]\n   * @property {(() => void)[]} [queuedRequests]\n   * @property {boolean} [abortable]\n   *\n   * Event data\n   * @property {HtmxTriggerSpecification} [triggerSpec]\n   * @property {EventTarget[]} [handledFor]\n   */\n\n  /**\n   * getInternalData retrieves \"private\" data stored by htmx within an element\n   * @param {EventTarget|Event} elt\n   * @returns {HtmxNodeInternalData}\n   */\n  function getInternalData(elt) {\n    const dataProp = \"htmx-internal-data\"\n    let data = elt[dataProp]\n    if (!data) {\n      data = elt[dataProp] = {}\n    }\n    return data\n  }\n\n  /**\n   * toArray converts an ArrayLike object into a real array.\n   * @template T\n   * @param {ArrayLike<T>} arr\n   * @returns {T[]}\n   */\n  function toArray(arr) {\n    const returnArr = []\n    if (arr) {\n      for (let i = 0; i < arr.length; i++) {\n        returnArr.push(arr[i])\n      }\n    }\n    return returnArr\n  }\n\n  /**\n   * @template T\n   * @param {T[]|NamedNodeMap|HTMLCollection|HTMLFormControlsCollection|ArrayLike<T>} arr\n   * @param {(T) => void} func\n   */\n  function forEach(arr, func) {\n    if (arr) {\n      for (let i = 0; i < arr.length; i++) {\n        func(arr[i])\n      }\n    }\n  }\n\n  /**\n   * @param {Element} el\n   * @returns {boolean}\n   */\n  function isScrolledIntoView(el) {\n    const rect = el.getBoundingClientRect()\n    const elemTop = rect.top\n    const elemBottom = rect.bottom\n    return elemTop < window.innerHeight && elemBottom >= 0\n  }\n\n  /**\n   * @param {Node} elt\n   * @returns {boolean}\n   */\n  function bodyContains(elt) {\n    // IE Fix\n    const rootNode = elt.getRootNode && elt.getRootNode()\n    if (rootNode && rootNode instanceof window.ShadowRoot) {\n      return getDocument().body.contains(rootNode.host)\n    } else {\n      return getDocument().body.contains(elt)\n    }\n  }\n\n  /**\n   * @param {string} trigger\n   * @returns {string[]}\n   */\n  function splitOnWhitespace(trigger) {\n    return trigger.trim().split(/\\s+/)\n  }\n\n  /**\n   * mergeObjects takes all the keys from\n   * obj2 and duplicates them into obj1\n   * @template T1\n   * @template T2\n   * @param {T1} obj1\n   * @param {T2} obj2\n   * @returns {T1 & T2}\n   */\n  function mergeObjects(obj1, obj2) {\n    for (const key in obj2) {\n      if (obj2.hasOwnProperty(key)) {\n        // @ts-ignore tsc doesn't seem to properly handle types merging\n        obj1[key] = obj2[key]\n      }\n    }\n    // @ts-ignore tsc doesn't seem to properly handle types merging\n    return obj1\n  }\n\n  /**\n   * @param {string} jString\n   * @returns {any|null}\n   */\n  function parseJSON(jString) {\n    try {\n      return JSON.parse(jString)\n    } catch (error) {\n      logError(error)\n      return null\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  function canAccessLocalStorage() {\n    const test = \"htmx:localStorageTest\"\n    try {\n      localStorage.setItem(test, test)\n      localStorage.removeItem(test)\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  function normalizePath(path) {\n    try {\n      const url = new URL(path)\n      if (url) {\n        path = url.pathname + url.search\n      }\n      // remove trailing slash, unless index page\n      if (!/^\\/$/.test(path)) {\n        path = path.replace(/\\/+$/, \"\")\n      }\n      return path\n    } catch (e) {\n      // be kind to IE11, which doesn't support URL()\n      return path\n    }\n  }\n\n  //= =========================================================================================\n  // public API\n  //= =========================================================================================\n\n  /**\n   * @param {string} str\n   * @returns {any}\n   */\n  function internalEval(str) {\n    return maybeEval(getDocument().body, function () {\n      return eval(str)\n    })\n  }\n\n  /**\n   * Adds a callback for the **htmx:load** event. This can be used to process new content, for example initializing the content with a javascript library\n   *\n   * @see https://htmx.org/api/#onLoad\n   *\n   * @param {(elt: Node) => void} callback the callback to call on newly loaded content\n   * @returns {EventListener}\n   */\n  function onLoadHelper(callback) {\n    const value = htmx.on(\n      \"htmx:load\",\n      /** @param {CustomEvent} evt */ function (evt) {\n        callback(evt.detail.elt)\n      }\n    )\n    return value\n  }\n\n  /**\n   * Log all htmx events, useful for debugging.\n   *\n   * @see https://htmx.org/api/#logAll\n   */\n  function logAll() {\n    htmx.logger = function (elt, event, data) {\n      if (console) {\n        console.log(event, elt, data)\n      }\n    }\n  }\n\n  function logNone() {\n    htmx.logger = null\n  }\n\n  /**\n   * Finds an element matching the selector\n   *\n   * @see https://htmx.org/api/#find\n   *\n   * @param {ParentNode|string} eltOrSelector  the root element to find the matching element in, inclusive | the selector to match\n   * @param {string} [selector] the selector to match\n   * @returns {Element|null}\n   */\n  function find(eltOrSelector, selector) {\n    if (typeof eltOrSelector !== \"string\") {\n      return eltOrSelector.querySelector(selector)\n    } else {\n      return find(getDocument(), eltOrSelector)\n    }\n  }\n\n  /**\n   * Finds all elements matching the selector\n   *\n   * @see https://htmx.org/api/#findAll\n   *\n   * @param {ParentNode|string} eltOrSelector the root element to find the matching elements in, inclusive | the selector to match\n   * @param {string} [selector] the selector to match\n   * @returns {NodeListOf<Element>}\n   */\n  function findAll(eltOrSelector, selector) {\n    if (typeof eltOrSelector !== \"string\") {\n      return eltOrSelector.querySelectorAll(selector)\n    } else {\n      return findAll(getDocument(), eltOrSelector)\n    }\n  }\n\n  /**\n   * @returns Window\n   */\n  function getWindow() {\n    return window\n  }\n\n  /**\n   * Removes an element from the DOM\n   *\n   * @see https://htmx.org/api/#remove\n   *\n   * @param {Node} elt\n   * @param {number} [delay]\n   */\n  function removeElement(elt, delay) {\n    elt = resolveTarget(elt)\n    if (delay) {\n      getWindow().setTimeout(function () {\n        removeElement(elt)\n        elt = null\n      }, delay)\n    } else {\n      parentElt(elt).removeChild(elt)\n    }\n  }\n\n  /**\n   * @param {any} elt\n   * @return {Element|null}\n   */\n  function asElement(elt) {\n    return elt instanceof Element ? elt : null\n  }\n\n  /**\n   * @param {any} elt\n   * @return {HTMLElement|null}\n   */\n  function asHtmlElement(elt) {\n    return elt instanceof HTMLElement ? elt : null\n  }\n\n  /**\n   * @param {any} value\n   * @return {string|null}\n   */\n  function asString(value) {\n    return typeof value === \"string\" ? value : null\n  }\n\n  /**\n   * @param {EventTarget} elt\n   * @return {ParentNode|null}\n   */\n  function asParentNode(elt) {\n    return elt instanceof Element ||\n      elt instanceof Document ||\n      elt instanceof DocumentFragment\n      ? elt\n      : null\n  }\n\n  /**\n   * This method adds a class to the given element.\n   *\n   * @see https://htmx.org/api/#addClass\n   *\n   * @param {Element|string} elt the element to add the class to\n   * @param {string} clazz the class to add\n   * @param {number} [delay] the delay (in milliseconds) before class is added\n   */\n  function addClassToElement(elt, clazz, delay) {\n    elt = asElement(resolveTarget(elt))\n    if (!elt) {\n      return\n    }\n    if (delay) {\n      getWindow().setTimeout(function () {\n        addClassToElement(elt, clazz)\n        elt = null\n      }, delay)\n    } else {\n      elt.classList && elt.classList.add(clazz)\n    }\n  }\n\n  /**\n   * Removes a class from the given element\n   *\n   * @see https://htmx.org/api/#removeClass\n   *\n   * @param {Node|string} node element to remove the class from\n   * @param {string} clazz the class to remove\n   * @param {number} [delay] the delay (in milliseconds before class is removed)\n   */\n  function removeClassFromElement(node, clazz, delay) {\n    let elt = asElement(resolveTarget(node))\n    if (!elt) {\n      return\n    }\n    if (delay) {\n      getWindow().setTimeout(function () {\n        removeClassFromElement(elt, clazz)\n        elt = null\n      }, delay)\n    } else {\n      if (elt.classList) {\n        elt.classList.remove(clazz)\n        // if there are no classes left, remove the class attribute\n        if (elt.classList.length === 0) {\n          elt.removeAttribute(\"class\")\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles the given class on an element\n   *\n   * @see https://htmx.org/api/#toggleClass\n   *\n   * @param {Element|string} elt the element to toggle the class on\n   * @param {string} clazz the class to toggle\n   */\n  function toggleClassOnElement(elt, clazz) {\n    elt = resolveTarget(elt)\n    elt.classList.toggle(clazz)\n  }\n\n  /**\n   * Takes the given class from its siblings, so that among its siblings, only the given element will have the class.\n   *\n   * @see https://htmx.org/api/#takeClass\n   *\n   * @param {Node|string} elt the element that will take the class\n   * @param {string} clazz the class to take\n   */\n  function takeClassForElement(elt, clazz) {\n    elt = resolveTarget(elt)\n    forEach(elt.parentElement.children, function (child) {\n      removeClassFromElement(child, clazz)\n    })\n    addClassToElement(asElement(elt), clazz)\n  }\n\n  /**\n   * Finds the closest matching element in the given elements parentage, inclusive of the element\n   *\n   * @see https://htmx.org/api/#closest\n   *\n   * @param {Element|string} elt the element to find the selector from\n   * @param {string} selector the selector to find\n   * @returns {Element|null}\n   */\n  function closest(elt, selector) {\n    elt = asElement(resolveTarget(elt))\n    if (elt && elt.closest) {\n      return elt.closest(selector)\n    } else {\n      // TODO remove when IE goes away\n      do {\n        if (elt == null || matches(elt, selector)) {\n          return elt\n        }\n      } while ((elt = elt && asElement(parentElt(elt))))\n      return null\n    }\n  }\n\n  /**\n   * @param {string} str\n   * @param {string} prefix\n   * @returns {boolean}\n   */\n  function startsWith(str, prefix) {\n    return str.substring(0, prefix.length) === prefix\n  }\n\n  /**\n   * @param {string} str\n   * @param {string} suffix\n   * @returns {boolean}\n   */\n  function endsWith(str, suffix) {\n    return str.substring(str.length - suffix.length) === suffix\n  }\n\n  /**\n   * @param {string} selector\n   * @returns {string}\n   */\n  function normalizeSelector(selector) {\n    const trimmedSelector = selector.trim()\n    if (startsWith(trimmedSelector, \"<\") && endsWith(trimmedSelector, \"/>\")) {\n      return trimmedSelector.substring(1, trimmedSelector.length - 2)\n    } else {\n      return trimmedSelector\n    }\n  }\n\n  /**\n   * @param {Node|Element|Document|string} elt\n   * @param {string} selector\n   * @param {boolean=} global\n   * @returns {(Node|Window)[]}\n   */\n  function querySelectorAllExt(elt, selector, global) {\n    elt = resolveTarget(elt)\n    if (selector.indexOf(\"closest \") === 0) {\n      return [closest(asElement(elt), normalizeSelector(selector.substr(8)))]\n    } else if (selector.indexOf(\"find \") === 0) {\n      return [find(asParentNode(elt), normalizeSelector(selector.substr(5)))]\n    } else if (selector === \"next\") {\n      return [asElement(elt).nextElementSibling]\n    } else if (selector.indexOf(\"next \") === 0) {\n      return [\n        scanForwardQuery(elt, normalizeSelector(selector.substr(5)), !!global),\n      ]\n    } else if (selector === \"previous\") {\n      return [asElement(elt).previousElementSibling]\n    } else if (selector.indexOf(\"previous \") === 0) {\n      return [\n        scanBackwardsQuery(\n          elt,\n          normalizeSelector(selector.substr(9)),\n          !!global\n        ),\n      ]\n    } else if (selector === \"document\") {\n      return [document]\n    } else if (selector === \"window\") {\n      return [window]\n    } else if (selector === \"body\") {\n      return [document.body]\n    } else if (selector === \"root\") {\n      return [getRootNode(elt, !!global)]\n    } else if (selector.indexOf(\"global \") === 0) {\n      return querySelectorAllExt(elt, selector.slice(7), true)\n    } else {\n      return toArray(\n        asParentNode(getRootNode(elt, !!global)).querySelectorAll(\n          normalizeSelector(selector)\n        )\n      )\n    }\n  }\n\n  /**\n   * @param {Node} start\n   * @param {string} match\n   * @param {boolean} global\n   * @returns {Element}\n   */\n  var scanForwardQuery = function (start, match, global) {\n    const results = asParentNode(getRootNode(start, global)).querySelectorAll(\n      match\n    )\n    for (let i = 0; i < results.length; i++) {\n      const elt = results[i]\n      if (\n        elt.compareDocumentPosition(start) === Node.DOCUMENT_POSITION_PRECEDING\n      ) {\n        return elt\n      }\n    }\n  }\n\n  /**\n   * @param {Node} start\n   * @param {string} match\n   * @param {boolean} global\n   * @returns {Element}\n   */\n  var scanBackwardsQuery = function (start, match, global) {\n    const results = asParentNode(getRootNode(start, global)).querySelectorAll(\n      match\n    )\n    for (let i = results.length - 1; i >= 0; i--) {\n      const elt = results[i]\n      if (\n        elt.compareDocumentPosition(start) === Node.DOCUMENT_POSITION_FOLLOWING\n      ) {\n        return elt\n      }\n    }\n  }\n\n  /**\n   * @param {Node|string} eltOrSelector\n   * @param {string=} selector\n   * @returns {Node|Window}\n   */\n  function querySelectorExt(eltOrSelector, selector) {\n    if (typeof eltOrSelector !== \"string\") {\n      return querySelectorAllExt(eltOrSelector, selector)[0]\n    } else {\n      return querySelectorAllExt(getDocument().body, eltOrSelector)[0]\n    }\n  }\n\n  /**\n   * @template {EventTarget} T\n   * @param {T|string} eltOrSelector\n   * @param {T} [context]\n   * @returns {Element|T|null}\n   */\n  function resolveTarget(eltOrSelector, context) {\n    if (typeof eltOrSelector === \"string\") {\n      return find(asParentNode(context) || document, eltOrSelector)\n    } else {\n      return eltOrSelector\n    }\n  }\n\n  /**\n   * @typedef {keyof HTMLElementEventMap|string} AnyEventName\n   */\n\n  /**\n   * @typedef {Object} EventArgs\n   * @property {EventTarget} target\n   * @property {AnyEventName} event\n   * @property {EventListener} listener\n   */\n\n  /**\n   * @param {EventTarget|AnyEventName} arg1\n   * @param {AnyEventName|EventListener} arg2\n   * @param {EventListener} [arg3]\n   * @returns {EventArgs}\n   */\n  function processEventArgs(arg1, arg2, arg3) {\n    if (isFunction(arg2)) {\n      return {\n        target: getDocument().body,\n        event: asString(arg1),\n        listener: arg2,\n      }\n    } else {\n      return {\n        target: resolveTarget(arg1),\n        event: asString(arg2),\n        listener: arg3,\n      }\n    }\n  }\n\n  /**\n   * Adds an event listener to an element\n   *\n   * @see https://htmx.org/api/#on\n   *\n   * @param {EventTarget|string} arg1 the element to add the listener to | the event name to add the listener for\n   * @param {string|EventListener} arg2 the event name to add the listener for | the listener to add\n   * @param {EventListener} [arg3] the listener to add\n   * @returns {EventListener}\n   */\n  function addEventListenerImpl(arg1, arg2, arg3) {\n    ready(function () {\n      const eventArgs = processEventArgs(arg1, arg2, arg3)\n      eventArgs.target.addEventListener(eventArgs.event, eventArgs.listener)\n    })\n    const b = isFunction(arg2)\n    return b ? arg2 : arg3\n  }\n\n  /**\n   * Removes an event listener from an element\n   *\n   * @see https://htmx.org/api/#off\n   *\n   * @param {EventTarget|string} arg1 the element to remove the listener from | the event name to remove the listener from\n   * @param {string|EventListener} arg2 the event name to remove the listener from | the listener to remove\n   * @param {EventListener} [arg3] the listener to remove\n   * @returns {EventListener}\n   */\n  function removeEventListenerImpl(arg1, arg2, arg3) {\n    ready(function () {\n      const eventArgs = processEventArgs(arg1, arg2, arg3)\n      eventArgs.target.removeEventListener(eventArgs.event, eventArgs.listener)\n    })\n    return isFunction(arg2) ? arg2 : arg3\n  }\n\n  //= ===================================================================\n  // Node processing\n  //= ===================================================================\n\n  const DUMMY_ELT = getDocument().createElement(\"output\") // dummy element for bad selectors\n  /**\n   * @param {Element} elt\n   * @param {string} attrName\n   * @returns {(Node|Window)[]}\n   */\n  function findAttributeTargets(elt, attrName) {\n    const attrTarget = getClosestAttributeValue(elt, attrName)\n    if (attrTarget) {\n      if (attrTarget === \"this\") {\n        return [findThisElement(elt, attrName)]\n      } else {\n        const result = querySelectorAllExt(elt, attrTarget)\n        if (result.length === 0) {\n          logError(\n            'The selector \"' +\n              attrTarget +\n              '\" on ' +\n              attrName +\n              \" returned no matches!\"\n          )\n          return [DUMMY_ELT]\n        } else {\n          return result\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} attribute\n   * @returns {Element|null}\n   */\n  function findThisElement(elt, attribute) {\n    return asElement(\n      getClosestMatch(elt, function (elt) {\n        return getAttributeValue(asElement(elt), attribute) != null\n      })\n    )\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {Node|Window|null}\n   */\n  function getTarget(elt) {\n    const targetStr = getClosestAttributeValue(elt, \"hx-target\")\n    if (targetStr) {\n      if (targetStr === \"this\") {\n        return findThisElement(elt, \"hx-target\")\n      } else {\n        return querySelectorExt(elt, targetStr)\n      }\n    } else {\n      const data = getInternalData(elt)\n      if (data.boosted) {\n        return getDocument().body\n      } else {\n        return elt\n      }\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @returns {boolean}\n   */\n  function shouldSettleAttribute(name) {\n    const attributesToSettle = htmx.config.attributesToSettle\n    for (let i = 0; i < attributesToSettle.length; i++) {\n      if (name === attributesToSettle[i]) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * @param {Element} mergeTo\n   * @param {Element} mergeFrom\n   */\n  function cloneAttributes(mergeTo, mergeFrom) {\n    forEach(mergeTo.attributes, function (attr) {\n      if (\n        !mergeFrom.hasAttribute(attr.name) &&\n        shouldSettleAttribute(attr.name)\n      ) {\n        mergeTo.removeAttribute(attr.name)\n      }\n    })\n    forEach(mergeFrom.attributes, function (attr) {\n      if (shouldSettleAttribute(attr.name)) {\n        mergeTo.setAttribute(attr.name, attr.value)\n      }\n    })\n  }\n\n  /**\n   * @param {HtmxSwapStyle} swapStyle\n   * @param {Element} target\n   * @returns {boolean}\n   */\n  function isInlineSwap(swapStyle, target) {\n    const extensions = getExtensions(target)\n    for (let i = 0; i < extensions.length; i++) {\n      const extension = extensions[i]\n      try {\n        if (extension.isInlineSwap(swapStyle)) {\n          return true\n        }\n      } catch (e) {\n        logError(e)\n      }\n    }\n    return swapStyle === \"outerHTML\"\n  }\n\n  /**\n   * @param {string} oobValue\n   * @param {Element} oobElement\n   * @param {HtmxSettleInfo} settleInfo\n   * @returns\n   */\n  function oobSwap(oobValue, oobElement, settleInfo) {\n    let selector = \"#\" + getRawAttribute(oobElement, \"id\")\n    /** @type HtmxSwapStyle */\n    let swapStyle = \"outerHTML\"\n    if (oobValue === \"true\") {\n      // do nothing\n    } else if (oobValue.indexOf(\":\") > 0) {\n      swapStyle = oobValue.substr(0, oobValue.indexOf(\":\"))\n      selector = oobValue.substr(oobValue.indexOf(\":\") + 1, oobValue.length)\n    } else {\n      swapStyle = oobValue\n    }\n\n    const targets = getDocument().querySelectorAll(selector)\n    if (targets) {\n      forEach(targets, function (target) {\n        let fragment\n        const oobElementClone = oobElement.cloneNode(true)\n        fragment = getDocument().createDocumentFragment()\n        fragment.appendChild(oobElementClone)\n        if (!isInlineSwap(swapStyle, target)) {\n          fragment = asParentNode(oobElementClone) // if this is not an inline swap, we use the content of the node, not the node itself\n        }\n\n        const beforeSwapDetails = { shouldSwap: true, target, fragment }\n        if (!triggerEvent(target, \"htmx:oobBeforeSwap\", beforeSwapDetails))\n          return\n\n        target = beforeSwapDetails.target // allow re-targeting\n        if (beforeSwapDetails.shouldSwap) {\n          swapWithStyle(swapStyle, target, target, fragment, settleInfo)\n        }\n        forEach(settleInfo.elts, function (elt) {\n          triggerEvent(elt, \"htmx:oobAfterSwap\", beforeSwapDetails)\n        })\n      })\n      oobElement.parentNode.removeChild(oobElement)\n    } else {\n      oobElement.parentNode.removeChild(oobElement)\n      triggerErrorEvent(getDocument().body, \"htmx:oobErrorNoTarget\", {\n        content: oobElement,\n      })\n    }\n    return oobValue\n  }\n\n  /**\n   * @param {DocumentFragment} fragment\n   */\n  function handlePreservedElements(fragment) {\n    forEach(\n      findAll(fragment, \"[hx-preserve], [data-hx-preserve]\"),\n      function (preservedElt) {\n        const id = getAttributeValue(preservedElt, \"id\")\n        const oldElt = getDocument().getElementById(id)\n        if (oldElt != null) {\n          preservedElt.parentNode.replaceChild(oldElt, preservedElt)\n        }\n      }\n    )\n  }\n\n  /**\n   * @param {Node} parentNode\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function handleAttributes(parentNode, fragment, settleInfo) {\n    forEach(fragment.querySelectorAll(\"[id]\"), function (newNode) {\n      const id = getRawAttribute(newNode, \"id\")\n      if (id && id.length > 0) {\n        const normalizedId = id.replace(\"'\", \"\\\\'\")\n        const normalizedTag = newNode.tagName.replace(\":\", \"\\\\:\")\n        const parentElt = asParentNode(parentNode)\n        const oldNode =\n          parentElt &&\n          parentElt.querySelector(normalizedTag + \"[id='\" + normalizedId + \"']\")\n        if (oldNode && oldNode !== parentElt) {\n          const newAttributes = newNode.cloneNode()\n          cloneAttributes(newNode, oldNode)\n          settleInfo.tasks.push(function () {\n            cloneAttributes(newNode, newAttributes)\n          })\n        }\n      }\n    })\n  }\n\n  /**\n   * @param {Node} child\n   * @returns {HtmxSettleTask}\n   */\n  function makeAjaxLoadTask(child) {\n    return function () {\n      removeClassFromElement(child, htmx.config.addedClass)\n      processNode(asElement(child))\n      processFocus(asParentNode(child))\n      triggerEvent(child, \"htmx:load\")\n    }\n  }\n\n  /**\n   * @param {ParentNode} child\n   */\n  function processFocus(child) {\n    const autofocus = \"[autofocus]\"\n    const autoFocusedElt = asHtmlElement(\n      matches(child, autofocus) ? child : child.querySelector(autofocus)\n    )\n    if (autoFocusedElt != null) {\n      autoFocusedElt.focus()\n    }\n  }\n\n  /**\n   * @param {Node} parentNode\n   * @param {Node} insertBefore\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function insertNodesBefore(parentNode, insertBefore, fragment, settleInfo) {\n    handleAttributes(parentNode, fragment, settleInfo)\n    while (fragment.childNodes.length > 0) {\n      const child = fragment.firstChild\n      addClassToElement(asElement(child), htmx.config.addedClass)\n      parentNode.insertBefore(child, insertBefore)\n      if (\n        child.nodeType !== Node.TEXT_NODE &&\n        child.nodeType !== Node.COMMENT_NODE\n      ) {\n        settleInfo.tasks.push(makeAjaxLoadTask(child))\n      }\n    }\n  }\n\n  /**\n   * based on https://gist.github.com/hyamamoto/fd435505d29ebfa3d9716fd2be8d42f0,\n   * derived from Java's string hashcode implementation\n   * @param {string} string\n   * @param {number} hash\n   * @returns {number}\n   */\n  function stringHash(string, hash) {\n    let char = 0\n    while (char < string.length) {\n      hash = ((hash << 5) - hash + string.charCodeAt(char++)) | 0 // bitwise or ensures we have a 32-bit int\n    }\n    return hash\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {number}\n   */\n  function attributeHash(elt) {\n    let hash = 0\n    // IE fix\n    if (elt.attributes) {\n      for (let i = 0; i < elt.attributes.length; i++) {\n        const attribute = elt.attributes[i]\n        if (attribute.value) {\n          // only include attributes w/ actual values (empty is same as non-existent)\n          hash = stringHash(attribute.name, hash)\n          hash = stringHash(attribute.value, hash)\n        }\n      }\n    }\n    return hash\n  }\n\n  /**\n   * @param {EventTarget} elt\n   */\n  function deInitOnHandlers(elt) {\n    const internalData = getInternalData(elt)\n    if (internalData.onHandlers) {\n      for (let i = 0; i < internalData.onHandlers.length; i++) {\n        const handlerInfo = internalData.onHandlers[i]\n        removeEventListenerImpl(elt, handlerInfo.event, handlerInfo.listener)\n      }\n      delete internalData.onHandlers\n    }\n  }\n\n  /**\n   * @param {Node} element\n   */\n  function deInitNode(element) {\n    const internalData = getInternalData(element)\n    if (internalData.timeout) {\n      clearTimeout(internalData.timeout)\n    }\n    if (internalData.listenerInfos) {\n      forEach(internalData.listenerInfos, function (info) {\n        if (info.on) {\n          removeEventListenerImpl(info.on, info.trigger, info.listener)\n        }\n      })\n    }\n    deInitOnHandlers(element)\n    forEach(Object.keys(internalData), function (key) {\n      delete internalData[key]\n    })\n  }\n\n  /**\n   * @param {Node} element\n   */\n  function cleanUpElement(element) {\n    triggerEvent(element, \"htmx:beforeCleanupElement\")\n    deInitNode(element)\n    // @ts-ignore IE11 code\n    // noinspection JSUnresolvedReference\n    if (element.children) {\n      // IE\n      // @ts-ignore\n      forEach(element.children, function (child) {\n        cleanUpElement(child)\n      })\n    }\n  }\n\n  /**\n   * @param {Node} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapOuterHTML(target, fragment, settleInfo) {\n    if (target instanceof Element && target.tagName === \"BODY\") {\n      // special case the body to innerHTML because DocumentFragments can't contain a body elt unfortunately\n      return swapInnerHTML(target, fragment, settleInfo)\n    }\n    /** @type {Node} */\n    let newElt\n    const eltBeforeNewContent = target.previousSibling\n    insertNodesBefore(parentElt(target), target, fragment, settleInfo)\n    if (eltBeforeNewContent == null) {\n      newElt = parentElt(target).firstChild\n    } else {\n      newElt = eltBeforeNewContent.nextSibling\n    }\n    settleInfo.elts = settleInfo.elts.filter(function (e) {\n      return e !== target\n    })\n    // scan through all newly added content and add all elements to the settle info so we trigger\n    // events properly on them\n    while (newElt && newElt !== target) {\n      if (newElt instanceof Element) {\n        settleInfo.elts.push(newElt)\n      }\n      newElt = newElt.nextSibling\n    }\n    cleanUpElement(target)\n    if (target instanceof Element) {\n      target.remove()\n    } else {\n      target.parentNode.removeChild(target)\n    }\n  }\n\n  /**\n   * @param {Node} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapAfterBegin(target, fragment, settleInfo) {\n    return insertNodesBefore(target, target.firstChild, fragment, settleInfo)\n  }\n\n  /**\n   * @param {Node} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapBeforeBegin(target, fragment, settleInfo) {\n    return insertNodesBefore(parentElt(target), target, fragment, settleInfo)\n  }\n\n  /**\n   * @param {Node} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapBeforeEnd(target, fragment, settleInfo) {\n    return insertNodesBefore(target, null, fragment, settleInfo)\n  }\n\n  /**\n   * @param {Node} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapAfterEnd(target, fragment, settleInfo) {\n    return insertNodesBefore(\n      parentElt(target),\n      target.nextSibling,\n      fragment,\n      settleInfo\n    )\n  }\n\n  /**\n   * @param {Node} target\n   */\n  function swapDelete(target) {\n    cleanUpElement(target)\n    return parentElt(target).removeChild(target)\n  }\n\n  /**\n   * @param {Node} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapInnerHTML(target, fragment, settleInfo) {\n    const firstChild = target.firstChild\n    insertNodesBefore(target, firstChild, fragment, settleInfo)\n    if (firstChild) {\n      while (firstChild.nextSibling) {\n        cleanUpElement(firstChild.nextSibling)\n        target.removeChild(firstChild.nextSibling)\n      }\n      cleanUpElement(firstChild)\n      target.removeChild(firstChild)\n    }\n  }\n\n  /**\n   * @param {HtmxSwapStyle} swapStyle\n   * @param {Element} elt\n   * @param {Node} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapWithStyle(swapStyle, elt, target, fragment, settleInfo) {\n    switch (swapStyle) {\n      case \"none\":\n        return\n      case \"outerHTML\":\n        swapOuterHTML(target, fragment, settleInfo)\n        return\n      case \"afterbegin\":\n        swapAfterBegin(target, fragment, settleInfo)\n        return\n      case \"beforebegin\":\n        swapBeforeBegin(target, fragment, settleInfo)\n        return\n      case \"beforeend\":\n        swapBeforeEnd(target, fragment, settleInfo)\n        return\n      case \"afterend\":\n        swapAfterEnd(target, fragment, settleInfo)\n        return\n      case \"delete\":\n        swapDelete(target)\n        return\n      default:\n        var extensions = getExtensions(elt)\n        for (let i = 0; i < extensions.length; i++) {\n          const ext = extensions[i]\n          try {\n            const newElements = ext.handleSwap(\n              swapStyle,\n              target,\n              fragment,\n              settleInfo\n            )\n            if (newElements) {\n              if (Array.isArray(newElements)) {\n                // if handleSwap returns an array (like) of elements, we handle them\n                for (let j = 0; j < newElements.length; j++) {\n                  const child = newElements[j]\n                  if (\n                    child.nodeType !== Node.TEXT_NODE &&\n                    child.nodeType !== Node.COMMENT_NODE\n                  ) {\n                    settleInfo.tasks.push(makeAjaxLoadTask(child))\n                  }\n                }\n              }\n              return\n            }\n          } catch (e) {\n            logError(e)\n          }\n        }\n        if (swapStyle === \"innerHTML\") {\n          swapInnerHTML(target, fragment, settleInfo)\n        } else {\n          swapWithStyle(\n            htmx.config.defaultSwapStyle,\n            elt,\n            target,\n            fragment,\n            settleInfo\n          )\n        }\n    }\n  }\n\n  /**\n   * @param {DocumentFragment} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function findAndSwapOobElements(fragment, settleInfo) {\n    var oobElts = findAll(fragment, \"[hx-swap-oob], [data-hx-swap-oob]\")\n    forEach(oobElts, function (oobElement) {\n      if (\n        htmx.config.allowNestedOobSwaps ||\n        oobElement.parentElement === null\n      ) {\n        const oobValue = getAttributeValue(oobElement, \"hx-swap-oob\")\n        if (oobValue != null) {\n          oobSwap(oobValue, oobElement, settleInfo)\n        }\n      } else {\n        oobElement.removeAttribute(\"hx-swap-oob\")\n        oobElement.removeAttribute(\"data-hx-swap-oob\")\n      }\n    })\n    return oobElts.length > 0\n  }\n\n  /**\n   * Implements complete swapping pipeline, including: focus and selection preservation,\n   * title updates, scroll, OOB swapping, normal swapping and settling\n   * @param {string|Element} target\n   * @param {string} content\n   * @param {HtmxSwapSpecification} swapSpec\n   * @param {SwapOptions} [swapOptions]\n   */\n  function swap(target, content, swapSpec, swapOptions) {\n    if (!swapOptions) {\n      swapOptions = {}\n    }\n\n    target = resolveTarget(target)\n\n    // preserve focus and selection\n    const activeElt = document.activeElement\n    let selectionInfo = {}\n    try {\n      selectionInfo = {\n        elt: activeElt,\n        // @ts-ignore\n        start: activeElt ? activeElt.selectionStart : null,\n        // @ts-ignore\n        end: activeElt ? activeElt.selectionEnd : null,\n      }\n    } catch (e) {\n      // safari issue - see https://github.com/microsoft/playwright/issues/5894\n    }\n    const settleInfo = makeSettleInfo(target)\n\n    // For text content swaps, don't parse the response as HTML, just insert it\n    if (swapSpec.swapStyle === \"textContent\") {\n      target.textContent = content\n      // Otherwise, make the fragment and process it\n    } else {\n      let fragment = makeFragment(content)\n\n      settleInfo.title = fragment.title\n\n      // select-oob swaps\n      if (swapOptions.selectOOB) {\n        const oobSelectValues = swapOptions.selectOOB.split(\",\")\n        for (let i = 0; i < oobSelectValues.length; i++) {\n          const oobSelectValue = oobSelectValues[i].split(\":\", 2)\n          let id = oobSelectValue[0].trim()\n          if (id.indexOf(\"#\") === 0) {\n            id = id.substring(1)\n          }\n          const oobValue = oobSelectValue[1] || \"true\"\n          const oobElement = fragment.querySelector(\"#\" + id)\n          if (oobElement) {\n            oobSwap(oobValue, oobElement, settleInfo)\n          }\n        }\n      }\n      // oob swaps\n      findAndSwapOobElements(fragment, settleInfo)\n      forEach(\n        findAll(fragment, \"template\"),\n        /** @param {HTMLTemplateElement} template */ function (template) {\n          if (findAndSwapOobElements(template.content, settleInfo)) {\n            // Avoid polluting the DOM with empty templates that were only used to encapsulate oob swap\n            template.remove()\n          }\n        }\n      )\n\n      // normal swap\n      if (swapOptions.select) {\n        const newFragment = getDocument().createDocumentFragment()\n        forEach(fragment.querySelectorAll(swapOptions.select), function (node) {\n          newFragment.appendChild(node)\n        })\n        fragment = newFragment\n      }\n      handlePreservedElements(fragment)\n      swapWithStyle(\n        swapSpec.swapStyle,\n        swapOptions.contextElement,\n        target,\n        fragment,\n        settleInfo\n      )\n    }\n\n    // apply saved focus and selection information to swapped content\n    if (\n      selectionInfo.elt &&\n      !bodyContains(selectionInfo.elt) &&\n      getRawAttribute(selectionInfo.elt, \"id\")\n    ) {\n      const newActiveElt = document.getElementById(\n        getRawAttribute(selectionInfo.elt, \"id\")\n      )\n      const focusOptions = {\n        preventScroll:\n          swapSpec.focusScroll !== undefined\n            ? !swapSpec.focusScroll\n            : !htmx.config.defaultFocusScroll,\n      }\n      if (newActiveElt) {\n        // @ts-ignore\n        if (selectionInfo.start && newActiveElt.setSelectionRange) {\n          try {\n            // @ts-ignore\n            newActiveElt.setSelectionRange(\n              selectionInfo.start,\n              selectionInfo.end\n            )\n          } catch (e) {\n            // the setSelectionRange method is present on fields that don't support it, so just let this fail\n          }\n        }\n        newActiveElt.focus(focusOptions)\n      }\n    }\n\n    target.classList.remove(htmx.config.swappingClass)\n    forEach(settleInfo.elts, function (elt) {\n      if (elt.classList) {\n        elt.classList.add(htmx.config.settlingClass)\n      }\n      triggerEvent(elt, \"htmx:afterSwap\", swapOptions.eventInfo)\n    })\n    if (swapOptions.afterSwapCallback) {\n      swapOptions.afterSwapCallback()\n    }\n\n    // merge in new title after swap but before settle\n    if (!swapSpec.ignoreTitle) {\n      handleTitle(settleInfo.title)\n    }\n\n    // settle\n    const doSettle = function () {\n      forEach(settleInfo.tasks, function (task) {\n        task.call()\n      })\n      forEach(settleInfo.elts, function (elt) {\n        if (elt.classList) {\n          elt.classList.remove(htmx.config.settlingClass)\n        }\n        triggerEvent(elt, \"htmx:afterSettle\", swapOptions.eventInfo)\n      })\n\n      if (swapOptions.anchor) {\n        const anchorTarget = asElement(resolveTarget(\"#\" + swapOptions.anchor))\n        if (anchorTarget) {\n          anchorTarget.scrollIntoView({ block: \"start\", behavior: \"auto\" })\n        }\n      }\n\n      updateScrollState(settleInfo.elts, swapSpec)\n      if (swapOptions.afterSettleCallback) {\n        swapOptions.afterSettleCallback()\n      }\n    }\n\n    if (swapSpec.settleDelay > 0) {\n      getWindow().setTimeout(doSettle, swapSpec.settleDelay)\n    } else {\n      doSettle()\n    }\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @param {string} header\n   * @param {EventTarget} elt\n   */\n  function handleTriggerHeader(xhr, header, elt) {\n    const triggerBody = xhr.getResponseHeader(header)\n    if (triggerBody.indexOf(\"{\") === 0) {\n      const triggers = parseJSON(triggerBody)\n      for (const eventName in triggers) {\n        if (triggers.hasOwnProperty(eventName)) {\n          let detail = triggers[eventName]\n          if (isRawObject(detail)) {\n            // @ts-ignore\n            elt = detail.target !== undefined ? detail.target : elt\n          } else {\n            detail = { value: detail }\n          }\n          triggerEvent(elt, eventName, detail)\n        }\n      }\n    } else {\n      const eventNames = triggerBody.split(\",\")\n      for (let i = 0; i < eventNames.length; i++) {\n        triggerEvent(elt, eventNames[i].trim(), [])\n      }\n    }\n  }\n\n  const WHITESPACE = /\\s/\n  const WHITESPACE_OR_COMMA = /[\\s,]/\n  const SYMBOL_START = /[_$a-zA-Z]/\n  const SYMBOL_CONT = /[_$a-zA-Z0-9]/\n  const STRINGISH_START = ['\"', \"'\", \"/\"]\n  const NOT_WHITESPACE = /[^\\s]/\n  const COMBINED_SELECTOR_START = /[{(]/\n  const COMBINED_SELECTOR_END = /[})]/\n\n  /**\n   * @param {string} str\n   * @returns {string[]}\n   */\n  function tokenizeString(str) {\n    /** @type string[] */\n    const tokens = []\n    let position = 0\n    while (position < str.length) {\n      if (SYMBOL_START.exec(str.charAt(position))) {\n        var startPosition = position\n        while (SYMBOL_CONT.exec(str.charAt(position + 1))) {\n          position++\n        }\n        tokens.push(str.substr(startPosition, position - startPosition + 1))\n      } else if (STRINGISH_START.indexOf(str.charAt(position)) !== -1) {\n        const startChar = str.charAt(position)\n        var startPosition = position\n        position++\n        while (position < str.length && str.charAt(position) !== startChar) {\n          if (str.charAt(position) === \"\\\\\") {\n            position++\n          }\n          position++\n        }\n        tokens.push(str.substr(startPosition, position - startPosition + 1))\n      } else {\n        const symbol = str.charAt(position)\n        tokens.push(symbol)\n      }\n      position++\n    }\n    return tokens\n  }\n\n  /**\n   * @param {string} token\n   * @param {string|null} last\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n  function isPossibleRelativeReference(token, last, paramName) {\n    return (\n      SYMBOL_START.exec(token.charAt(0)) &&\n      token !== \"true\" &&\n      token !== \"false\" &&\n      token !== \"this\" &&\n      token !== paramName &&\n      last !== \".\"\n    )\n  }\n\n  /**\n   * @param {EventTarget|string} elt\n   * @param {string[]} tokens\n   * @param {string} paramName\n   * @returns {ConditionalFunction|null}\n   */\n  function maybeGenerateConditional(elt, tokens, paramName) {\n    if (tokens[0] === \"[\") {\n      tokens.shift()\n      let bracketCount = 1\n      let conditionalSource = \" return (function(\" + paramName + \"){ return (\"\n      let last = null\n      while (tokens.length > 0) {\n        const token = tokens[0]\n        // @ts-ignore For some reason tsc doesn't understand the shift call, and thinks we're comparing the same value here, i.e. '[' vs ']'\n        if (token === \"]\") {\n          bracketCount--\n          if (bracketCount === 0) {\n            if (last === null) {\n              conditionalSource = conditionalSource + \"true\"\n            }\n            tokens.shift()\n            conditionalSource += \")})\"\n            try {\n              const conditionFunction = maybeEval(\n                elt,\n                function () {\n                  return Function(conditionalSource)()\n                },\n                function () {\n                  return true\n                }\n              )\n              conditionFunction.source = conditionalSource\n              return conditionFunction\n            } catch (e) {\n              triggerErrorEvent(getDocument().body, \"htmx:syntax:error\", {\n                error: e,\n                source: conditionalSource,\n              })\n              return null\n            }\n          }\n        } else if (token === \"[\") {\n          bracketCount++\n        }\n        if (isPossibleRelativeReference(token, last, paramName)) {\n          conditionalSource +=\n            \"((\" +\n            paramName +\n            \".\" +\n            token +\n            \") ? (\" +\n            paramName +\n            \".\" +\n            token +\n            \") : (window.\" +\n            token +\n            \"))\"\n        } else {\n          conditionalSource = conditionalSource + token\n        }\n        last = tokens.shift()\n      }\n    }\n  }\n\n  /**\n   * @param {string[]} tokens\n   * @param {RegExp} match\n   * @returns {string}\n   */\n  function consumeUntil(tokens, match) {\n    let result = \"\"\n    while (tokens.length > 0 && !match.test(tokens[0])) {\n      result += tokens.shift()\n    }\n    return result\n  }\n\n  /**\n   * @param {string[]} tokens\n   * @returns {string}\n   */\n  function consumeCSSSelector(tokens) {\n    let result\n    if (tokens.length > 0 && COMBINED_SELECTOR_START.test(tokens[0])) {\n      tokens.shift()\n      result = consumeUntil(tokens, COMBINED_SELECTOR_END).trim()\n      tokens.shift()\n    } else {\n      result = consumeUntil(tokens, WHITESPACE_OR_COMMA)\n    }\n    return result\n  }\n\n  const INPUT_SELECTOR = \"input, textarea, select\"\n\n  /**\n   * @param {Element} elt\n   * @param {string} explicitTrigger\n   * @param {Object} cache for trigger specs\n   * @returns {HtmxTriggerSpecification[]}\n   */\n  function parseAndCacheTrigger(elt, explicitTrigger, cache) {\n    /** @type HtmxTriggerSpecification[] */\n    const triggerSpecs = []\n    const tokens = tokenizeString(explicitTrigger)\n    do {\n      consumeUntil(tokens, NOT_WHITESPACE)\n      const initialLength = tokens.length\n      const trigger = consumeUntil(tokens, /[,\\[\\s]/)\n      if (trigger !== \"\") {\n        if (trigger === \"every\") {\n          /** @type HtmxTriggerSpecification */\n          const every = { trigger: \"every\" }\n          consumeUntil(tokens, NOT_WHITESPACE)\n          every.pollInterval = parseInterval(consumeUntil(tokens, /[,\\[\\s]/))\n          consumeUntil(tokens, NOT_WHITESPACE)\n          var eventFilter = maybeGenerateConditional(elt, tokens, \"event\")\n          if (eventFilter) {\n            every.eventFilter = eventFilter\n          }\n          triggerSpecs.push(every)\n        } else {\n          /** @type HtmxTriggerSpecification */\n          const triggerSpec = { trigger }\n          var eventFilter = maybeGenerateConditional(elt, tokens, \"event\")\n          if (eventFilter) {\n            triggerSpec.eventFilter = eventFilter\n          }\n          while (tokens.length > 0 && tokens[0] !== \",\") {\n            consumeUntil(tokens, NOT_WHITESPACE)\n            const token = tokens.shift()\n            if (token === \"changed\") {\n              triggerSpec.changed = true\n            } else if (token === \"once\") {\n              triggerSpec.once = true\n            } else if (token === \"consume\") {\n              triggerSpec.consume = true\n            } else if (token === \"delay\" && tokens[0] === \":\") {\n              tokens.shift()\n              triggerSpec.delay = parseInterval(\n                consumeUntil(tokens, WHITESPACE_OR_COMMA)\n              )\n            } else if (token === \"from\" && tokens[0] === \":\") {\n              tokens.shift()\n              if (COMBINED_SELECTOR_START.test(tokens[0])) {\n                var from_arg = consumeCSSSelector(tokens)\n              } else {\n                var from_arg = consumeUntil(tokens, WHITESPACE_OR_COMMA)\n                if (\n                  from_arg === \"closest\" ||\n                  from_arg === \"find\" ||\n                  from_arg === \"next\" ||\n                  from_arg === \"previous\"\n                ) {\n                  tokens.shift()\n                  const selector = consumeCSSSelector(tokens)\n                  // `next` and `previous` allow a selector-less syntax\n                  if (selector.length > 0) {\n                    from_arg += \" \" + selector\n                  }\n                }\n              }\n              triggerSpec.from = from_arg\n            } else if (token === \"target\" && tokens[0] === \":\") {\n              tokens.shift()\n              triggerSpec.target = consumeCSSSelector(tokens)\n            } else if (token === \"throttle\" && tokens[0] === \":\") {\n              tokens.shift()\n              triggerSpec.throttle = parseInterval(\n                consumeUntil(tokens, WHITESPACE_OR_COMMA)\n              )\n            } else if (token === \"queue\" && tokens[0] === \":\") {\n              tokens.shift()\n              triggerSpec.queue = consumeUntil(tokens, WHITESPACE_OR_COMMA)\n            } else if (token === \"root\" && tokens[0] === \":\") {\n              tokens.shift()\n              triggerSpec[token] = consumeCSSSelector(tokens)\n            } else if (token === \"threshold\" && tokens[0] === \":\") {\n              tokens.shift()\n              triggerSpec[token] = consumeUntil(tokens, WHITESPACE_OR_COMMA)\n            } else {\n              triggerErrorEvent(elt, \"htmx:syntax:error\", {\n                token: tokens.shift(),\n              })\n            }\n          }\n          triggerSpecs.push(triggerSpec)\n        }\n      }\n      if (tokens.length === initialLength) {\n        triggerErrorEvent(elt, \"htmx:syntax:error\", { token: tokens.shift() })\n      }\n      consumeUntil(tokens, NOT_WHITESPACE)\n    } while (tokens[0] === \",\" && tokens.shift())\n    if (cache) {\n      cache[explicitTrigger] = triggerSpecs\n    }\n    return triggerSpecs\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {HtmxTriggerSpecification[]}\n   */\n  function getTriggerSpecs(elt) {\n    const explicitTrigger = getAttributeValue(elt, \"hx-trigger\")\n    let triggerSpecs = []\n    if (explicitTrigger) {\n      const cache = htmx.config.triggerSpecsCache\n      triggerSpecs =\n        (cache && cache[explicitTrigger]) ||\n        parseAndCacheTrigger(elt, explicitTrigger, cache)\n    }\n\n    if (triggerSpecs.length > 0) {\n      return triggerSpecs\n    } else if (matches(elt, \"form\")) {\n      return [{ trigger: \"submit\" }]\n    } else if (matches(elt, 'input[type=\"button\"], input[type=\"submit\"]')) {\n      return [{ trigger: \"click\" }]\n    } else if (matches(elt, INPUT_SELECTOR)) {\n      return [{ trigger: \"change\" }]\n    } else {\n      return [{ trigger: \"click\" }]\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   */\n  function cancelPolling(elt) {\n    getInternalData(elt).cancelled = true\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {TriggerHandler} handler\n   * @param {HtmxTriggerSpecification} spec\n   */\n  function processPolling(elt, handler, spec) {\n    const nodeData = getInternalData(elt)\n    nodeData.timeout = getWindow().setTimeout(function () {\n      if (bodyContains(elt) && nodeData.cancelled !== true) {\n        if (\n          !maybeFilterEvent(\n            spec,\n            elt,\n            makeEvent(\"hx:poll:trigger\", {\n              triggerSpec: spec,\n              target: elt,\n            })\n          )\n        ) {\n          handler(elt)\n        }\n        processPolling(elt, handler, spec)\n      }\n    }, spec.pollInterval)\n  }\n\n  /**\n   * @param {HTMLAnchorElement} elt\n   * @returns {boolean}\n   */\n  function isLocalLink(elt) {\n    return (\n      location.hostname === elt.hostname &&\n      getRawAttribute(elt, \"href\") &&\n      getRawAttribute(elt, \"href\").indexOf(\"#\") !== 0\n    )\n  }\n\n  /**\n   * @param {Element} elt\n   */\n  function eltIsDisabled(elt) {\n    return closest(elt, htmx.config.disableSelector)\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {HtmxTriggerSpecification[]} triggerSpecs\n   */\n  function boostElement(elt, nodeData, triggerSpecs) {\n    if (\n      (elt instanceof HTMLAnchorElement &&\n        isLocalLink(elt) &&\n        (elt.target === \"\" || elt.target === \"_self\")) ||\n      (elt.tagName === \"FORM\" &&\n        String(getRawAttribute(elt, \"method\")).toLowerCase() !== \"dialog\")\n    ) {\n      nodeData.boosted = true\n      let verb, path\n      if (elt.tagName === \"A\") {\n        verb = \"get\"\n        path = getRawAttribute(elt, \"href\")\n      } else {\n        const rawAttribute = getRawAttribute(elt, \"method\")\n        verb = rawAttribute ? rawAttribute.toLowerCase() : \"get\"\n        if (verb === \"get\") {\n        }\n        path = getRawAttribute(elt, \"action\")\n      }\n      triggerSpecs.forEach(function (triggerSpec) {\n        addEventListener(\n          elt,\n          function (node, evt) {\n            const elt = asElement(node)\n            if (eltIsDisabled(elt)) {\n              cleanUpElement(elt)\n              return\n            }\n            issueAjaxRequest(verb, path, elt, evt)\n          },\n          nodeData,\n          triggerSpec,\n          true\n        )\n      })\n    }\n  }\n\n  /**\n   * @param {Event} evt\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function shouldCancel(evt, node) {\n    const elt = asElement(node)\n    if (!elt) {\n      return false\n    }\n    if (evt.type === \"submit\" || evt.type === \"click\") {\n      if (elt.tagName === \"FORM\") {\n        return true\n      }\n      if (\n        matches(elt, 'input[type=\"submit\"], button') &&\n        closest(elt, \"form\") !== null\n      ) {\n        return true\n      }\n      if (\n        elt instanceof HTMLAnchorElement &&\n        elt.href &&\n        (elt.getAttribute(\"href\") === \"#\" ||\n          elt.getAttribute(\"href\").indexOf(\"#\") !== 0)\n      ) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {Event|MouseEvent|KeyboardEvent|TouchEvent} evt\n   * @returns {boolean}\n   */\n  function ignoreBoostedAnchorCtrlClick(elt, evt) {\n    return (\n      getInternalData(elt).boosted &&\n      elt instanceof HTMLAnchorElement &&\n      evt.type === \"click\" &&\n      // @ts-ignore this will resolve to undefined for events that don't define those properties, which is fine\n      (evt.ctrlKey || evt.metaKey)\n    )\n  }\n\n  /**\n   * @param {HtmxTriggerSpecification} triggerSpec\n   * @param {Node} elt\n   * @param {Event} evt\n   * @returns {boolean}\n   */\n  function maybeFilterEvent(triggerSpec, elt, evt) {\n    const eventFilter = triggerSpec.eventFilter\n    if (eventFilter) {\n      try {\n        return eventFilter.call(elt, evt) !== true\n      } catch (e) {\n        const source = eventFilter.source\n        triggerErrorEvent(getDocument().body, \"htmx:eventFilter:error\", {\n          error: e,\n          source,\n        })\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {TriggerHandler} handler\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {HtmxTriggerSpecification} triggerSpec\n   * @param {boolean} [explicitCancel]\n   */\n  function addEventListener(\n    elt,\n    handler,\n    nodeData,\n    triggerSpec,\n    explicitCancel\n  ) {\n    const elementData = getInternalData(elt)\n    /** @type {(Node|Window)[]} */\n    let eltsToListenOn\n    if (triggerSpec.from) {\n      eltsToListenOn = querySelectorAllExt(elt, triggerSpec.from)\n    } else {\n      eltsToListenOn = [elt]\n    }\n    // store the initial values of the elements, so we can tell if they change\n    if (triggerSpec.changed) {\n      eltsToListenOn.forEach(function (eltToListenOn) {\n        const eltToListenOnData = getInternalData(eltToListenOn)\n        // @ts-ignore value will be undefined for non-input elements, which is fine\n        eltToListenOnData.lastValue = eltToListenOn.value\n      })\n    }\n    forEach(eltsToListenOn, function (eltToListenOn) {\n      /** @type EventListener */\n      const eventListener = function (evt) {\n        if (!bodyContains(elt)) {\n          eltToListenOn.removeEventListener(triggerSpec.trigger, eventListener)\n          return\n        }\n        if (ignoreBoostedAnchorCtrlClick(elt, evt)) {\n          return\n        }\n        if (explicitCancel || shouldCancel(evt, elt)) {\n          evt.preventDefault()\n        }\n        if (maybeFilterEvent(triggerSpec, elt, evt)) {\n          return\n        }\n        const eventData = getInternalData(evt)\n        eventData.triggerSpec = triggerSpec\n        if (eventData.handledFor == null) {\n          eventData.handledFor = []\n        }\n        if (eventData.handledFor.indexOf(elt) < 0) {\n          eventData.handledFor.push(elt)\n          if (triggerSpec.consume) {\n            evt.stopPropagation()\n          }\n          if (triggerSpec.target && evt.target) {\n            if (!matches(asElement(evt.target), triggerSpec.target)) {\n              return\n            }\n          }\n          if (triggerSpec.once) {\n            if (elementData.triggeredOnce) {\n              return\n            } else {\n              elementData.triggeredOnce = true\n            }\n          }\n          if (triggerSpec.changed) {\n            const eltToListenOnData = getInternalData(eltToListenOn)\n            // @ts-ignore value will be undefined for non-input elements, which is fine\n            const value = eltToListenOn.value\n            if (eltToListenOnData.lastValue === value) {\n              return\n            }\n            eltToListenOnData.lastValue = value\n          }\n          if (elementData.delayed) {\n            clearTimeout(elementData.delayed)\n          }\n          if (elementData.throttle) {\n            return\n          }\n\n          if (triggerSpec.throttle > 0) {\n            if (!elementData.throttle) {\n              triggerEvent(elt, \"htmx:trigger\")\n              handler(elt, evt)\n              elementData.throttle = getWindow().setTimeout(function () {\n                elementData.throttle = null\n              }, triggerSpec.throttle)\n            }\n          } else if (triggerSpec.delay > 0) {\n            elementData.delayed = getWindow().setTimeout(function () {\n              triggerEvent(elt, \"htmx:trigger\")\n              handler(elt, evt)\n            }, triggerSpec.delay)\n          } else {\n            triggerEvent(elt, \"htmx:trigger\")\n            handler(elt, evt)\n          }\n        }\n      }\n      if (nodeData.listenerInfos == null) {\n        nodeData.listenerInfos = []\n      }\n      nodeData.listenerInfos.push({\n        trigger: triggerSpec.trigger,\n        listener: eventListener,\n        on: eltToListenOn,\n      })\n      eltToListenOn.addEventListener(triggerSpec.trigger, eventListener)\n    })\n  }\n\n  let windowIsScrolling = false // used by initScrollHandler\n  let scrollHandler = null\n  function initScrollHandler() {\n    if (!scrollHandler) {\n      scrollHandler = function () {\n        windowIsScrolling = true\n      }\n      window.addEventListener(\"scroll\", scrollHandler)\n      setInterval(function () {\n        if (windowIsScrolling) {\n          windowIsScrolling = false\n          forEach(\n            getDocument().querySelectorAll(\n              \"[hx-trigger*='revealed'],[data-hx-trigger*='revealed']\"\n            ),\n            function (elt) {\n              maybeReveal(elt)\n            }\n          )\n        }\n      }, 200)\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   */\n  function maybeReveal(elt) {\n    if (!hasAttribute(elt, \"data-hx-revealed\") && isScrolledIntoView(elt)) {\n      elt.setAttribute(\"data-hx-revealed\", \"true\")\n      const nodeData = getInternalData(elt)\n      if (nodeData.initHash) {\n        triggerEvent(elt, \"revealed\")\n      } else {\n        // if the node isn't initialized, wait for it before triggering the request\n        elt.addEventListener(\n          \"htmx:afterProcessNode\",\n          function () {\n            triggerEvent(elt, \"revealed\")\n          },\n          { once: true }\n        )\n      }\n    }\n  }\n\n  //= ===================================================================\n\n  /**\n   * @param {Element} elt\n   * @param {TriggerHandler} handler\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {number} delay\n   */\n  function loadImmediately(elt, handler, nodeData, delay) {\n    const load = function () {\n      if (!nodeData.loaded) {\n        nodeData.loaded = true\n        handler(elt)\n      }\n    }\n    if (delay > 0) {\n      getWindow().setTimeout(load, delay)\n    } else {\n      load()\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {HtmxTriggerSpecification[]} triggerSpecs\n   * @returns {boolean}\n   */\n  function processVerbs(elt, nodeData, triggerSpecs) {\n    let explicitAction = false\n    forEach(VERBS, function (verb) {\n      if (hasAttribute(elt, \"hx-\" + verb)) {\n        const path = getAttributeValue(elt, \"hx-\" + verb)\n        explicitAction = true\n        nodeData.path = path\n        nodeData.verb = verb\n        triggerSpecs.forEach(function (triggerSpec) {\n          addTriggerHandler(elt, triggerSpec, nodeData, function (node, evt) {\n            const elt = asElement(node)\n            if (closest(elt, htmx.config.disableSelector)) {\n              cleanUpElement(elt)\n              return\n            }\n            issueAjaxRequest(verb, path, elt, evt)\n          })\n        })\n      }\n    })\n    return explicitAction\n  }\n\n  /**\n   * @callback TriggerHandler\n   * @param {Node} elt\n   * @param {Event} [evt]\n   */\n\n  /**\n   * @param {Node} elt\n   * @param {HtmxTriggerSpecification} triggerSpec\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {TriggerHandler} handler\n   */\n  function addTriggerHandler(elt, triggerSpec, nodeData, handler) {\n    if (triggerSpec.trigger === \"revealed\") {\n      initScrollHandler()\n      addEventListener(elt, handler, nodeData, triggerSpec)\n      maybeReveal(asElement(elt))\n    } else if (triggerSpec.trigger === \"intersect\") {\n      const observerOptions = {}\n      if (triggerSpec.root) {\n        observerOptions.root = querySelectorExt(elt, triggerSpec.root)\n      }\n      if (triggerSpec.threshold) {\n        observerOptions.threshold = parseFloat(triggerSpec.threshold)\n      }\n      const observer = new IntersectionObserver(function (entries) {\n        for (let i = 0; i < entries.length; i++) {\n          const entry = entries[i]\n          if (entry.isIntersecting) {\n            triggerEvent(elt, \"intersect\")\n            break\n          }\n        }\n      }, observerOptions)\n      observer.observe(asElement(elt))\n      addEventListener(asElement(elt), handler, nodeData, triggerSpec)\n    } else if (triggerSpec.trigger === \"load\") {\n      if (!maybeFilterEvent(triggerSpec, elt, makeEvent(\"load\", { elt }))) {\n        loadImmediately(asElement(elt), handler, nodeData, triggerSpec.delay)\n      }\n    } else if (triggerSpec.pollInterval > 0) {\n      nodeData.polling = true\n      processPolling(asElement(elt), handler, triggerSpec)\n    } else {\n      addEventListener(elt, handler, nodeData, triggerSpec)\n    }\n  }\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function shouldProcessHxOn(node) {\n    const elt = asElement(node)\n    if (!elt) {\n      return false\n    }\n    const attributes = elt.attributes\n    for (let j = 0; j < attributes.length; j++) {\n      const attrName = attributes[j].name\n      if (\n        startsWith(attrName, \"hx-on:\") ||\n        startsWith(attrName, \"data-hx-on:\") ||\n        startsWith(attrName, \"hx-on-\") ||\n        startsWith(attrName, \"data-hx-on-\")\n      ) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * @param {Node} elt\n   * @returns {Element[]}\n   */\n  const HX_ON_QUERY = new XPathEvaluator().createExpression(\n    './/*[@*[ starts-with(name(), \"hx-on:\") or starts-with(name(), \"data-hx-on:\") or' +\n      ' starts-with(name(), \"hx-on-\") or starts-with(name(), \"data-hx-on-\") ]]'\n  )\n\n  function processHXOnRoot(elt, elements) {\n    if (shouldProcessHxOn(elt)) {\n      elements.push(asElement(elt))\n    }\n    const iter = HX_ON_QUERY.evaluate(elt)\n    let node = null\n    while ((node = iter.iterateNext())) elements.push(asElement(node))\n  }\n\n  function findHxOnWildcardElements(elt) {\n    /** @type {Element[]} */\n    const elements = []\n    if (elt instanceof DocumentFragment) {\n      for (const child of elt.childNodes) {\n        processHXOnRoot(child, elements)\n      }\n    } else {\n      processHXOnRoot(elt, elements)\n    }\n    return elements\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {NodeListOf<Element>|[]}\n   */\n  function findElementsToProcess(elt) {\n    if (elt.querySelectorAll) {\n      const boostedSelector =\n        \", [hx-boost] a, [data-hx-boost] a, a[hx-boost], a[data-hx-boost]\"\n\n      const extensionSelectors = []\n      for (const e in extensions) {\n        const extension = extensions[e]\n        if (extension.getSelectors) {\n          var selectors = extension.getSelectors()\n          if (selectors) {\n            extensionSelectors.push(selectors)\n          }\n        }\n      }\n\n      const results = elt.querySelectorAll(\n        VERB_SELECTOR +\n          boostedSelector +\n          \", form, [type='submit'],\" +\n          \" [hx-ext], [data-hx-ext], [hx-trigger], [data-hx-trigger]\" +\n          extensionSelectors\n            .flat()\n            .map((s) => \", \" + s)\n            .join(\"\")\n      )\n\n      return results\n    } else {\n      return []\n    }\n  }\n\n  /**\n   * Handle submit buttons/inputs that have the form attribute set\n   * see https://developer.mozilla.org/docs/Web/HTML/Element/button\n   * @param {Event} evt\n   */\n  function maybeSetLastButtonClicked(evt) {\n    const elt = /** @type {HTMLButtonElement|HTMLInputElement} */ (\n      closest(asElement(evt.target), \"button, input[type='submit']\")\n    )\n    const internalData = getRelatedFormData(evt)\n    if (internalData) {\n      internalData.lastButtonClicked = elt\n    }\n  }\n\n  /**\n   * @param {Event} evt\n   */\n  function maybeUnsetLastButtonClicked(evt) {\n    const internalData = getRelatedFormData(evt)\n    if (internalData) {\n      internalData.lastButtonClicked = null\n    }\n  }\n\n  /**\n   * @param {Event} evt\n   * @returns {HtmxNodeInternalData|undefined}\n   */\n  function getRelatedFormData(evt) {\n    const elt = closest(asElement(evt.target), \"button, input[type='submit']\")\n    if (!elt) {\n      return\n    }\n    const form =\n      resolveTarget(\"#\" + getRawAttribute(elt, \"form\"), elt.getRootNode()) ||\n      closest(elt, \"form\")\n    if (!form) {\n      return\n    }\n    return getInternalData(form)\n  }\n\n  /**\n   * @param {EventTarget} elt\n   */\n  function initButtonTracking(elt) {\n    // need to handle both click and focus in:\n    //   focusin - in case someone tabs in to a button and hits the space bar\n    //   click - on OSX buttons do not focus on click see https://bugs.webkit.org/show_bug.cgi?id=13724\n    elt.addEventListener(\"click\", maybeSetLastButtonClicked)\n    elt.addEventListener(\"focusin\", maybeSetLastButtonClicked)\n    elt.addEventListener(\"focusout\", maybeUnsetLastButtonClicked)\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} eventName\n   * @param {string} code\n   */\n  function addHxOnEventHandler(elt, eventName, code) {\n    const nodeData = getInternalData(elt)\n    if (!Array.isArray(nodeData.onHandlers)) {\n      nodeData.onHandlers = []\n    }\n    let func\n    /** @type EventListener */\n    const listener = function (e) {\n      maybeEval(elt, function () {\n        if (eltIsDisabled(elt)) {\n          return\n        }\n        if (!func) {\n          func = new Function(\"event\", code)\n        }\n        func.call(elt, e)\n      })\n    }\n    elt.addEventListener(eventName, listener)\n    nodeData.onHandlers.push({ event: eventName, listener })\n  }\n\n  /**\n   * @param {Element} elt\n   */\n  function processHxOnWildcard(elt) {\n    // wipe any previous on handlers so that this function takes precedence\n    deInitOnHandlers(elt)\n\n    for (let i = 0; i < elt.attributes.length; i++) {\n      const name = elt.attributes[i].name\n      const value = elt.attributes[i].value\n      if (startsWith(name, \"hx-on\") || startsWith(name, \"data-hx-on\")) {\n        const afterOnPosition = name.indexOf(\"-on\") + 3\n        const nextChar = name.slice(afterOnPosition, afterOnPosition + 1)\n        if (nextChar === \"-\" || nextChar === \":\") {\n          let eventName = name.slice(afterOnPosition + 1)\n          // if the eventName starts with a colon or dash, prepend \"htmx\" for shorthand support\n          if (startsWith(eventName, \":\")) {\n            eventName = \"htmx\" + eventName\n          } else if (startsWith(eventName, \"-\")) {\n            eventName = \"htmx:\" + eventName.slice(1)\n          } else if (startsWith(eventName, \"htmx-\")) {\n            eventName = \"htmx:\" + eventName.slice(5)\n          }\n\n          addHxOnEventHandler(elt, eventName, value)\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Element|HTMLInputElement} elt\n   */\n  function initNode(elt) {\n    if (closest(elt, htmx.config.disableSelector)) {\n      cleanUpElement(elt)\n      return\n    }\n    const nodeData = getInternalData(elt)\n    if (nodeData.initHash !== attributeHash(elt)) {\n      // clean up any previously processed info\n      deInitNode(elt)\n\n      nodeData.initHash = attributeHash(elt)\n\n      triggerEvent(elt, \"htmx:beforeProcessNode\")\n\n      // @ts-ignore value will be undefined for non-input elements, which is fine\n      if (elt.value) {\n        // @ts-ignore\n        nodeData.lastValue = elt.value\n      }\n\n      const triggerSpecs = getTriggerSpecs(elt)\n      const hasExplicitHttpAction = processVerbs(elt, nodeData, triggerSpecs)\n\n      if (!hasExplicitHttpAction) {\n        if (getClosestAttributeValue(elt, \"hx-boost\") === \"true\") {\n          boostElement(elt, nodeData, triggerSpecs)\n        } else if (hasAttribute(elt, \"hx-trigger\")) {\n          triggerSpecs.forEach(function (triggerSpec) {\n            // For \"naked\" triggers, don't do anything at all\n            addTriggerHandler(elt, triggerSpec, nodeData, function () {})\n          })\n        }\n      }\n\n      // Handle submit buttons/inputs that have the form attribute set\n      // see https://developer.mozilla.org/docs/Web/HTML/Element/button\n      if (\n        elt.tagName === \"FORM\" ||\n        (getRawAttribute(elt, \"type\") === \"submit\" && hasAttribute(elt, \"form\"))\n      ) {\n        initButtonTracking(elt)\n      }\n\n      triggerEvent(elt, \"htmx:afterProcessNode\")\n    }\n  }\n\n  /**\n   * Processes new content, enabling htmx behavior. This can be useful if you have content that is added to the DOM outside of the normal htmx request cycle but still want htmx attributes to work.\n   *\n   * @see https://htmx.org/api/#process\n   *\n   * @param {Element|string} elt element to process\n   */\n  function processNode(elt) {\n    elt = resolveTarget(elt)\n    if (closest(elt, htmx.config.disableSelector)) {\n      cleanUpElement(elt)\n      return\n    }\n    initNode(elt)\n    forEach(findElementsToProcess(elt), function (child) {\n      initNode(child)\n    })\n    forEach(findHxOnWildcardElements(elt), processHxOnWildcard)\n  }\n\n  //= ===================================================================\n  // Event/Log Support\n  //= ===================================================================\n\n  /**\n   * @param {string} str\n   * @returns {string}\n   */\n  function kebabEventName(str) {\n    return str.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase()\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {any} detail\n   * @returns {CustomEvent}\n   */\n  function makeEvent(eventName, detail) {\n    let evt\n    if (window.CustomEvent && typeof window.CustomEvent === \"function\") {\n      // TODO: `composed: true` here is a hack to make global event handlers work with events in shadow DOM\n      // This breaks expected encapsulation but needs to be here until decided otherwise by core devs\n      evt = new CustomEvent(eventName, {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail,\n      })\n    } else {\n      evt = getDocument().createEvent(\"CustomEvent\")\n      evt.initCustomEvent(eventName, true, true, detail)\n    }\n    return evt\n  }\n\n  /**\n   * @param {EventTarget|string} elt\n   * @param {string} eventName\n   * @param {any=} detail\n   */\n  function triggerErrorEvent(elt, eventName, detail) {\n    triggerEvent(elt, eventName, mergeObjects({ error: eventName }, detail))\n  }\n\n  /**\n   * @param {string} eventName\n   * @returns {boolean}\n   */\n  function ignoreEventForLogging(eventName) {\n    return eventName === \"htmx:afterProcessNode\"\n  }\n\n  /**\n   * `withExtensions` locates all active extensions for a provided element, then\n   * executes the provided function using each of the active extensions.  It should\n   * be called internally at every extendable execution point in htmx.\n   *\n   * @param {Element} elt\n   * @param {(extension:HtmxExtension) => void} toDo\n   * @returns void\n   */\n  function withExtensions(elt, toDo) {\n    forEach(getExtensions(elt), function (extension) {\n      try {\n        toDo(extension)\n      } catch (e) {\n        logError(e)\n      }\n    })\n  }\n\n  function logError(msg) {\n    if (console.error) {\n      console.error(msg)\n    } else if (console.log) {\n      console.log(\"ERROR: \", msg)\n    }\n  }\n\n  /**\n   * Triggers a given event on an element\n   *\n   * @see https://htmx.org/api/#trigger\n   *\n   * @param {EventTarget|string} elt the element to trigger the event on\n   * @param {string} eventName the name of the event to trigger\n   * @param {any=} detail details for the event\n   * @returns {boolean}\n   */\n  function triggerEvent(elt, eventName, detail) {\n    elt = resolveTarget(elt)\n    if (detail == null) {\n      detail = {}\n    }\n    detail.elt = elt\n    const event = makeEvent(eventName, detail)\n    if (htmx.logger && !ignoreEventForLogging(eventName)) {\n      htmx.logger(elt, eventName, detail)\n    }\n    if (detail.error) {\n      logError(detail.error)\n      triggerEvent(elt, \"htmx:error\", { errorInfo: detail })\n    }\n    let eventResult = elt.dispatchEvent(event)\n    const kebabName = kebabEventName(eventName)\n    if (eventResult && kebabName !== eventName) {\n      const kebabedEvent = makeEvent(kebabName, event.detail)\n      eventResult = eventResult && elt.dispatchEvent(kebabedEvent)\n    }\n    withExtensions(asElement(elt), function (extension) {\n      eventResult =\n        eventResult &&\n        extension.onEvent(eventName, event) !== false &&\n        !event.defaultPrevented\n    })\n    return eventResult\n  }\n\n  //= ===================================================================\n  // History Support\n  //= ===================================================================\n  let currentPathForHistory = location.pathname + location.search\n\n  /**\n   * @returns {Element}\n   */\n  function getHistoryElement() {\n    const historyElt = getDocument().querySelector(\n      \"[hx-history-elt],[data-hx-history-elt]\"\n    )\n    return historyElt || getDocument().body\n  }\n\n  /**\n   * @param {string} url\n   * @param {Element} rootElt\n   */\n  function saveToHistoryCache(url, rootElt) {\n    if (!canAccessLocalStorage()) {\n      return\n    }\n\n    // get state to save\n    const innerHTML = cleanInnerHtmlForHistory(rootElt)\n    const title = getDocument().title\n    const scroll = window.scrollY\n\n    if (htmx.config.historyCacheSize <= 0) {\n      // make sure that an eventually already existing cache is purged\n      localStorage.removeItem(\"htmx-history-cache\")\n      return\n    }\n\n    url = normalizePath(url)\n\n    const historyCache =\n      parseJSON(localStorage.getItem(\"htmx-history-cache\")) || []\n    for (let i = 0; i < historyCache.length; i++) {\n      if (historyCache[i].url === url) {\n        historyCache.splice(i, 1)\n        break\n      }\n    }\n\n    /** @type HtmxHistoryItem */\n    const newHistoryItem = { url, content: innerHTML, title, scroll }\n\n    triggerEvent(getDocument().body, \"htmx:historyItemCreated\", {\n      item: newHistoryItem,\n      cache: historyCache,\n    })\n\n    historyCache.push(newHistoryItem)\n    while (historyCache.length > htmx.config.historyCacheSize) {\n      historyCache.shift()\n    }\n\n    // keep trying to save the cache until it succeeds or is empty\n    while (historyCache.length > 0) {\n      try {\n        localStorage.setItem(\"htmx-history-cache\", JSON.stringify(historyCache))\n        break\n      } catch (e) {\n        triggerErrorEvent(getDocument().body, \"htmx:historyCacheError\", {\n          cause: e,\n          cache: historyCache,\n        })\n        historyCache.shift() // shrink the cache and retry\n      }\n    }\n  }\n\n  /**\n   * @typedef {Object} HtmxHistoryItem\n   * @property {string} url\n   * @property {string} content\n   * @property {string} title\n   * @property {number} scroll\n   */\n\n  /**\n   * @param {string} url\n   * @returns {HtmxHistoryItem|null}\n   */\n  function getCachedHistory(url) {\n    if (!canAccessLocalStorage()) {\n      return null\n    }\n\n    url = normalizePath(url)\n\n    const historyCache =\n      parseJSON(localStorage.getItem(\"htmx-history-cache\")) || []\n    for (let i = 0; i < historyCache.length; i++) {\n      if (historyCache[i].url === url) {\n        return historyCache[i]\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {string}\n   */\n  function cleanInnerHtmlForHistory(elt) {\n    const className = htmx.config.requestClass\n    const clone = /** @type Element */ (elt.cloneNode(true))\n    forEach(findAll(clone, \".\" + className), function (child) {\n      removeClassFromElement(child, className)\n    })\n    // remove the disabled attribute for any element disabled due to an htmx request\n    forEach(findAll(clone, \"[data-disabled-by-htmx]\"), function (child) {\n      child.removeAttribute(\"disabled\")\n    })\n    return clone.innerHTML\n  }\n\n  function saveCurrentPageToHistory() {\n    const elt = getHistoryElement()\n    const path = currentPathForHistory || location.pathname + location.search\n\n    // Allow history snapshot feature to be disabled where hx-history=\"false\"\n    // is present *anywhere* in the current document we're about to save,\n    // so we can prevent privileged data entering the cache.\n    // The page will still be reachable as a history entry, but htmx will fetch it\n    // live from the server onpopstate rather than look in the localStorage cache\n    let disableHistoryCache\n    try {\n      disableHistoryCache = getDocument().querySelector(\n        '[hx-history=\"false\" i],[data-hx-history=\"false\" i]'\n      )\n    } catch (e) {\n      // IE11: insensitive modifier not supported so fallback to case sensitive selector\n      disableHistoryCache = getDocument().querySelector(\n        '[hx-history=\"false\"],[data-hx-history=\"false\"]'\n      )\n    }\n    if (!disableHistoryCache) {\n      triggerEvent(getDocument().body, \"htmx:beforeHistorySave\", {\n        path,\n        historyElt: elt,\n      })\n      saveToHistoryCache(path, elt)\n    }\n\n    if (htmx.config.historyEnabled)\n      history.replaceState(\n        { htmx: true },\n        getDocument().title,\n        window.location.href\n      )\n  }\n\n  /**\n   * @param {string} path\n   */\n  function pushUrlIntoHistory(path) {\n    // remove the cache buster parameter, if any\n    if (htmx.config.getCacheBusterParam) {\n      path = path.replace(/org\\.htmx\\.cache-buster=[^&]*&?/, \"\")\n      if (endsWith(path, \"&\") || endsWith(path, \"?\")) {\n        path = path.slice(0, -1)\n      }\n    }\n    if (htmx.config.historyEnabled) {\n      history.pushState({ htmx: true }, \"\", path)\n    }\n    currentPathForHistory = path\n  }\n\n  /**\n   * @param {string} path\n   */\n  function replaceUrlInHistory(path) {\n    if (htmx.config.historyEnabled)\n      history.replaceState({ htmx: true }, \"\", path)\n    currentPathForHistory = path\n  }\n\n  /**\n   * @param {HtmxSettleTask[]} tasks\n   */\n  function settleImmediately(tasks) {\n    forEach(tasks, function (task) {\n      task.call(undefined)\n    })\n  }\n\n  /**\n   * @param {string} path\n   */\n  function loadHistoryFromServer(path) {\n    const request = new XMLHttpRequest()\n    const details = { path, xhr: request }\n    triggerEvent(getDocument().body, \"htmx:historyCacheMiss\", details)\n    request.open(\"GET\", path, true)\n    request.setRequestHeader(\"HX-Request\", \"true\")\n    request.setRequestHeader(\"HX-History-Restore-Request\", \"true\")\n    request.setRequestHeader(\"HX-Current-URL\", getDocument().location.href)\n    request.onload = function () {\n      if (this.status >= 200 && this.status < 400) {\n        triggerEvent(getDocument().body, \"htmx:historyCacheMissLoad\", details)\n        const fragment = makeFragment(this.response)\n        /** @type ParentNode */\n        const content =\n          fragment.querySelector(\"[hx-history-elt],[data-hx-history-elt]\") ||\n          fragment\n        const historyElement = getHistoryElement()\n        const settleInfo = makeSettleInfo(historyElement)\n        handleTitle(fragment.title)\n\n        swapInnerHTML(historyElement, content, settleInfo)\n        settleImmediately(settleInfo.tasks)\n        currentPathForHistory = path\n        triggerEvent(getDocument().body, \"htmx:historyRestore\", {\n          path,\n          cacheMiss: true,\n          serverResponse: this.response,\n        })\n      } else {\n        triggerErrorEvent(\n          getDocument().body,\n          \"htmx:historyCacheMissLoadError\",\n          details\n        )\n      }\n    }\n    request.send()\n  }\n\n  /**\n   * @param {string} [path]\n   */\n  function restoreHistory(path) {\n    saveCurrentPageToHistory()\n    path = path || location.pathname + location.search\n    const cached = getCachedHistory(path)\n    if (cached) {\n      const fragment = makeFragment(cached.content)\n      const historyElement = getHistoryElement()\n      const settleInfo = makeSettleInfo(historyElement)\n      handleTitle(fragment.title)\n      swapInnerHTML(historyElement, fragment, settleInfo)\n      settleImmediately(settleInfo.tasks)\n      getWindow().setTimeout(function () {\n        window.scrollTo(0, cached.scroll)\n      }, 0) // next 'tick', so browser has time to render layout\n      currentPathForHistory = path\n      triggerEvent(getDocument().body, \"htmx:historyRestore\", {\n        path,\n        item: cached,\n      })\n    } else {\n      if (htmx.config.refreshOnHistoryMiss) {\n        // @ts-ignore: optional parameter in reload() function throws error\n        // noinspection JSUnresolvedReference\n        window.location.reload(true)\n      } else {\n        loadHistoryFromServer(path)\n      }\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {Element[]}\n   */\n  function addRequestIndicatorClasses(elt) {\n    let indicators = /** @type Element[] */ (\n      findAttributeTargets(elt, \"hx-indicator\")\n    )\n    if (indicators == null) {\n      indicators = [elt]\n    }\n    forEach(indicators, function (ic) {\n      const internalData = getInternalData(ic)\n      internalData.requestCount = (internalData.requestCount || 0) + 1\n      ic.classList.add.call(ic.classList, htmx.config.requestClass)\n    })\n    return indicators\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {Element[]}\n   */\n  function disableElements(elt) {\n    let disabledElts = /** @type Element[] */ (\n      findAttributeTargets(elt, \"hx-disabled-elt\")\n    )\n    if (disabledElts == null) {\n      disabledElts = []\n    }\n    forEach(disabledElts, function (disabledElement) {\n      const internalData = getInternalData(disabledElement)\n      internalData.requestCount = (internalData.requestCount || 0) + 1\n      disabledElement.setAttribute(\"disabled\", \"\")\n      disabledElement.setAttribute(\"data-disabled-by-htmx\", \"\")\n    })\n    return disabledElts\n  }\n\n  /**\n   * @param {Element[]} indicators\n   * @param {Element[]} disabled\n   */\n  function removeRequestIndicators(indicators, disabled) {\n    forEach(indicators, function (ic) {\n      const internalData = getInternalData(ic)\n      internalData.requestCount = (internalData.requestCount || 0) - 1\n      if (internalData.requestCount === 0) {\n        ic.classList.remove.call(ic.classList, htmx.config.requestClass)\n      }\n    })\n    forEach(disabled, function (disabledElement) {\n      const internalData = getInternalData(disabledElement)\n      internalData.requestCount = (internalData.requestCount || 0) - 1\n      if (internalData.requestCount === 0) {\n        disabledElement.removeAttribute(\"disabled\")\n        disabledElement.removeAttribute(\"data-disabled-by-htmx\")\n      }\n    })\n  }\n\n  //= ===================================================================\n  // Input Value Processing\n  //= ===================================================================\n\n  /**\n   * @param {Element[]} processed\n   * @param {Element} elt\n   * @returns {boolean}\n   */\n  function haveSeenNode(processed, elt) {\n    for (let i = 0; i < processed.length; i++) {\n      const node = processed[i]\n      if (node.isSameNode(elt)) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * @param {Element} element\n   * @return {boolean}\n   */\n  function shouldInclude(element) {\n    // Cast to trick tsc, undefined values will work fine here\n    const elt = /** @type {HTMLInputElement} */ (element)\n    if (\n      elt.name === \"\" ||\n      elt.name == null ||\n      elt.disabled ||\n      closest(elt, \"fieldset[disabled]\")\n    ) {\n      return false\n    }\n    // ignore \"submitter\" types (see jQuery src/serialize.js)\n    if (\n      elt.type === \"button\" ||\n      elt.type === \"submit\" ||\n      elt.tagName === \"image\" ||\n      elt.tagName === \"reset\" ||\n      elt.tagName === \"file\"\n    ) {\n      return false\n    }\n    if (elt.type === \"checkbox\" || elt.type === \"radio\") {\n      return elt.checked\n    }\n    return true\n  }\n\n  /** @param {string} name\n   * @param {string|Array|FormDataEntryValue} value\n   * @param {FormData} formData */\n  function addValueToFormData(name, value, formData) {\n    if (name != null && value != null) {\n      if (Array.isArray(value)) {\n        value.forEach(function (v) {\n          formData.append(name, v)\n        })\n      } else {\n        formData.append(name, value)\n      }\n    }\n  }\n\n  /** @param {string} name\n   * @param {string|Array} value\n   * @param {FormData} formData */\n  function removeValueFromFormData(name, value, formData) {\n    if (name != null && value != null) {\n      let values = formData.getAll(name)\n      if (Array.isArray(value)) {\n        values = values.filter((v) => value.indexOf(v) < 0)\n      } else {\n        values = values.filter((v) => v !== value)\n      }\n      formData.delete(name)\n      forEach(values, (v) => formData.append(name, v))\n    }\n  }\n\n  /**\n   * @param {Element[]} processed\n   * @param {FormData} formData\n   * @param {HtmxElementValidationError[]} errors\n   * @param {Element|HTMLInputElement|HTMLSelectElement|HTMLFormElement} elt\n   * @param {boolean} validate\n   */\n  function processInputValue(processed, formData, errors, elt, validate) {\n    if (elt == null || haveSeenNode(processed, elt)) {\n      return\n    } else {\n      processed.push(elt)\n    }\n    if (shouldInclude(elt)) {\n      const name = getRawAttribute(elt, \"name\")\n      // @ts-ignore value will be undefined for non-input elements, which is fine\n      let value = elt.value\n      if (elt instanceof HTMLSelectElement && elt.multiple) {\n        value = toArray(elt.querySelectorAll(\"option:checked\")).map(\n          function (e) {\n            return /** @type HTMLOptionElement */ (e).value\n          }\n        )\n      }\n      // include file inputs\n      if (elt instanceof HTMLInputElement && elt.files) {\n        value = toArray(elt.files)\n      }\n      addValueToFormData(name, value, formData)\n      if (validate) {\n        validateElement(elt, errors)\n      }\n    }\n    if (elt instanceof HTMLFormElement) {\n      forEach(elt.elements, function (input) {\n        if (processed.indexOf(input) >= 0) {\n          // The input has already been processed and added to the values, but the FormData that will be\n          //  constructed right after on the form, will include it once again. So remove that input's value\n          //  now to avoid duplicates\n          removeValueFromFormData(input.name, input.value, formData)\n        } else {\n          processed.push(input)\n        }\n        if (validate) {\n          validateElement(input, errors)\n        }\n      })\n      new FormData(elt).forEach(function (value, name) {\n        if (value instanceof File && value.name === \"\") {\n          return // ignore no-name files\n        }\n        addValueToFormData(name, value, formData)\n      })\n    }\n  }\n\n  /**\n   *\n   * @param {Element} elt\n   * @param {HtmxElementValidationError[]} errors\n   */\n  function validateElement(elt, errors) {\n    const element = /** @type {HTMLElement & ElementInternals} */ (elt)\n    if (element.willValidate) {\n      triggerEvent(element, \"htmx:validation:validate\")\n      if (!element.checkValidity()) {\n        errors.push({\n          elt: element,\n          message: element.validationMessage,\n          validity: element.validity,\n        })\n        triggerEvent(element, \"htmx:validation:failed\", {\n          message: element.validationMessage,\n          validity: element.validity,\n        })\n      }\n    }\n  }\n\n  /**\n   * Override values in the one FormData with those from another.\n   * @param {FormData} receiver the formdata that will be mutated\n   * @param {FormData} donor the formdata that will provide the overriding values\n   * @returns {FormData} the {@linkcode receiver}\n   */\n  function overrideFormData(receiver, donor) {\n    for (const key of donor.keys()) {\n      receiver.delete(key)\n    }\n    donor.forEach(function (value, key) {\n      receiver.append(key, value)\n    })\n    return receiver\n  }\n\n  /**\n   * @param {Element|HTMLFormElement} elt\n   * @param {HttpVerb} verb\n   * @returns {{errors: HtmxElementValidationError[], formData: FormData, values: Object}}\n   */\n  function getInputValues(elt, verb) {\n    /** @type Element[] */\n    const processed = []\n    const formData = new FormData()\n    const priorityFormData = new FormData()\n    /** @type HtmxElementValidationError[] */\n    const errors = []\n    const internalData = getInternalData(elt)\n    if (\n      internalData.lastButtonClicked &&\n      !bodyContains(internalData.lastButtonClicked)\n    ) {\n      internalData.lastButtonClicked = null\n    }\n\n    // only validate when form is directly submitted and novalidate or formnovalidate are not set\n    // or if the element has an explicit hx-validate=\"true\" on it\n    let validate =\n      (elt instanceof HTMLFormElement && elt.noValidate !== true) ||\n      getAttributeValue(elt, \"hx-validate\") === \"true\"\n    if (internalData.lastButtonClicked) {\n      validate =\n        validate && internalData.lastButtonClicked.formNoValidate !== true\n    }\n\n    // for a non-GET include the closest form\n    if (verb !== \"get\") {\n      processInputValue(\n        processed,\n        priorityFormData,\n        errors,\n        closest(elt, \"form\"),\n        validate\n      )\n    }\n\n    // include the element itself\n    processInputValue(processed, formData, errors, elt, validate)\n\n    // if a button or submit was clicked last, include its value\n    if (\n      internalData.lastButtonClicked ||\n      elt.tagName === \"BUTTON\" ||\n      (elt.tagName === \"INPUT\" && getRawAttribute(elt, \"type\") === \"submit\")\n    ) {\n      const button =\n        internalData.lastButtonClicked ||\n        /** @type HTMLInputElement|HTMLButtonElement */ (elt)\n      const name = getRawAttribute(button, \"name\")\n      addValueToFormData(name, button.value, priorityFormData)\n    }\n\n    // include any explicit includes\n    const includes = findAttributeTargets(elt, \"hx-include\")\n    forEach(includes, function (node) {\n      processInputValue(processed, formData, errors, asElement(node), validate)\n      // if a non-form is included, include any input values within it\n      if (!matches(node, \"form\")) {\n        forEach(\n          asParentNode(node).querySelectorAll(INPUT_SELECTOR),\n          function (descendant) {\n            processInputValue(processed, formData, errors, descendant, validate)\n          }\n        )\n      }\n    })\n\n    // values from a <form> take precedence, overriding the regular values\n    overrideFormData(formData, priorityFormData)\n\n    return { errors, formData, values: formDataProxy(formData) }\n  }\n\n  /**\n   * @param {string} returnStr\n   * @param {string} name\n   * @param {any} realValue\n   * @returns {string}\n   */\n  function appendParam(returnStr, name, realValue) {\n    if (returnStr !== \"\") {\n      returnStr += \"&\"\n    }\n    if (String(realValue) === \"[object Object]\") {\n      realValue = JSON.stringify(realValue)\n    }\n    const s = encodeURIComponent(realValue)\n    returnStr += encodeURIComponent(name) + \"=\" + s\n    return returnStr\n  }\n\n  /**\n   * @param {FormData|Object} values\n   * @returns string\n   */\n  function urlEncode(values) {\n    values = formDataFromObject(values)\n    let returnStr = \"\"\n    values.forEach(function (value, key) {\n      returnStr = appendParam(returnStr, key, value)\n    })\n    return returnStr\n  }\n\n  //= ===================================================================\n  // Ajax\n  //= ===================================================================\n\n  /**\n   * @param {Element} elt\n   * @param {Element} target\n   * @param {string} prompt\n   * @returns {HtmxHeaderSpecification}\n   */\n  function getHeaders(elt, target, prompt) {\n    /** @type HtmxHeaderSpecification */\n    const headers = {\n      \"HX-Request\": \"true\",\n      \"HX-Trigger\": getRawAttribute(elt, \"id\"),\n      \"HX-Trigger-Name\": getRawAttribute(elt, \"name\"),\n      \"HX-Target\": getAttributeValue(target, \"id\"),\n      \"HX-Current-URL\": getDocument().location.href,\n    }\n    getValuesForElement(elt, \"hx-headers\", false, headers)\n    if (prompt !== undefined) {\n      headers[\"HX-Prompt\"] = prompt\n    }\n    if (getInternalData(elt).boosted) {\n      headers[\"HX-Boosted\"] = \"true\"\n    }\n    return headers\n  }\n\n  /**\n   * filterValues takes an object containing form input values\n   * and returns a new object that only contains keys that are\n   * specified by the closest \"hx-params\" attribute\n   * @param {FormData} inputValues\n   * @param {Element} elt\n   * @returns {FormData}\n   */\n  function filterValues(inputValues, elt) {\n    const paramsValue = getClosestAttributeValue(elt, \"hx-params\")\n    if (paramsValue) {\n      if (paramsValue === \"none\") {\n        return new FormData()\n      } else if (paramsValue === \"*\") {\n        return inputValues\n      } else if (paramsValue.indexOf(\"not \") === 0) {\n        forEach(paramsValue.substr(4).split(\",\"), function (name) {\n          name = name.trim()\n          inputValues.delete(name)\n        })\n        return inputValues\n      } else {\n        const newValues = new FormData()\n        forEach(paramsValue.split(\",\"), function (name) {\n          name = name.trim()\n          if (inputValues.has(name)) {\n            inputValues.getAll(name).forEach(function (value) {\n              newValues.append(name, value)\n            })\n          }\n        })\n        return newValues\n      }\n    } else {\n      return inputValues\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @return {boolean}\n   */\n  function isAnchorLink(elt) {\n    return (\n      !!getRawAttribute(elt, \"href\") &&\n      getRawAttribute(elt, \"href\").indexOf(\"#\") >= 0\n    )\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxSwapStyle} [swapInfoOverride]\n   * @returns {HtmxSwapSpecification}\n   */\n  function getSwapSpecification(elt, swapInfoOverride) {\n    const swapInfo =\n      swapInfoOverride || getClosestAttributeValue(elt, \"hx-swap\")\n    /** @type HtmxSwapSpecification */\n    const swapSpec = {\n      swapStyle: getInternalData(elt).boosted\n        ? \"innerHTML\"\n        : htmx.config.defaultSwapStyle,\n      swapDelay: htmx.config.defaultSwapDelay,\n      settleDelay: htmx.config.defaultSettleDelay,\n    }\n    if (\n      htmx.config.scrollIntoViewOnBoost &&\n      getInternalData(elt).boosted &&\n      !isAnchorLink(elt)\n    ) {\n      swapSpec.show = \"top\"\n    }\n    if (swapInfo) {\n      const split = splitOnWhitespace(swapInfo)\n      if (split.length > 0) {\n        for (let i = 0; i < split.length; i++) {\n          const value = split[i]\n          if (value.indexOf(\"swap:\") === 0) {\n            swapSpec.swapDelay = parseInterval(value.substr(5))\n          } else if (value.indexOf(\"settle:\") === 0) {\n            swapSpec.settleDelay = parseInterval(value.substr(7))\n          } else if (value.indexOf(\"transition:\") === 0) {\n            swapSpec.transition = value.substr(11) === \"true\"\n          } else if (value.indexOf(\"ignoreTitle:\") === 0) {\n            swapSpec.ignoreTitle = value.substr(12) === \"true\"\n          } else if (value.indexOf(\"scroll:\") === 0) {\n            const scrollSpec = value.substr(7)\n            var splitSpec = scrollSpec.split(\":\")\n            const scrollVal = splitSpec.pop()\n            var selectorVal = splitSpec.length > 0 ? splitSpec.join(\":\") : null\n            // @ts-ignore\n            swapSpec.scroll = scrollVal\n            swapSpec.scrollTarget = selectorVal\n          } else if (value.indexOf(\"show:\") === 0) {\n            const showSpec = value.substr(5)\n            var splitSpec = showSpec.split(\":\")\n            const showVal = splitSpec.pop()\n            var selectorVal = splitSpec.length > 0 ? splitSpec.join(\":\") : null\n            swapSpec.show = showVal\n            swapSpec.showTarget = selectorVal\n          } else if (value.indexOf(\"focus-scroll:\") === 0) {\n            const focusScrollVal = value.substr(\"focus-scroll:\".length)\n            swapSpec.focusScroll = focusScrollVal == \"true\"\n          } else if (i == 0) {\n            swapSpec.swapStyle = value\n          } else {\n            logError(\"Unknown modifier in hx-swap: \" + value)\n          }\n        }\n      }\n    }\n    return swapSpec\n  }\n\n  /**\n   * @param {Element} elt\n   * @return {boolean}\n   */\n  function usesFormData(elt) {\n    return (\n      getClosestAttributeValue(elt, \"hx-encoding\") === \"multipart/form-data\" ||\n      (matches(elt, \"form\") &&\n        getRawAttribute(elt, \"enctype\") === \"multipart/form-data\")\n    )\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @param {Element} elt\n   * @param {FormData} filteredParameters\n   * @returns {*|string|null}\n   */\n  function encodeParamsForBody(xhr, elt, filteredParameters) {\n    let encodedParameters = null\n    withExtensions(elt, function (extension) {\n      if (encodedParameters == null) {\n        encodedParameters = extension.encodeParameters(\n          xhr,\n          filteredParameters,\n          elt\n        )\n      }\n    })\n    if (encodedParameters != null) {\n      return encodedParameters\n    } else {\n      if (usesFormData(elt)) {\n        // Force conversion to an actual FormData object in case filteredParameters is a formDataProxy\n        // See https://github.com/bigskysoftware/htmx/issues/2317\n        return overrideFormData(\n          new FormData(),\n          formDataFromObject(filteredParameters)\n        )\n      } else {\n        return urlEncode(filteredParameters)\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {Element} target\n   * @returns {HtmxSettleInfo}\n   */\n  function makeSettleInfo(target) {\n    return { tasks: [], elts: [target] }\n  }\n\n  /**\n   * @param {Element[]} content\n   * @param {HtmxSwapSpecification} swapSpec\n   */\n  function updateScrollState(content, swapSpec) {\n    const first = content[0]\n    const last = content[content.length - 1]\n    if (swapSpec.scroll) {\n      var target = null\n      if (swapSpec.scrollTarget) {\n        target = asElement(querySelectorExt(first, swapSpec.scrollTarget))\n      }\n      if (swapSpec.scroll === \"top\" && (first || target)) {\n        target = target || first\n        target.scrollTop = 0\n      }\n      if (swapSpec.scroll === \"bottom\" && (last || target)) {\n        target = target || last\n        target.scrollTop = target.scrollHeight\n      }\n    }\n    if (swapSpec.show) {\n      var target = null\n      if (swapSpec.showTarget) {\n        let targetStr = swapSpec.showTarget\n        if (swapSpec.showTarget === \"window\") {\n          targetStr = \"body\"\n        }\n        target = asElement(querySelectorExt(first, targetStr))\n      }\n      if (swapSpec.show === \"top\" && (first || target)) {\n        target = target || first\n        // @ts-ignore For some reason tsc doesn't recognize \"instant\" as a valid option for now\n        target.scrollIntoView({\n          block: \"start\",\n          behavior: htmx.config.scrollBehavior,\n        })\n      }\n      if (swapSpec.show === \"bottom\" && (last || target)) {\n        target = target || last\n        // @ts-ignore For some reason tsc doesn't recognize \"instant\" as a valid option for now\n        target.scrollIntoView({\n          block: \"end\",\n          behavior: htmx.config.scrollBehavior,\n        })\n      }\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} attr\n   * @param {boolean=} evalAsDefault\n   * @param {Object=} values\n   * @returns {Object}\n   */\n  function getValuesForElement(elt, attr, evalAsDefault, values) {\n    if (values == null) {\n      values = {}\n    }\n    if (elt == null) {\n      return values\n    }\n    const attributeValue = getAttributeValue(elt, attr)\n    if (attributeValue) {\n      let str = attributeValue.trim()\n      let evaluateValue = evalAsDefault\n      if (str === \"unset\") {\n        return null\n      }\n      if (str.indexOf(\"javascript:\") === 0) {\n        str = str.substr(11)\n        evaluateValue = true\n      } else if (str.indexOf(\"js:\") === 0) {\n        str = str.substr(3)\n        evaluateValue = true\n      }\n      if (str.indexOf(\"{\") !== 0) {\n        str = \"{\" + str + \"}\"\n      }\n      let varsValues\n      if (evaluateValue) {\n        varsValues = maybeEval(\n          elt,\n          function () {\n            return Function(\"return (\" + str + \")\")()\n          },\n          {}\n        )\n      } else {\n        varsValues = parseJSON(str)\n      }\n      for (const key in varsValues) {\n        if (varsValues.hasOwnProperty(key)) {\n          if (values[key] == null) {\n            values[key] = varsValues[key]\n          }\n        }\n      }\n    }\n    return getValuesForElement(\n      asElement(parentElt(elt)),\n      attr,\n      evalAsDefault,\n      values\n    )\n  }\n\n  /**\n   * @param {EventTarget|string} elt\n   * @param {() => any} toEval\n   * @param {any=} defaultVal\n   * @returns {any}\n   */\n  function maybeEval(elt, toEval, defaultVal) {\n    if (htmx.config.allowEval) {\n      return toEval()\n    } else {\n      triggerErrorEvent(elt, \"htmx:evalDisallowedError\")\n      return defaultVal\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {*?} expressionVars\n   * @returns\n   */\n  function getHXVarsForElement(elt, expressionVars) {\n    return getValuesForElement(elt, \"hx-vars\", true, expressionVars)\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {*?} expressionVars\n   * @returns\n   */\n  function getHXValsForElement(elt, expressionVars) {\n    return getValuesForElement(elt, \"hx-vals\", false, expressionVars)\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {FormData}\n   */\n  function getExpressionVars(elt) {\n    return mergeObjects(getHXVarsForElement(elt), getHXValsForElement(elt))\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @param {string} header\n   * @param {string|null} headerValue\n   */\n  function safelySetHeaderValue(xhr, header, headerValue) {\n    if (headerValue !== null) {\n      try {\n        xhr.setRequestHeader(header, headerValue)\n      } catch (e) {\n        // On an exception, try to set the header URI encoded instead\n        xhr.setRequestHeader(header, encodeURIComponent(headerValue))\n        xhr.setRequestHeader(header + \"-URI-AutoEncoded\", \"true\")\n      }\n    }\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @return {string}\n   */\n  function getPathFromResponse(xhr) {\n    // NB: IE11 does not support this stuff\n    if (xhr.responseURL && typeof URL !== \"undefined\") {\n      try {\n        const url = new URL(xhr.responseURL)\n        return url.pathname + url.search\n      } catch (e) {\n        triggerErrorEvent(getDocument().body, \"htmx:badResponseUrl\", {\n          url: xhr.responseURL,\n        })\n      }\n    }\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @param {RegExp} regexp\n   * @return {boolean}\n   */\n  function hasHeader(xhr, regexp) {\n    return regexp.test(xhr.getAllResponseHeaders())\n  }\n\n  /**\n   * Issues an htmx-style AJAX request\n   *\n   * @see https://htmx.org/api/#ajax\n   *\n   * @param {HttpVerb} verb\n   * @param {string} path the URL path to make the AJAX\n   * @param {Element|string|HtmxAjaxHelperContext} context the element to target (defaults to the **body**) | a selector for the target | a context object that contains any of the following\n   * @return {Promise<void>} Promise that resolves immediately if no request is sent, or when the request is complete\n   */\n  function ajaxHelper(verb, path, context) {\n    verb = /** @type HttpVerb */ (verb.toLowerCase())\n    if (context) {\n      if (context instanceof Element || typeof context === \"string\") {\n        return issueAjaxRequest(verb, path, null, null, {\n          targetOverride: resolveTarget(context),\n          returnPromise: true,\n        })\n      } else {\n        return issueAjaxRequest(\n          verb,\n          path,\n          resolveTarget(context.source),\n          context.event,\n          {\n            handler: context.handler,\n            headers: context.headers,\n            values: context.values,\n            targetOverride: resolveTarget(context.target),\n            swapOverride: context.swap,\n            select: context.select,\n            returnPromise: true,\n          }\n        )\n      }\n    } else {\n      return issueAjaxRequest(verb, path, null, null, {\n        returnPromise: true,\n      })\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @return {Element[]}\n   */\n  function hierarchyForElt(elt) {\n    const arr = []\n    while (elt) {\n      arr.push(elt)\n      elt = elt.parentElement\n    }\n    return arr\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} path\n   * @param {HtmxRequestConfig} requestConfig\n   * @return {boolean}\n   */\n  function verifyPath(elt, path, requestConfig) {\n    let sameHost\n    let url\n    if (typeof URL === \"function\") {\n      url = new URL(path, document.location.href)\n      const origin = document.location.origin\n      sameHost = origin === url.origin\n    } else {\n      // IE11 doesn't support URL\n      url = path\n      sameHost = startsWith(path, document.location.origin)\n    }\n\n    if (htmx.config.selfRequestsOnly) {\n      if (!sameHost) {\n        return false\n      }\n    }\n    return triggerEvent(\n      elt,\n      \"htmx:validateUrl\",\n      mergeObjects({ url, sameHost }, requestConfig)\n    )\n  }\n\n  /**\n   * @param {Object|FormData} obj\n   * @return {FormData}\n   */\n  function formDataFromObject(obj) {\n    if (obj instanceof FormData) return obj\n    const formData = new FormData()\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (typeof obj[key].forEach === \"function\") {\n          obj[key].forEach(function (v) {\n            formData.append(key, v)\n          })\n        } else if (\n          typeof obj[key] === \"object\" &&\n          !(obj[key] instanceof Blob)\n        ) {\n          formData.append(key, JSON.stringify(obj[key]))\n        } else {\n          formData.append(key, obj[key])\n        }\n      }\n    }\n    return formData\n  }\n\n  /**\n   * @param {FormData} formData\n   * @param {string} name\n   * @param {Array} array\n   * @returns {Array}\n   */\n  function formDataArrayProxy(formData, name, array) {\n    // mutating the array should mutate the underlying form data\n    return new Proxy(array, {\n      get: function (target, key) {\n        if (typeof key === \"number\") return target[key]\n        if (key === \"length\") return target.length\n        if (key === \"push\") {\n          return function (value) {\n            target.push(value)\n            formData.append(name, value)\n          }\n        }\n        if (typeof target[key] === \"function\") {\n          return function () {\n            target[key].apply(target, arguments)\n            formData.delete(name)\n            target.forEach(function (v) {\n              formData.append(name, v)\n            })\n          }\n        }\n\n        if (target[key] && target[key].length === 1) {\n          return target[key][0]\n        } else {\n          return target[key]\n        }\n      },\n      set: function (target, index, value) {\n        target[index] = value\n        formData.delete(name)\n        target.forEach(function (v) {\n          formData.append(name, v)\n        })\n        return true\n      },\n    })\n  }\n\n  /**\n   * @param {FormData} formData\n   * @returns {Object}\n   */\n  function formDataProxy(formData) {\n    return new Proxy(formData, {\n      get: function (target, name) {\n        if (typeof name === \"symbol\") {\n          // Forward symbol calls to the FormData itself directly\n          return Reflect.get(target, name)\n        }\n        if (name === \"toJSON\") {\n          // Support JSON.stringify call on proxy\n          return () => Object.fromEntries(formData)\n        }\n        if (name in target) {\n          // Wrap in function with apply to correctly bind the FormData context, as a direct call would result in an illegal invocation error\n          if (typeof target[name] === \"function\") {\n            return function () {\n              return formData[name].apply(formData, arguments)\n            }\n          } else {\n            return target[name]\n          }\n        }\n        const array = formData.getAll(name)\n        // Those 2 undefined & single value returns are for retro-compatibility as we weren't using FormData before\n        if (array.length === 0) {\n          return undefined\n        } else if (array.length === 1) {\n          return array[0]\n        } else {\n          return formDataArrayProxy(target, name, array)\n        }\n      },\n      set: function (target, name, value) {\n        if (typeof name !== \"string\") {\n          return false\n        }\n        target.delete(name)\n        if (typeof value.forEach === \"function\") {\n          value.forEach(function (v) {\n            target.append(name, v)\n          })\n        } else if (typeof value === \"object\" && !(value instanceof Blob)) {\n          target.append(name, JSON.stringify(value))\n        } else {\n          target.append(name, value)\n        }\n        return true\n      },\n      deleteProperty: function (target, name) {\n        if (typeof name === \"string\") {\n          target.delete(name)\n        }\n        return true\n      },\n      // Support Object.assign call from proxy\n      ownKeys: function (target) {\n        return Reflect.ownKeys(Object.fromEntries(target))\n      },\n      getOwnPropertyDescriptor: function (target, prop) {\n        return Reflect.getOwnPropertyDescriptor(\n          Object.fromEntries(target),\n          prop\n        )\n      },\n    })\n  }\n\n  /**\n   * @param {HttpVerb} verb\n   * @param {string} path\n   * @param {Element} elt\n   * @param {Event} event\n   * @param {HtmxAjaxEtc} [etc]\n   * @param {boolean} [confirmed]\n   * @return {Promise<void>}\n   */\n  function issueAjaxRequest(verb, path, elt, event, etc, confirmed) {\n    let resolve = null\n    let reject = null\n    etc = etc != null ? etc : {}\n    if (etc.returnPromise && typeof Promise !== \"undefined\") {\n      var promise = new Promise(function (_resolve, _reject) {\n        resolve = _resolve\n        reject = _reject\n      })\n    }\n    if (elt == null) {\n      elt = getDocument().body\n    }\n    const responseHandler = etc.handler || handleAjaxResponse\n    const select = etc.select || null\n\n    if (!bodyContains(elt)) {\n      // do not issue requests for elements removed from the DOM\n      maybeCall(resolve)\n      return promise\n    }\n    const target = etc.targetOverride || asElement(getTarget(elt))\n    if (target == null || target == DUMMY_ELT) {\n      triggerErrorEvent(elt, \"htmx:targetError\", {\n        target: getAttributeValue(elt, \"hx-target\"),\n      })\n      maybeCall(reject)\n      return promise\n    }\n\n    let eltData = getInternalData(elt)\n    const submitter = eltData.lastButtonClicked\n\n    if (submitter) {\n      const buttonPath = getRawAttribute(submitter, \"formaction\")\n      if (buttonPath != null) {\n        path = buttonPath\n      }\n\n      const buttonVerb = getRawAttribute(submitter, \"formmethod\")\n      if (buttonVerb != null) {\n        // ignore buttons with formmethod=\"dialog\"\n        if (buttonVerb.toLowerCase() !== \"dialog\") {\n          verb = /** @type HttpVerb */ (buttonVerb)\n        }\n      }\n    }\n\n    const confirmQuestion = getClosestAttributeValue(elt, \"hx-confirm\")\n    // allow event-based confirmation w/ a callback\n    if (confirmed === undefined) {\n      const issueRequest = function (skipConfirmation) {\n        return issueAjaxRequest(verb, path, elt, event, etc, !!skipConfirmation)\n      }\n      const confirmDetails = {\n        target,\n        elt,\n        path,\n        verb,\n        triggeringEvent: event,\n        etc,\n        issueRequest,\n        question: confirmQuestion,\n      }\n      if (triggerEvent(elt, \"htmx:confirm\", confirmDetails) === false) {\n        maybeCall(resolve)\n        return promise\n      }\n    }\n\n    let syncElt = elt\n    let syncStrategy = getClosestAttributeValue(elt, \"hx-sync\")\n    let queueStrategy = null\n    let abortable = false\n    if (syncStrategy) {\n      const syncStrings = syncStrategy.split(\":\")\n      const selector = syncStrings[0].trim()\n      if (selector === \"this\") {\n        syncElt = findThisElement(elt, \"hx-sync\")\n      } else {\n        syncElt = asElement(querySelectorExt(elt, selector))\n      }\n      // default to the drop strategy\n      syncStrategy = (syncStrings[1] || \"drop\").trim()\n      eltData = getInternalData(syncElt)\n      if (\n        syncStrategy === \"drop\" &&\n        eltData.xhr &&\n        eltData.abortable !== true\n      ) {\n        maybeCall(resolve)\n        return promise\n      } else if (syncStrategy === \"abort\") {\n        if (eltData.xhr) {\n          maybeCall(resolve)\n          return promise\n        } else {\n          abortable = true\n        }\n      } else if (syncStrategy === \"replace\") {\n        triggerEvent(syncElt, \"htmx:abort\") // abort the current request and continue\n      } else if (syncStrategy.indexOf(\"queue\") === 0) {\n        const queueStrArray = syncStrategy.split(\" \")\n        queueStrategy = (queueStrArray[1] || \"last\").trim()\n      }\n    }\n\n    if (eltData.xhr) {\n      if (eltData.abortable) {\n        triggerEvent(syncElt, \"htmx:abort\") // abort the current request and continue\n      } else {\n        if (queueStrategy == null) {\n          if (event) {\n            const eventData = getInternalData(event)\n            if (\n              eventData &&\n              eventData.triggerSpec &&\n              eventData.triggerSpec.queue\n            ) {\n              queueStrategy = eventData.triggerSpec.queue\n            }\n          }\n          if (queueStrategy == null) {\n            queueStrategy = \"last\"\n          }\n        }\n        if (eltData.queuedRequests == null) {\n          eltData.queuedRequests = []\n        }\n        if (queueStrategy === \"first\" && eltData.queuedRequests.length === 0) {\n          eltData.queuedRequests.push(function () {\n            issueAjaxRequest(verb, path, elt, event, etc)\n          })\n        } else if (queueStrategy === \"all\") {\n          eltData.queuedRequests.push(function () {\n            issueAjaxRequest(verb, path, elt, event, etc)\n          })\n        } else if (queueStrategy === \"last\") {\n          eltData.queuedRequests = [] // dump existing queue\n          eltData.queuedRequests.push(function () {\n            issueAjaxRequest(verb, path, elt, event, etc)\n          })\n        }\n        maybeCall(resolve)\n        return promise\n      }\n    }\n\n    const xhr = new XMLHttpRequest()\n    eltData.xhr = xhr\n    eltData.abortable = abortable\n    const endRequestLock = function () {\n      eltData.xhr = null\n      eltData.abortable = false\n      if (eltData.queuedRequests != null && eltData.queuedRequests.length > 0) {\n        const queuedRequest = eltData.queuedRequests.shift()\n        queuedRequest()\n      }\n    }\n    const promptQuestion = getClosestAttributeValue(elt, \"hx-prompt\")\n    if (promptQuestion) {\n      var promptResponse = prompt(promptQuestion)\n      // prompt returns null if cancelled and empty string if accepted with no entry\n      if (\n        promptResponse === null ||\n        !triggerEvent(elt, \"htmx:prompt\", { prompt: promptResponse, target })\n      ) {\n        maybeCall(resolve)\n        endRequestLock()\n        return promise\n      }\n    }\n\n    if (confirmQuestion && !confirmed) {\n      if (!confirm(confirmQuestion)) {\n        maybeCall(resolve)\n        endRequestLock()\n        return promise\n      }\n    }\n\n    let headers = getHeaders(elt, target, promptResponse)\n\n    if (verb !== \"get\" && !usesFormData(elt)) {\n      headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\"\n    }\n\n    if (etc.headers) {\n      headers = mergeObjects(headers, etc.headers)\n    }\n    const results = getInputValues(elt, verb)\n    let errors = results.errors\n    const rawFormData = results.formData\n    if (etc.values) {\n      overrideFormData(rawFormData, formDataFromObject(etc.values))\n    }\n    const expressionVars = formDataFromObject(getExpressionVars(elt))\n    const allFormData = overrideFormData(rawFormData, expressionVars)\n    let filteredFormData = filterValues(allFormData, elt)\n\n    if (htmx.config.getCacheBusterParam && verb === \"get\") {\n      filteredFormData.set(\n        \"org.htmx.cache-buster\",\n        getRawAttribute(target, \"id\") || \"true\"\n      )\n    }\n\n    // behavior of anchors w/ empty href is to use the current URL\n    if (path == null || path === \"\") {\n      path = getDocument().location.href\n    }\n\n    /**\n     * @type {Object}\n     * @property {boolean} [credentials]\n     * @property {number} [timeout]\n     * @property {boolean} [noHeaders]\n     */\n    const requestAttrValues = getValuesForElement(elt, \"hx-request\")\n\n    const eltIsBoosted = getInternalData(elt).boosted\n\n    let useUrlParams = htmx.config.methodsThatUseUrlParams.indexOf(verb) >= 0\n\n    /** @type HtmxRequestConfig */\n    const requestConfig = {\n      boosted: eltIsBoosted,\n      useUrlParams,\n      formData: filteredFormData,\n      parameters: formDataProxy(filteredFormData),\n      unfilteredFormData: allFormData,\n      unfilteredParameters: formDataProxy(allFormData),\n      headers,\n      target,\n      verb,\n      errors,\n      withCredentials:\n        etc.credentials ||\n        requestAttrValues.credentials ||\n        htmx.config.withCredentials,\n      timeout: etc.timeout || requestAttrValues.timeout || htmx.config.timeout,\n      path,\n      triggeringEvent: event,\n    }\n\n    if (!triggerEvent(elt, \"htmx:configRequest\", requestConfig)) {\n      maybeCall(resolve)\n      endRequestLock()\n      return promise\n    }\n\n    // copy out in case the object was overwritten\n    path = requestConfig.path\n    verb = requestConfig.verb\n    headers = requestConfig.headers\n    filteredFormData = formDataFromObject(requestConfig.parameters)\n    errors = requestConfig.errors\n    useUrlParams = requestConfig.useUrlParams\n\n    if (errors && errors.length > 0) {\n      triggerEvent(elt, \"htmx:validation:halted\", requestConfig)\n      maybeCall(resolve)\n      endRequestLock()\n      return promise\n    }\n\n    const splitPath = path.split(\"#\")\n    const pathNoAnchor = splitPath[0]\n    const anchor = splitPath[1]\n\n    let finalPath = path\n    if (useUrlParams) {\n      finalPath = pathNoAnchor\n      const hasValues = !filteredFormData.keys().next().done\n      if (hasValues) {\n        if (finalPath.indexOf(\"?\") < 0) {\n          finalPath += \"?\"\n        } else {\n          finalPath += \"&\"\n        }\n        finalPath += urlEncode(filteredFormData)\n        if (anchor) {\n          finalPath += \"#\" + anchor\n        }\n      }\n    }\n\n    if (!verifyPath(elt, finalPath, requestConfig)) {\n      triggerErrorEvent(elt, \"htmx:invalidPath\", requestConfig)\n      maybeCall(reject)\n      return promise\n    }\n\n    xhr.open(verb.toUpperCase(), finalPath, true)\n    xhr.overrideMimeType(\"text/html\")\n    xhr.withCredentials = requestConfig.withCredentials\n    xhr.timeout = requestConfig.timeout\n\n    // request headers\n    if (requestAttrValues.noHeaders) {\n      // ignore all headers\n    } else {\n      for (const header in headers) {\n        if (headers.hasOwnProperty(header)) {\n          const headerValue = headers[header]\n          safelySetHeaderValue(xhr, header, headerValue)\n        }\n      }\n    }\n\n    /** @type {HtmxResponseInfo} */\n    const responseInfo = {\n      xhr,\n      target,\n      requestConfig,\n      etc,\n      boosted: eltIsBoosted,\n      select,\n      pathInfo: {\n        requestPath: path,\n        finalRequestPath: finalPath,\n        responsePath: null,\n        anchor,\n      },\n    }\n\n    xhr.onload = function () {\n      try {\n        const hierarchy = hierarchyForElt(elt)\n        responseInfo.pathInfo.responsePath = getPathFromResponse(xhr)\n        responseHandler(elt, responseInfo)\n        if (responseInfo.keepIndicators !== true) {\n          removeRequestIndicators(indicators, disableElts)\n        }\n        triggerEvent(elt, \"htmx:afterRequest\", responseInfo)\n        triggerEvent(elt, \"htmx:afterOnLoad\", responseInfo)\n        // if the body no longer contains the element, trigger the event on the closest parent\n        // remaining in the DOM\n        if (!bodyContains(elt)) {\n          let secondaryTriggerElt = null\n          while (hierarchy.length > 0 && secondaryTriggerElt == null) {\n            const parentEltInHierarchy = hierarchy.shift()\n            if (bodyContains(parentEltInHierarchy)) {\n              secondaryTriggerElt = parentEltInHierarchy\n            }\n          }\n          if (secondaryTriggerElt) {\n            triggerEvent(secondaryTriggerElt, \"htmx:afterRequest\", responseInfo)\n            triggerEvent(secondaryTriggerElt, \"htmx:afterOnLoad\", responseInfo)\n          }\n        }\n        maybeCall(resolve)\n        endRequestLock()\n      } catch (e) {\n        triggerErrorEvent(\n          elt,\n          \"htmx:onLoadError\",\n          mergeObjects({ error: e }, responseInfo)\n        )\n        throw e\n      }\n    }\n    xhr.onerror = function () {\n      removeRequestIndicators(indicators, disableElts)\n      triggerErrorEvent(elt, \"htmx:afterRequest\", responseInfo)\n      triggerErrorEvent(elt, \"htmx:sendError\", responseInfo)\n      maybeCall(reject)\n      endRequestLock()\n    }\n    xhr.onabort = function () {\n      removeRequestIndicators(indicators, disableElts)\n      triggerErrorEvent(elt, \"htmx:afterRequest\", responseInfo)\n      triggerErrorEvent(elt, \"htmx:sendAbort\", responseInfo)\n      maybeCall(reject)\n      endRequestLock()\n    }\n    xhr.ontimeout = function () {\n      removeRequestIndicators(indicators, disableElts)\n      triggerErrorEvent(elt, \"htmx:afterRequest\", responseInfo)\n      triggerErrorEvent(elt, \"htmx:timeout\", responseInfo)\n      maybeCall(reject)\n      endRequestLock()\n    }\n    if (!triggerEvent(elt, \"htmx:beforeRequest\", responseInfo)) {\n      maybeCall(resolve)\n      endRequestLock()\n      return promise\n    }\n    var indicators = addRequestIndicatorClasses(elt)\n    var disableElts = disableElements(elt)\n\n    forEach(\n      [\"loadstart\", \"loadend\", \"progress\", \"abort\"],\n      function (eventName) {\n        forEach([xhr, xhr.upload], function (target) {\n          target.addEventListener(eventName, function (event) {\n            triggerEvent(elt, \"htmx:xhr:\" + eventName, {\n              lengthComputable: event.lengthComputable,\n              loaded: event.loaded,\n              total: event.total,\n            })\n          })\n        })\n      }\n    )\n    triggerEvent(elt, \"htmx:beforeSend\", responseInfo)\n    const params = useUrlParams\n      ? null\n      : encodeParamsForBody(xhr, elt, filteredFormData)\n    xhr.send(params)\n    return promise\n  }\n\n  /**\n   * @typedef {Object} HtmxHistoryUpdate\n   * @property {string|null} [type]\n   * @property {string|null} [path]\n   */\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxResponseInfo} responseInfo\n   * @return {HtmxHistoryUpdate}\n   */\n  function determineHistoryUpdates(elt, responseInfo) {\n    const xhr = responseInfo.xhr\n\n    //= ==========================================\n    // First consult response headers\n    //= ==========================================\n    let pathFromHeaders = null\n    let typeFromHeaders = null\n    if (hasHeader(xhr, /HX-Push:/i)) {\n      pathFromHeaders = xhr.getResponseHeader(\"HX-Push\")\n      typeFromHeaders = \"push\"\n    } else if (hasHeader(xhr, /HX-Push-Url:/i)) {\n      pathFromHeaders = xhr.getResponseHeader(\"HX-Push-Url\")\n      typeFromHeaders = \"push\"\n    } else if (hasHeader(xhr, /HX-Replace-Url:/i)) {\n      pathFromHeaders = xhr.getResponseHeader(\"HX-Replace-Url\")\n      typeFromHeaders = \"replace\"\n    }\n\n    // if there was a response header, that has priority\n    if (pathFromHeaders) {\n      if (pathFromHeaders === \"false\") {\n        return {}\n      } else {\n        return {\n          type: typeFromHeaders,\n          path: pathFromHeaders,\n        }\n      }\n    }\n\n    //= ==========================================\n    // Next resolve via DOM values\n    //= ==========================================\n    const requestPath = responseInfo.pathInfo.finalRequestPath\n    const responsePath = responseInfo.pathInfo.responsePath\n\n    const pushUrl = getClosestAttributeValue(elt, \"hx-push-url\")\n    const replaceUrl = getClosestAttributeValue(elt, \"hx-replace-url\")\n    const elementIsBoosted = getInternalData(elt).boosted\n\n    let saveType = null\n    let path = null\n\n    if (pushUrl) {\n      saveType = \"push\"\n      path = pushUrl\n    } else if (replaceUrl) {\n      saveType = \"replace\"\n      path = replaceUrl\n    } else if (elementIsBoosted) {\n      saveType = \"push\"\n      path = responsePath || requestPath // if there is no response path, go with the original request path\n    }\n\n    if (path) {\n      // false indicates no push, return empty object\n      if (path === \"false\") {\n        return {}\n      }\n\n      // true indicates we want to follow wherever the server ended up sending us\n      if (path === \"true\") {\n        path = responsePath || requestPath // if there is no response path, go with the original request path\n      }\n\n      // restore any anchor associated with the request\n      if (responseInfo.pathInfo.anchor && path.indexOf(\"#\") === -1) {\n        path = path + \"#\" + responseInfo.pathInfo.anchor\n      }\n\n      return {\n        type: saveType,\n        path,\n      }\n    } else {\n      return {}\n    }\n  }\n\n  /**\n   * @param {HtmxResponseHandlingConfig} responseHandlingConfig\n   * @param {number} status\n   * @return {boolean}\n   */\n  function codeMatches(responseHandlingConfig, status) {\n    var regExp = new RegExp(responseHandlingConfig.code)\n    return regExp.test(status.toString(10))\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @return {HtmxResponseHandlingConfig}\n   */\n  function resolveResponseHandling(xhr) {\n    for (var i = 0; i < htmx.config.responseHandling.length; i++) {\n      /** @type HtmxResponseHandlingConfig */\n      var responseHandlingElement = htmx.config.responseHandling[i]\n      if (codeMatches(responseHandlingElement, xhr.status)) {\n        return responseHandlingElement\n      }\n    }\n    // no matches, return no swap\n    return {\n      swap: false,\n    }\n  }\n\n  /**\n   * @param {string} title\n   */\n  function handleTitle(title) {\n    if (title) {\n      const titleElt = find(\"title\")\n      if (titleElt) {\n        titleElt.innerHTML = title\n      } else {\n        window.document.title = title\n      }\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxResponseInfo} responseInfo\n   */\n  function handleAjaxResponse(elt, responseInfo) {\n    const xhr = responseInfo.xhr\n    let target = responseInfo.target\n    const etc = responseInfo.etc\n    const responseInfoSelect = responseInfo.select\n\n    if (!triggerEvent(elt, \"htmx:beforeOnLoad\", responseInfo)) return\n\n    if (hasHeader(xhr, /HX-Trigger:/i)) {\n      handleTriggerHeader(xhr, \"HX-Trigger\", elt)\n    }\n\n    if (hasHeader(xhr, /HX-Location:/i)) {\n      saveCurrentPageToHistory()\n      let redirectPath = xhr.getResponseHeader(\"HX-Location\")\n      /** @type {HtmxAjaxHelperContext&{path:string}} */\n      var redirectSwapSpec\n      if (redirectPath.indexOf(\"{\") === 0) {\n        redirectSwapSpec = parseJSON(redirectPath)\n        // what's the best way to throw an error if the user didn't include this\n        redirectPath = redirectSwapSpec.path\n        delete redirectSwapSpec.path\n      }\n      ajaxHelper(\"get\", redirectPath, redirectSwapSpec).then(function () {\n        pushUrlIntoHistory(redirectPath)\n      })\n      return\n    }\n\n    const shouldRefresh =\n      hasHeader(xhr, /HX-Refresh:/i) &&\n      xhr.getResponseHeader(\"HX-Refresh\") === \"true\"\n\n    if (hasHeader(xhr, /HX-Redirect:/i)) {\n      responseInfo.keepIndicators = true\n      location.href = xhr.getResponseHeader(\"HX-Redirect\")\n      shouldRefresh && location.reload()\n      return\n    }\n\n    if (shouldRefresh) {\n      responseInfo.keepIndicators = true\n      location.reload()\n      return\n    }\n\n    if (hasHeader(xhr, /HX-Retarget:/i)) {\n      if (xhr.getResponseHeader(\"HX-Retarget\") === \"this\") {\n        responseInfo.target = elt\n      } else {\n        responseInfo.target = asElement(\n          querySelectorExt(elt, xhr.getResponseHeader(\"HX-Retarget\"))\n        )\n      }\n    }\n\n    const historyUpdate = determineHistoryUpdates(elt, responseInfo)\n\n    const responseHandling = resolveResponseHandling(xhr)\n    const shouldSwap = responseHandling.swap\n    let isError = !!responseHandling.error\n    let ignoreTitle = htmx.config.ignoreTitle || responseHandling.ignoreTitle\n    let selectOverride = responseHandling.select\n    if (responseHandling.target) {\n      responseInfo.target = asElement(\n        querySelectorExt(elt, responseHandling.target)\n      )\n    }\n    var swapOverride = etc.swapOverride\n    if (swapOverride == null && responseHandling.swapOverride) {\n      swapOverride = responseHandling.swapOverride\n    }\n\n    // response headers override response handling config\n    if (hasHeader(xhr, /HX-Retarget:/i)) {\n      if (xhr.getResponseHeader(\"HX-Retarget\") === \"this\") {\n        responseInfo.target = elt\n      } else {\n        responseInfo.target = asElement(\n          querySelectorExt(elt, xhr.getResponseHeader(\"HX-Retarget\"))\n        )\n      }\n    }\n    if (hasHeader(xhr, /HX-Reswap:/i)) {\n      swapOverride = xhr.getResponseHeader(\"HX-Reswap\")\n    }\n\n    var serverResponse = xhr.response\n    /** @type HtmxBeforeSwapDetails */\n    var beforeSwapDetails = mergeObjects(\n      {\n        shouldSwap,\n        serverResponse,\n        isError,\n        ignoreTitle,\n        selectOverride,\n      },\n      responseInfo\n    )\n\n    if (\n      responseHandling.event &&\n      !triggerEvent(target, responseHandling.event, beforeSwapDetails)\n    )\n      return\n\n    if (!triggerEvent(target, \"htmx:beforeSwap\", beforeSwapDetails)) return\n\n    target = beforeSwapDetails.target // allow re-targeting\n    serverResponse = beforeSwapDetails.serverResponse // allow updating content\n    isError = beforeSwapDetails.isError // allow updating error\n    ignoreTitle = beforeSwapDetails.ignoreTitle // allow updating ignoring title\n    selectOverride = beforeSwapDetails.selectOverride // allow updating select override\n\n    responseInfo.target = target // Make updated target available to response events\n    responseInfo.failed = isError // Make failed property available to response events\n    responseInfo.successful = !isError // Make successful property available to response events\n\n    if (beforeSwapDetails.shouldSwap) {\n      if (xhr.status === 286) {\n        cancelPolling(elt)\n      }\n\n      withExtensions(elt, function (extension) {\n        serverResponse = extension.transformResponse(serverResponse, xhr, elt)\n      })\n\n      // Save current page if there will be a history update\n      if (historyUpdate.type) {\n        saveCurrentPageToHistory()\n      }\n\n      if (hasHeader(xhr, /HX-Reswap:/i)) {\n        swapOverride = xhr.getResponseHeader(\"HX-Reswap\")\n      }\n      var swapSpec = getSwapSpecification(elt, swapOverride)\n\n      if (!swapSpec.hasOwnProperty(\"ignoreTitle\")) {\n        swapSpec.ignoreTitle = ignoreTitle\n      }\n\n      target.classList.add(htmx.config.swappingClass)\n\n      // optional transition API promise callbacks\n      let settleResolve = null\n      let settleReject = null\n\n      if (responseInfoSelect) {\n        selectOverride = responseInfoSelect\n      }\n\n      if (hasHeader(xhr, /HX-Reselect:/i)) {\n        selectOverride = xhr.getResponseHeader(\"HX-Reselect\")\n      }\n\n      const selectOOB = getClosestAttributeValue(elt, \"hx-select-oob\")\n      const select = getClosestAttributeValue(elt, \"hx-select\")\n\n      let doSwap = function () {\n        try {\n          // if we need to save history, do so, before swapping so that relative resources have the correct base URL\n          if (historyUpdate.type) {\n            triggerEvent(\n              getDocument().body,\n              \"htmx:beforeHistoryUpdate\",\n              mergeObjects({ history: historyUpdate }, responseInfo)\n            )\n            if (historyUpdate.type === \"push\") {\n              pushUrlIntoHistory(historyUpdate.path)\n              triggerEvent(getDocument().body, \"htmx:pushedIntoHistory\", {\n                path: historyUpdate.path,\n              })\n            } else {\n              replaceUrlInHistory(historyUpdate.path)\n              triggerEvent(getDocument().body, \"htmx:replacedInHistory\", {\n                path: historyUpdate.path,\n              })\n            }\n          }\n\n          swap(target, serverResponse, swapSpec, {\n            select: selectOverride || select,\n            selectOOB,\n            eventInfo: responseInfo,\n            anchor: responseInfo.pathInfo.anchor,\n            contextElement: elt,\n            afterSwapCallback: function () {\n              if (hasHeader(xhr, /HX-Trigger-After-Swap:/i)) {\n                let finalElt = elt\n                if (!bodyContains(elt)) {\n                  finalElt = getDocument().body\n                }\n                handleTriggerHeader(xhr, \"HX-Trigger-After-Swap\", finalElt)\n              }\n            },\n            afterSettleCallback: function () {\n              if (hasHeader(xhr, /HX-Trigger-After-Settle:/i)) {\n                let finalElt = elt\n                if (!bodyContains(elt)) {\n                  finalElt = getDocument().body\n                }\n                handleTriggerHeader(xhr, \"HX-Trigger-After-Settle\", finalElt)\n              }\n              maybeCall(settleResolve)\n            },\n          })\n        } catch (e) {\n          triggerErrorEvent(elt, \"htmx:swapError\", responseInfo)\n          maybeCall(settleReject)\n          throw e\n        }\n      }\n\n      let shouldTransition = htmx.config.globalViewTransitions\n      if (swapSpec.hasOwnProperty(\"transition\")) {\n        shouldTransition = swapSpec.transition\n      }\n\n      if (\n        shouldTransition &&\n        triggerEvent(elt, \"htmx:beforeTransition\", responseInfo) &&\n        typeof Promise !== \"undefined\" &&\n        // @ts-ignore experimental feature atm\n        document.startViewTransition\n      ) {\n        const settlePromise = new Promise(function (_resolve, _reject) {\n          settleResolve = _resolve\n          settleReject = _reject\n        })\n        // wrap the original doSwap() in a call to startViewTransition()\n        const innerDoSwap = doSwap\n        doSwap = function () {\n          // @ts-ignore experimental feature atm\n          document.startViewTransition(function () {\n            innerDoSwap()\n            return settlePromise\n          })\n        }\n      }\n\n      if (swapSpec.swapDelay > 0) {\n        getWindow().setTimeout(doSwap, swapSpec.swapDelay)\n      } else {\n        doSwap()\n      }\n    }\n    if (isError) {\n      triggerErrorEvent(\n        elt,\n        \"htmx:responseError\",\n        mergeObjects(\n          {\n            error:\n              \"Response Status Error Code \" +\n              xhr.status +\n              \" from \" +\n              responseInfo.pathInfo.requestPath,\n          },\n          responseInfo\n        )\n      )\n    }\n  }\n\n  //= ===================================================================\n  // Extensions API\n  //= ===================================================================\n\n  /** @type {Object<string, HtmxExtension>} */\n  const extensions = {}\n\n  /**\n   * extensionBase defines the default functions for all extensions.\n   * @returns {HtmxExtension}\n   */\n  function extensionBase() {\n    return {\n      init: function (api) {\n        return null\n      },\n      getSelectors: function () {\n        return null\n      },\n      onEvent: function (name, evt) {\n        return true\n      },\n      transformResponse: function (text, xhr, elt) {\n        return text\n      },\n      isInlineSwap: function (swapStyle) {\n        return false\n      },\n      handleSwap: function (swapStyle, target, fragment, settleInfo) {\n        return false\n      },\n      encodeParameters: function (xhr, parameters, elt) {\n        return null\n      },\n    }\n  }\n\n  /**\n   * defineExtension initializes the extension and adds it to the htmx registry\n   *\n   * @see https://htmx.org/api/#defineExtension\n   *\n   * @param {string} name the extension name\n   * @param {HtmxExtension} extension the extension definition\n   */\n  function defineExtension(name, extension) {\n    if (extension.init) {\n      extension.init(internalAPI)\n    }\n    extensions[name] = mergeObjects(extensionBase(), extension)\n  }\n\n  /**\n   * removeExtension removes an extension from the htmx registry\n   *\n   * @see https://htmx.org/api/#removeExtension\n   *\n   * @param {string} name\n   */\n  function removeExtension(name) {\n    delete extensions[name]\n  }\n\n  /**\n   * getExtensions searches up the DOM tree to return all extensions that can be applied to a given element\n   *\n   * @param {Element} elt\n   * @param {HtmxExtension[]=} extensionsToReturn\n   * @param {string[]=} extensionsToIgnore\n   * @returns {HtmxExtension[]}\n   */\n  function getExtensions(elt, extensionsToReturn, extensionsToIgnore) {\n    if (extensionsToReturn == undefined) {\n      extensionsToReturn = []\n    }\n    if (elt == undefined) {\n      return extensionsToReturn\n    }\n    if (extensionsToIgnore == undefined) {\n      extensionsToIgnore = []\n    }\n    const extensionsForElement = getAttributeValue(elt, \"hx-ext\")\n    if (extensionsForElement) {\n      forEach(extensionsForElement.split(\",\"), function (extensionName) {\n        extensionName = extensionName.replace(/ /g, \"\")\n        if (extensionName.slice(0, 7) == \"ignore:\") {\n          extensionsToIgnore.push(extensionName.slice(7))\n          return\n        }\n        if (extensionsToIgnore.indexOf(extensionName) < 0) {\n          const extension = extensions[extensionName]\n          if (extension && extensionsToReturn.indexOf(extension) < 0) {\n            extensionsToReturn.push(extension)\n          }\n        }\n      })\n    }\n    return getExtensions(\n      asElement(parentElt(elt)),\n      extensionsToReturn,\n      extensionsToIgnore\n    )\n  }\n\n  //= ===================================================================\n  // Initialization\n  //= ===================================================================\n  var isReady = false\n  getDocument().addEventListener(\"DOMContentLoaded\", function () {\n    isReady = true\n  })\n\n  /**\n   * Execute a function now if DOMContentLoaded has fired, otherwise listen for it.\n   *\n   * This function uses isReady because there is no reliable way to ask the browser whether\n   * the DOMContentLoaded event has already been fired; there's a gap between DOMContentLoaded\n   * firing and readystate=complete.\n   */\n  function ready(fn) {\n    // Checking readyState here is a failsafe in case the htmx script tag entered the DOM by\n    // some means other than the initial page load.\n    if (isReady || getDocument().readyState === \"complete\") {\n      fn()\n    } else {\n      getDocument().addEventListener(\"DOMContentLoaded\", fn)\n    }\n  }\n\n  function insertIndicatorStyles() {\n    if (htmx.config.includeIndicatorStyles !== false) {\n      const nonceAttribute = htmx.config.inlineStyleNonce\n        ? ` nonce=\"${htmx.config.inlineStyleNonce}\"`\n        : \"\"\n      getDocument().head.insertAdjacentHTML(\n        \"beforeend\",\n        \"<style\" +\n          nonceAttribute +\n          \">\\\n      .\" +\n          htmx.config.indicatorClass +\n          \"{opacity:0}\\\n      .\" +\n          htmx.config.requestClass +\n          \" .\" +\n          htmx.config.indicatorClass +\n          \"{opacity:1; transition: opacity 200ms ease-in;}\\\n      .\" +\n          htmx.config.requestClass +\n          \".\" +\n          htmx.config.indicatorClass +\n          \"{opacity:1; transition: opacity 200ms ease-in;}\\\n      </style>\"\n      )\n    }\n  }\n\n  function getMetaConfig() {\n    /** @type HTMLMetaElement */\n    const element = getDocument().querySelector('meta[name=\"htmx-config\"]')\n    if (element) {\n      return parseJSON(element.content)\n    } else {\n      return null\n    }\n  }\n\n  function mergeMetaConfig() {\n    const metaConfig = getMetaConfig()\n    if (metaConfig) {\n      htmx.config = mergeObjects(htmx.config, metaConfig)\n    }\n  }\n\n  // initialize the document\n  ready(function () {\n    mergeMetaConfig()\n    insertIndicatorStyles()\n    let body = getDocument().body\n    processNode(body)\n    const restoredElts = getDocument().querySelectorAll(\n      \"[hx-trigger='restored'],[data-hx-trigger='restored']\"\n    )\n    body.addEventListener(\"htmx:abort\", function (evt) {\n      const target = evt.target\n      const internalData = getInternalData(target)\n      if (internalData && internalData.xhr) {\n        internalData.xhr.abort()\n      }\n    })\n    /** @type {(ev: PopStateEvent) => any} */\n    const originalPopstate = window.onpopstate\n      ? window.onpopstate.bind(window)\n      : null\n    /** @type {(ev: PopStateEvent) => any} */\n    window.onpopstate = function (event) {\n      if (event.state && event.state.htmx) {\n        restoreHistory()\n        forEach(restoredElts, function (elt) {\n          triggerEvent(elt, \"htmx:restored\", {\n            document: getDocument(),\n            triggerEvent,\n          })\n        })\n      } else {\n        if (originalPopstate) {\n          originalPopstate(event)\n        }\n      }\n    }\n    getWindow().setTimeout(function () {\n      triggerEvent(body, \"htmx:load\", {}) // give ready handlers a chance to load up before firing this event\n      body = null // kill reference for gc\n    }, 0)\n  })\n\n  return htmx\n})()\n\n/** @typedef {'get'|'head'|'post'|'put'|'delete'|'connect'|'options'|'trace'|'patch'} HttpVerb */\n\n/**\n * @typedef {Object} SwapOptions\n * @property {string} [select]\n * @property {string} [selectOOB]\n * @property {*} [eventInfo]\n * @property {string} [anchor]\n * @property {Element} [contextElement]\n * @property {swapCallback} [afterSwapCallback]\n * @property {swapCallback} [afterSettleCallback]\n */\n\n/**\n * @callback swapCallback\n */\n\n/**\n * @typedef {'innerHTML' | 'outerHTML' | 'beforebegin' | 'afterbegin' | 'beforeend' | 'afterend' | 'delete' | 'none' | string} HtmxSwapStyle\n */\n\n/**\n * @typedef HtmxSwapSpecification\n * @property {HtmxSwapStyle} swapStyle\n * @property {number} swapDelay\n * @property {number} settleDelay\n * @property {boolean} [transition]\n * @property {boolean} [ignoreTitle]\n * @property {string} [head]\n * @property {'top' | 'bottom'} [scroll]\n * @property {string} [scrollTarget]\n * @property {string} [show]\n * @property {string} [showTarget]\n * @property {boolean} [focusScroll]\n */\n\n/**\n * @typedef {((this:Node, evt:Event) => boolean) & {source: string}} ConditionalFunction\n */\n\n/**\n * @typedef {Object} HtmxTriggerSpecification\n * @property {string} trigger\n * @property {number} [pollInterval]\n * @property {ConditionalFunction} [eventFilter]\n * @property {boolean} [changed]\n * @property {boolean} [once]\n * @property {boolean} [consume]\n * @property {number} [delay]\n * @property {string} [from]\n * @property {string} [target]\n * @property {number} [throttle]\n * @property {string} [queue]\n * @property {string} [root]\n * @property {string} [threshold]\n */\n\n/**\n * @typedef {{elt: Element, message: string, validity: ValidityState}} HtmxElementValidationError\n */\n\n/**\n * @typedef {Record<string, string>} HtmxHeaderSpecification\n * @property {'true'} HX-Request\n * @property {string|null} HX-Trigger\n * @property {string|null} HX-Trigger-Name\n * @property {string|null} HX-Target\n * @property {string} HX-Current-URL\n * @property {string} [HX-Prompt]\n * @property {'true'} [HX-Boosted]\n * @property {string} [Content-Type]\n * @property {'true'} [HX-History-Restore-Request]\n */\n\n/** @typedef HtmxAjaxHelperContext\n * @property {Element|string} [source]\n * @property {Event} [event]\n * @property {HtmxAjaxHandler} [handler]\n * @property {Element|string} [target]\n * @property {HtmxSwapStyle} [swap]\n * @property {Object|FormData} [values]\n * @property {Record<string,string>} [headers]\n * @property {string} [select]\n */\n\n/**\n * @typedef {Object} HtmxRequestConfig\n * @property {boolean} boosted\n * @property {boolean} useUrlParams\n * @property {FormData} formData\n * @property {Object} parameters formData proxy\n * @property {FormData} unfilteredFormData\n * @property {Object} unfilteredParameters unfilteredFormData proxy\n * @property {HtmxHeaderSpecification} headers\n * @property {Element} target\n * @property {HttpVerb} verb\n * @property {HtmxElementValidationError[]} errors\n * @property {boolean} withCredentials\n * @property {number} timeout\n * @property {string} path\n * @property {Event} triggeringEvent\n */\n\n/**\n * @typedef {Object} HtmxResponseInfo\n * @property {XMLHttpRequest} xhr\n * @property {Element} target\n * @property {HtmxRequestConfig} requestConfig\n * @property {HtmxAjaxEtc} etc\n * @property {boolean} boosted\n * @property {string} select\n * @property {{requestPath: string, finalRequestPath: string, responsePath: string|null, anchor: string}} pathInfo\n * @property {boolean} [failed]\n * @property {boolean} [successful]\n * @property {boolean} [keepIndicators]\n */\n\n/**\n * @typedef {Object} HtmxAjaxEtc\n * @property {boolean} [returnPromise]\n * @property {HtmxAjaxHandler} [handler]\n * @property {string} [select]\n * @property {Element} [targetOverride]\n * @property {HtmxSwapStyle} [swapOverride]\n * @property {Record<string,string>} [headers]\n * @property {Object|FormData} [values]\n * @property {boolean} [credentials]\n * @property {number} [timeout]\n */\n\n/**\n * @typedef {Object} HtmxResponseHandlingConfig\n * @property {string} [code]\n * @property {boolean} swap\n * @property {boolean} [error]\n * @property {boolean} [ignoreTitle]\n * @property {string} [select]\n * @property {string} [target]\n * @property {string} [swapOverride]\n * @property {string} [event]\n */\n\n/**\n * @typedef {HtmxResponseInfo & {shouldSwap: boolean, serverResponse: any, isError: boolean, ignoreTitle: boolean, selectOverride:string}} HtmxBeforeSwapDetails\n */\n\n/**\n * @callback HtmxAjaxHandler\n * @param {Element} elt\n * @param {HtmxResponseInfo} responseInfo\n */\n\n/**\n * @typedef {(() => void)} HtmxSettleTask\n */\n\n/**\n * @typedef {Object} HtmxSettleInfo\n * @property {HtmxSettleTask[]} tasks\n * @property {Element[]} elts\n * @property {string} [title]\n */\n\n/**\n * @see https://github.com/bigskysoftware/htmx-extensions/blob/main/README.md\n * @typedef {Object} HtmxExtension\n * @property {(api: any) => void} init\n * @property {(name: string, event: Event|CustomEvent) => boolean} onEvent\n * @property {(text: string, xhr: XMLHttpRequest, elt: Element) => string} transformResponse\n * @property {(swapStyle: HtmxSwapStyle) => boolean} isInlineSwap\n * @property {(swapStyle: HtmxSwapStyle, target: Node, fragment: Node, settleInfo: HtmxSettleInfo) => boolean|Node[]} handleSwap\n * @property {(xhr: XMLHttpRequest, parameters: FormData, elt: Node) => *|string|null} encodeParameters\n * @property {() => string[]|null} getSelectors\n */\n", "/*************************\n * Croppie\n * Copyright 2019\n * Foliotek\n * Version: 2.6.5\n *************************/\n;(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(factory)\n  } else if (\n    typeof exports === \"object\" &&\n    typeof exports.nodeName !== \"string\"\n  ) {\n    // CommonJS\n    module.exports = factory()\n  } else {\n    // Browser globals\n    root.Croppie = factory()\n  }\n})(typeof self !== \"undefined\" ? self : this, function () {\n  /* Polyfills */\n  if (typeof Promise !== \"function\") {\n    /*! promise-polyfill 3.1.0 */\n    !(function (a) {\n      function b(a, b) {\n        return function () {\n          a.apply(b, arguments)\n        }\n      }\n      function c(a) {\n        if (\"object\" !== typeof this)\n          throw new TypeError(\"Promises must be constructed via new\")\n        if (\"function\" !== typeof a) throw new TypeError(\"not a function\")\n        ;(this._state = null),\n          (this._value = null),\n          (this._deferreds = []),\n          i(a, b(e, this), b(f, this))\n      }\n      function d(a) {\n        var b = this\n        return null === this._state\n          ? void this._deferreds.push(a)\n          : void k(function () {\n              var c = b._state ? a.onFulfilled : a.onRejected\n              if (null === c)\n                return void (b._state ? a.resolve : a.reject)(b._value)\n              var d\n              try {\n                d = c(b._value)\n              } catch (e) {\n                return void a.reject(e)\n              }\n              a.resolve(d)\n            })\n      }\n      function e(a) {\n        try {\n          if (a === this)\n            throw new TypeError(\"A promise cannot be resolved with itself.\")\n          if (a && (\"object\" === typeof a || \"function\" === typeof a)) {\n            var c = a.then\n            if (\"function\" === typeof c)\n              return void i(b(c, a), b(e, this), b(f, this))\n          }\n          ;(this._state = !0), (this._value = a), g.call(this)\n        } catch (d) {\n          f.call(this, d)\n        }\n      }\n      function f(a) {\n        ;(this._state = !1), (this._value = a), g.call(this)\n      }\n      function g() {\n        for (var a = 0, b = this._deferreds.length; b > a; a++)\n          d.call(this, this._deferreds[a])\n        this._deferreds = null\n      }\n      function h(a, b, c, d) {\n        ;(this.onFulfilled = \"function\" === typeof a ? a : null),\n          (this.onRejected = \"function\" === typeof b ? b : null),\n          (this.resolve = c),\n          (this.reject = d)\n      }\n      function i(a, b, c) {\n        var d = !1\n        try {\n          a(\n            function (a) {\n              d || ((d = !0), b(a))\n            },\n            function (a) {\n              d || ((d = !0), c(a))\n            }\n          )\n        } catch (e) {\n          if (d) return\n          ;(d = !0), c(e)\n        }\n      }\n      var j = setTimeout,\n        k =\n          (\"function\" === typeof setImmediate && setImmediate) ||\n          function (a) {\n            j(a, 1)\n          },\n        l =\n          Array.isArray ||\n          function (a) {\n            return \"[object Array]\" === Object.prototype.toString.call(a)\n          }\n      ;(c.prototype[\"catch\"] = function (a) {\n        return this.then(null, a)\n      }),\n        (c.prototype.then = function (a, b) {\n          var e = this\n          return new c(function (c, f) {\n            d.call(e, new h(a, b, c, f))\n          })\n        }),\n        (c.all = function () {\n          var a = Array.prototype.slice.call(\n            1 === arguments.length && l(arguments[0]) ? arguments[0] : arguments\n          )\n          return new c(function (b, c) {\n            function d(f, g) {\n              try {\n                if (g && (\"object\" === typeof g || \"function\" === typeof g)) {\n                  var h = g.then\n                  if (\"function\" === typeof h)\n                    return void h.call(\n                      g,\n                      function (a) {\n                        d(f, a)\n                      },\n                      c\n                    )\n                }\n                ;(a[f] = g), 0 === --e && b(a)\n              } catch (i) {\n                c(i)\n              }\n            }\n            if (0 === a.length) return b([])\n            for (var e = a.length, f = 0; f < a.length; f++) d(f, a[f])\n          })\n        }),\n        (c.resolve = function (a) {\n          return a && \"object\" === typeof a && a.constructor === c\n            ? a\n            : new c(function (b) {\n                b(a)\n              })\n        }),\n        (c.reject = function (a) {\n          return new c(function (b, c) {\n            c(a)\n          })\n        }),\n        (c.race = function (a) {\n          return new c(function (b, c) {\n            for (var d = 0, e = a.length; e > d; d++) a[d].then(b, c)\n          })\n        }),\n        (c._setImmediateFn = function (a) {\n          k = a\n        }),\n        \"undefined\" !== typeof module && module.exports\n          ? (module.exports = c)\n          : a.Promise || (a.Promise = c)\n    })(this)\n  }\n\n  if (\n    typeof window !== \"undefined\" &&\n    typeof window.CustomEvent !== \"function\"\n  ) {\n    ;(function () {\n      function CustomEvent(event, params) {\n        params = params || {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined,\n        }\n        var evt = document.createEvent(\"CustomEvent\")\n        evt.initCustomEvent(\n          event,\n          params.bubbles,\n          params.cancelable,\n          params.detail\n        )\n        return evt\n      }\n      CustomEvent.prototype = window.Event.prototype\n      window.CustomEvent = CustomEvent\n    })()\n  }\n\n  if (\n    typeof HTMLCanvasElement !== \"undefined\" &&\n    !HTMLCanvasElement.prototype.toBlob\n  ) {\n    Object.defineProperty(HTMLCanvasElement.prototype, \"toBlob\", {\n      value: function (callback, type, quality) {\n        var binStr = atob(this.toDataURL(type, quality).split(\",\")[1]),\n          len = binStr.length,\n          arr = new Uint8Array(len)\n\n        for (var i = 0; i < len; i++) {\n          arr[i] = binStr.charCodeAt(i)\n        }\n\n        callback(new Blob([arr], { type: type || \"image/png\" }))\n      },\n    })\n  }\n  /* End Polyfills */\n\n  var cssPrefixes = [\"Webkit\", \"Moz\", \"ms\"],\n    emptyStyles =\n      typeof document !== \"undefined\"\n        ? document.createElement(\"div\").style\n        : {},\n    EXIF_NORM = [1, 8, 3, 6],\n    EXIF_FLIP = [2, 7, 4, 5],\n    CSS_TRANS_ORG,\n    CSS_TRANSFORM,\n    CSS_USERSELECT\n\n  function vendorPrefix(prop) {\n    if (prop in emptyStyles) {\n      return prop\n    }\n\n    var capProp = prop[0].toUpperCase() + prop.slice(1),\n      i = cssPrefixes.length\n\n    while (i--) {\n      prop = cssPrefixes[i] + capProp\n      if (prop in emptyStyles) {\n        return prop\n      }\n    }\n  }\n\n  CSS_TRANSFORM = vendorPrefix(\"transform\")\n  CSS_TRANS_ORG = vendorPrefix(\"transformOrigin\")\n  CSS_USERSELECT = vendorPrefix(\"userSelect\")\n\n  function getExifOffset(ornt, rotate) {\n    var arr = EXIF_NORM.indexOf(ornt) > -1 ? EXIF_NORM : EXIF_FLIP,\n      index = arr.indexOf(ornt),\n      offset = (rotate / 90) % arr.length // 180 = 2%4 = 2 shift exif by 2 indexes\n\n    return arr[(arr.length + index + (offset % arr.length)) % arr.length]\n  }\n\n  // Credits to : Andrew Dupont - http://andrewdupont.net/2009/08/28/deep-extending-objects-in-javascript/\n  function deepExtend(destination, source) {\n    destination = destination || {}\n    for (var property in source) {\n      if (\n        source[property] &&\n        source[property].constructor &&\n        source[property].constructor === Object\n      ) {\n        destination[property] = destination[property] || {}\n        deepExtend(destination[property], source[property])\n      } else {\n        destination[property] = source[property]\n      }\n    }\n    return destination\n  }\n\n  function clone(object) {\n    return deepExtend({}, object)\n  }\n\n  function debounce(func, wait, immediate) {\n    var timeout\n    return function () {\n      var context = this,\n        args = arguments\n      var later = function () {\n        timeout = null\n        if (!immediate) func.apply(context, args)\n      }\n      var callNow = immediate && !timeout\n      clearTimeout(timeout)\n      timeout = setTimeout(later, wait)\n      if (callNow) func.apply(context, args)\n    }\n  }\n\n  function dispatchChange(element) {\n    if (\"createEvent\" in document) {\n      var evt = document.createEvent(\"HTMLEvents\")\n      evt.initEvent(\"change\", false, true)\n      element.dispatchEvent(evt)\n    } else {\n      element.fireEvent(\"onchange\")\n    }\n  }\n\n  //http://jsperf.com/vanilla-css\n  function css(el, styles, val) {\n    if (typeof styles === \"string\") {\n      var tmp = styles\n      styles = {}\n      styles[tmp] = val\n    }\n\n    for (var prop in styles) {\n      el.style[prop] = styles[prop]\n    }\n  }\n\n  function addClass(el, c) {\n    if (el.classList) {\n      el.classList.add(c)\n    } else {\n      el.className += \" \" + c\n    }\n  }\n\n  function removeClass(el, c) {\n    if (el.classList) {\n      el.classList.remove(c)\n    } else {\n      el.className = el.className.replace(c, \"\")\n    }\n  }\n\n  function setAttributes(el, attrs) {\n    for (var key in attrs) {\n      el.setAttribute(key, attrs[key])\n    }\n  }\n\n  function num(v) {\n    return parseInt(v, 10)\n  }\n\n  /* Utilities */\n  function loadImage(src, doExif) {\n    if (!src) {\n      throw \"Source image missing\"\n    }\n\n    var img = new Image()\n    img.style.opacity = \"0\"\n    return new Promise(function (resolve, reject) {\n      function _resolve() {\n        img.style.opacity = \"1\"\n        setTimeout(function () {\n          resolve(img)\n        }, 1)\n      }\n\n      img.removeAttribute(\"crossOrigin\")\n      if (src.match(/^https?:\\/\\/|^\\/\\//)) {\n        img.setAttribute(\"crossOrigin\", \"anonymous\")\n      }\n\n      img.onload = function () {\n        if (doExif) {\n          EXIF.getData(img, function () {\n            _resolve()\n          })\n        } else {\n          _resolve()\n        }\n      }\n      img.onerror = function (ev) {\n        img.style.opacity = 1\n        setTimeout(function () {\n          reject(ev)\n        }, 1)\n      }\n      img.src = src\n    })\n  }\n\n  function naturalImageDimensions(img, ornt) {\n    var w = img.naturalWidth\n    var h = img.naturalHeight\n    var orient = ornt || getExifOrientation(img)\n    if (orient && orient >= 5) {\n      var x = w\n      w = h\n      h = x\n    }\n    return { width: w, height: h }\n  }\n\n  /* CSS Transform Prototype */\n  var TRANSLATE_OPTS = {\n    translate3d: {\n      suffix: \", 0px\",\n    },\n    translate: {\n      suffix: \"\",\n    },\n  }\n  var Transform = function (x, y, scale) {\n    this.x = parseFloat(x)\n    this.y = parseFloat(y)\n    this.scale = parseFloat(scale)\n  }\n\n  Transform.parse = function (v) {\n    if (v.style) {\n      return Transform.parse(v.style[CSS_TRANSFORM])\n    } else if (v.indexOf(\"matrix\") > -1 || v.indexOf(\"none\") > -1) {\n      return Transform.fromMatrix(v)\n    } else {\n      return Transform.fromString(v)\n    }\n  }\n\n  Transform.fromMatrix = function (v) {\n    var vals = v.substring(7).split(\",\")\n    if (!vals.length || v === \"none\") {\n      vals = [1, 0, 0, 1, 0, 0]\n    }\n\n    return new Transform(num(vals[4]), num(vals[5]), parseFloat(vals[0]))\n  }\n\n  Transform.fromString = function (v) {\n    var values = v.split(\") \"),\n      translate = values[0]\n        .substring(Croppie.globals.translate.length + 1)\n        .split(\",\"),\n      scale = values.length > 1 ? values[1].substring(6) : 1,\n      x = translate.length > 1 ? translate[0] : 0,\n      y = translate.length > 1 ? translate[1] : 0\n\n    return new Transform(x, y, scale)\n  }\n\n  Transform.prototype.toString = function () {\n    var suffix = TRANSLATE_OPTS[Croppie.globals.translate].suffix || \"\"\n    return (\n      Croppie.globals.translate +\n      \"(\" +\n      this.x +\n      \"px, \" +\n      this.y +\n      \"px\" +\n      suffix +\n      \") scale(\" +\n      this.scale +\n      \")\"\n    )\n  }\n\n  var TransformOrigin = function (el) {\n    if (!el || !el.style[CSS_TRANS_ORG]) {\n      this.x = 0\n      this.y = 0\n      return\n    }\n    var css = el.style[CSS_TRANS_ORG].split(\" \")\n    this.x = parseFloat(css[0])\n    this.y = parseFloat(css[1])\n  }\n\n  TransformOrigin.prototype.toString = function () {\n    return this.x + \"px \" + this.y + \"px\"\n  }\n\n  function getExifOrientation(img) {\n    return img.exifdata && img.exifdata.Orientation\n      ? num(img.exifdata.Orientation)\n      : 1\n  }\n\n  function drawCanvas(canvas, img, orientation) {\n    var width = img.width,\n      height = img.height,\n      ctx = canvas.getContext(\"2d\")\n\n    canvas.width = img.width\n    canvas.height = img.height\n\n    ctx.save()\n    switch (orientation) {\n      case 2:\n        ctx.translate(width, 0)\n        ctx.scale(-1, 1)\n        break\n\n      case 3:\n        ctx.translate(width, height)\n        ctx.rotate((180 * Math.PI) / 180)\n        break\n\n      case 4:\n        ctx.translate(0, height)\n        ctx.scale(1, -1)\n        break\n\n      case 5:\n        canvas.width = height\n        canvas.height = width\n        ctx.rotate((90 * Math.PI) / 180)\n        ctx.scale(1, -1)\n        break\n\n      case 6:\n        canvas.width = height\n        canvas.height = width\n        ctx.rotate((90 * Math.PI) / 180)\n        ctx.translate(0, -height)\n        break\n\n      case 7:\n        canvas.width = height\n        canvas.height = width\n        ctx.rotate((-90 * Math.PI) / 180)\n        ctx.translate(-width, height)\n        ctx.scale(1, -1)\n        break\n\n      case 8:\n        canvas.width = height\n        canvas.height = width\n        ctx.translate(0, width)\n        ctx.rotate((-90 * Math.PI) / 180)\n        break\n    }\n    ctx.drawImage(img, 0, 0, width, height)\n    ctx.restore()\n  }\n\n  /* Private Methods */\n  function _create() {\n    var self = this,\n      contClass = \"croppie-container\",\n      customViewportClass = self.options.viewport.type\n        ? \"cr-vp-\" + self.options.viewport.type\n        : null,\n      boundary,\n      img,\n      viewport,\n      overlay,\n      bw,\n      bh\n\n    self.options.useCanvas =\n      self.options.enableOrientation || _hasExif.call(self)\n    // Properties on class\n    self.data = {}\n    self.elements = {}\n\n    boundary = self.elements.boundary = document.createElement(\"div\")\n    viewport = self.elements.viewport = document.createElement(\"div\")\n    img = self.elements.img = document.createElement(\"img\")\n    overlay = self.elements.overlay = document.createElement(\"div\")\n\n    if (self.options.useCanvas) {\n      self.elements.canvas = document.createElement(\"canvas\")\n      self.elements.preview = self.elements.canvas\n    } else {\n      self.elements.preview = img\n    }\n\n    addClass(boundary, \"cr-boundary\")\n    boundary.setAttribute(\"aria-dropeffect\", \"none\")\n    bw = self.options.boundary.width\n    bh = self.options.boundary.height\n    css(boundary, {\n      width: bw + (isNaN(bw) ? \"\" : \"px\"),\n      height: bh + (isNaN(bh) ? \"\" : \"px\"),\n    })\n\n    addClass(viewport, \"cr-viewport\")\n    if (customViewportClass) {\n      addClass(viewport, customViewportClass)\n    }\n    css(viewport, {\n      width: self.options.viewport.width + \"px\",\n      height: self.options.viewport.height + \"px\",\n    })\n    viewport.setAttribute(\"tabindex\", 0)\n\n    addClass(self.elements.preview, \"cr-image\")\n    setAttributes(self.elements.preview, {\n      alt: \"preview\",\n      \"aria-grabbed\": \"false\",\n    })\n    addClass(overlay, \"cr-overlay\")\n\n    self.element.appendChild(boundary)\n    boundary.appendChild(self.elements.preview)\n    boundary.appendChild(viewport)\n    boundary.appendChild(overlay)\n\n    addClass(self.element, contClass)\n    if (self.options.customClass) {\n      addClass(self.element, self.options.customClass)\n    }\n\n    _initDraggable.call(this)\n\n    if (self.options.enableZoom) {\n      _initializeZoom.call(self)\n    }\n\n    // if (self.options.enableOrientation) {\n    //     _initRotationControls.call(self);\n    // }\n\n    if (self.options.enableResize) {\n      _initializeResize.call(self)\n    }\n  }\n\n  // function _initRotationControls () {\n  //     var self = this,\n  //         wrap, btnLeft, btnRight, iLeft, iRight;\n\n  //     wrap = document.createElement('div');\n  //     self.elements.orientationBtnLeft = btnLeft = document.createElement('button');\n  //     self.elements.orientationBtnRight = btnRight = document.createElement('button');\n\n  //     wrap.appendChild(btnLeft);\n  //     wrap.appendChild(btnRight);\n\n  //     iLeft = document.createElement('i');\n  //     iRight = document.createElement('i');\n  //     btnLeft.appendChild(iLeft);\n  //     btnRight.appendChild(iRight);\n\n  //     addClass(wrap, 'cr-rotate-controls');\n  //     addClass(btnLeft, 'cr-rotate-l');\n  //     addClass(btnRight, 'cr-rotate-r');\n\n  //     self.elements.boundary.appendChild(wrap);\n\n  //     btnLeft.addEventListener('click', function () {\n  //         self.rotate(-90);\n  //     });\n  //     btnRight.addEventListener('click', function () {\n  //         self.rotate(90);\n  //     });\n  // }\n\n  function _hasExif() {\n    return this.options.enableExif && window.EXIF\n  }\n\n  function _initializeResize() {\n    var self = this\n    var wrap = document.createElement(\"div\")\n    var isDragging = false\n    var direction\n    var originalX\n    var originalY\n    var minSize = 50\n    var maxWidth\n    var maxHeight\n    var vr\n    var hr\n\n    addClass(wrap, \"cr-resizer\")\n    css(wrap, {\n      width: this.options.viewport.width + \"px\",\n      height: this.options.viewport.height + \"px\",\n    })\n\n    if (this.options.resizeControls.height) {\n      vr = document.createElement(\"div\")\n      addClass(vr, \"cr-resizer-vertical\")\n      wrap.appendChild(vr)\n    }\n\n    if (this.options.resizeControls.width) {\n      hr = document.createElement(\"div\")\n      addClass(hr, \"cr-resizer-horisontal\")\n      wrap.appendChild(hr)\n    }\n\n    function mouseDown(ev) {\n      if (ev.button !== undefined && ev.button !== 0) return\n\n      ev.preventDefault()\n      if (isDragging) {\n        return\n      }\n\n      var overlayRect = self.elements.overlay.getBoundingClientRect()\n\n      isDragging = true\n      originalX = ev.pageX\n      originalY = ev.pageY\n      direction =\n        ev.currentTarget.className.indexOf(\"vertical\") !== -1 ? \"v\" : \"h\"\n      maxWidth = overlayRect.width\n      maxHeight = overlayRect.height\n\n      if (ev.touches) {\n        var touches = ev.touches[0]\n        originalX = touches.pageX\n        originalY = touches.pageY\n      }\n\n      window.addEventListener(\"mousemove\", mouseMove)\n      window.addEventListener(\"touchmove\", mouseMove)\n      window.addEventListener(\"mouseup\", mouseUp)\n      window.addEventListener(\"touchend\", mouseUp)\n      document.body.style[CSS_USERSELECT] = \"none\"\n    }\n\n    function mouseMove(ev) {\n      var pageX = ev.pageX\n      var pageY = ev.pageY\n\n      ev.preventDefault()\n\n      if (ev.touches) {\n        var touches = ev.touches[0]\n        pageX = touches.pageX\n        pageY = touches.pageY\n      }\n\n      var deltaX = pageX - originalX\n      var deltaY = pageY - originalY\n      var newHeight = self.options.viewport.height + deltaY\n      var newWidth = self.options.viewport.width + deltaX\n\n      if (direction === \"v\" && newHeight >= minSize && newHeight <= maxHeight) {\n        css(wrap, {\n          height: newHeight + \"px\",\n        })\n\n        self.options.boundary.height += deltaY\n        css(self.elements.boundary, {\n          height: self.options.boundary.height + \"px\",\n        })\n\n        self.options.viewport.height += deltaY\n        css(self.elements.viewport, {\n          height: self.options.viewport.height + \"px\",\n        })\n      } else if (\n        direction === \"h\" &&\n        newWidth >= minSize &&\n        newWidth <= maxWidth\n      ) {\n        css(wrap, {\n          width: newWidth + \"px\",\n        })\n\n        self.options.boundary.width += deltaX\n        css(self.elements.boundary, {\n          width: self.options.boundary.width + \"px\",\n        })\n\n        self.options.viewport.width += deltaX\n        css(self.elements.viewport, {\n          width: self.options.viewport.width + \"px\",\n        })\n      }\n\n      _updateOverlay.call(self)\n      _updateZoomLimits.call(self)\n      _updateCenterPoint.call(self)\n      _triggerUpdate.call(self)\n      originalY = pageY\n      originalX = pageX\n    }\n\n    function mouseUp() {\n      isDragging = false\n      window.removeEventListener(\"mousemove\", mouseMove)\n      window.removeEventListener(\"touchmove\", mouseMove)\n      window.removeEventListener(\"mouseup\", mouseUp)\n      window.removeEventListener(\"touchend\", mouseUp)\n      document.body.style[CSS_USERSELECT] = \"\"\n    }\n\n    if (vr) {\n      vr.addEventListener(\"mousedown\", mouseDown)\n      vr.addEventListener(\"touchstart\", mouseDown)\n    }\n\n    if (hr) {\n      hr.addEventListener(\"mousedown\", mouseDown)\n      hr.addEventListener(\"touchstart\", mouseDown)\n    }\n\n    this.elements.boundary.appendChild(wrap)\n  }\n\n  function _setZoomerVal(v) {\n    if (this.options.enableZoom) {\n      var z = this.elements.zoomer,\n        val = fix(v, 4)\n\n      z.value = Math.max(\n        parseFloat(z.min),\n        Math.min(parseFloat(z.max), val)\n      ).toString()\n    }\n  }\n\n  function _initializeZoom() {\n    var self = this,\n      wrap = (self.elements.zoomerWrap = document.createElement(\"div\")),\n      zoomer = (self.elements.zoomer = document.createElement(\"input\"))\n\n    addClass(wrap, \"cr-slider-wrap\")\n    addClass(zoomer, \"cr-slider\")\n    zoomer.type = \"range\"\n    zoomer.step = \"0.0001\"\n    zoomer.value = \"1\"\n    zoomer.style.display = self.options.showZoomer ? \"\" : \"none\"\n    zoomer.setAttribute(\"aria-label\", \"zoom\")\n\n    self.element.appendChild(wrap)\n    wrap.appendChild(zoomer)\n\n    self._currentZoom = 1\n\n    function change() {\n      _onZoom.call(self, {\n        value: parseFloat(zoomer.value),\n        origin: new TransformOrigin(self.elements.preview),\n        viewportRect: self.elements.viewport.getBoundingClientRect(),\n        transform: Transform.parse(self.elements.preview),\n      })\n    }\n\n    function scroll(ev) {\n      var delta, targetZoom\n\n      if (self.options.mouseWheelZoom === \"ctrl\" && ev.ctrlKey !== true) {\n        return 0\n      } else if (ev.wheelDelta) {\n        delta = ev.wheelDelta / 1200 //wheelDelta min: -120 max: 120 // max x 10 x 2\n      } else if (ev.deltaY) {\n        delta = ev.deltaY / 1060 //deltaY min: -53 max: 53 // max x 10 x 2\n      } else if (ev.detail) {\n        delta = ev.detail / -60 //delta min: -3 max: 3 // max x 10 x 2\n      } else {\n        delta = 0\n      }\n\n      targetZoom = self._currentZoom + delta * self._currentZoom\n\n      ev.preventDefault()\n      _setZoomerVal.call(self, targetZoom)\n      change.call(self)\n    }\n\n    self.elements.zoomer.addEventListener(\"input\", change) // this is being fired twice on keypress\n    self.elements.zoomer.addEventListener(\"change\", change)\n\n    if (self.options.mouseWheelZoom) {\n      self.elements.boundary.addEventListener(\"mousewheel\", scroll)\n      self.elements.boundary.addEventListener(\"DOMMouseScroll\", scroll)\n    }\n  }\n\n  function _onZoom(ui) {\n    var self = this,\n      transform = ui ? ui.transform : Transform.parse(self.elements.preview),\n      vpRect = ui\n        ? ui.viewportRect\n        : self.elements.viewport.getBoundingClientRect(),\n      origin = ui ? ui.origin : new TransformOrigin(self.elements.preview)\n\n    function applyCss() {\n      var transCss = {}\n      transCss[CSS_TRANSFORM] = transform.toString()\n      transCss[CSS_TRANS_ORG] = origin.toString()\n      css(self.elements.preview, transCss)\n    }\n\n    self._currentZoom = ui ? ui.value : self._currentZoom\n    transform.scale = self._currentZoom\n    self.elements.zoomer.setAttribute(\"aria-valuenow\", self._currentZoom)\n    applyCss()\n\n    if (self.options.enforceBoundary) {\n      var boundaries = _getVirtualBoundaries.call(self, vpRect),\n        transBoundaries = boundaries.translate,\n        oBoundaries = boundaries.origin\n\n      if (transform.x >= transBoundaries.maxX) {\n        origin.x = oBoundaries.minX\n        transform.x = transBoundaries.maxX\n      }\n\n      if (transform.x <= transBoundaries.minX) {\n        origin.x = oBoundaries.maxX\n        transform.x = transBoundaries.minX\n      }\n\n      if (transform.y >= transBoundaries.maxY) {\n        origin.y = oBoundaries.minY\n        transform.y = transBoundaries.maxY\n      }\n\n      if (transform.y <= transBoundaries.minY) {\n        origin.y = oBoundaries.maxY\n        transform.y = transBoundaries.minY\n      }\n    }\n    applyCss()\n    _debouncedOverlay.call(self)\n    _triggerUpdate.call(self)\n  }\n\n  function _getVirtualBoundaries(viewport) {\n    var self = this,\n      scale = self._currentZoom,\n      vpWidth = viewport.width,\n      vpHeight = viewport.height,\n      centerFromBoundaryX = self.elements.boundary.clientWidth / 2,\n      centerFromBoundaryY = self.elements.boundary.clientHeight / 2,\n      imgRect = self.elements.preview.getBoundingClientRect(),\n      curImgWidth = imgRect.width,\n      curImgHeight = imgRect.height,\n      halfWidth = vpWidth / 2,\n      halfHeight = vpHeight / 2\n\n    var maxX = (halfWidth / scale - centerFromBoundaryX) * -1\n    var minX = maxX - (curImgWidth * (1 / scale) - vpWidth * (1 / scale))\n\n    var maxY = (halfHeight / scale - centerFromBoundaryY) * -1\n    var minY = maxY - (curImgHeight * (1 / scale) - vpHeight * (1 / scale))\n\n    var originMinX = (1 / scale) * halfWidth\n    var originMaxX = curImgWidth * (1 / scale) - originMinX\n\n    var originMinY = (1 / scale) * halfHeight\n    var originMaxY = curImgHeight * (1 / scale) - originMinY\n\n    return {\n      translate: {\n        maxX: maxX,\n        minX: minX,\n        maxY: maxY,\n        minY: minY,\n      },\n      origin: {\n        maxX: originMaxX,\n        minX: originMinX,\n        maxY: originMaxY,\n        minY: originMinY,\n      },\n    }\n  }\n\n  function _updateCenterPoint(rotate) {\n    var self = this,\n      scale = self._currentZoom,\n      data = self.elements.preview.getBoundingClientRect(),\n      vpData = self.elements.viewport.getBoundingClientRect(),\n      transform = Transform.parse(self.elements.preview.style[CSS_TRANSFORM]),\n      pc = new TransformOrigin(self.elements.preview),\n      top = vpData.top - data.top + vpData.height / 2,\n      left = vpData.left - data.left + vpData.width / 2,\n      center = {},\n      adj = {}\n\n    if (rotate) {\n      var cx = pc.x\n      var cy = pc.y\n      var tx = transform.x\n      var ty = transform.y\n\n      center.y = cx\n      center.x = cy\n      transform.y = tx\n      transform.x = ty\n    } else {\n      center.y = top / scale\n      center.x = left / scale\n\n      adj.y = (center.y - pc.y) * (1 - scale)\n      adj.x = (center.x - pc.x) * (1 - scale)\n\n      transform.x -= adj.x\n      transform.y -= adj.y\n    }\n\n    var newCss = {}\n    newCss[CSS_TRANS_ORG] = center.x + \"px \" + center.y + \"px\"\n    newCss[CSS_TRANSFORM] = transform.toString()\n    css(self.elements.preview, newCss)\n  }\n\n  function _initDraggable() {\n    var self = this,\n      isDragging = false,\n      originalX,\n      originalY,\n      originalDistance,\n      vpRect,\n      transform\n\n    function assignTransformCoordinates(deltaX, deltaY) {\n      var imgRect = self.elements.preview.getBoundingClientRect(),\n        top = transform.y + deltaY,\n        left = transform.x + deltaX\n\n      if (self.options.enforceBoundary) {\n        if (\n          vpRect.top > imgRect.top + deltaY &&\n          vpRect.bottom < imgRect.bottom + deltaY\n        ) {\n          transform.y = top\n        }\n\n        if (\n          vpRect.left > imgRect.left + deltaX &&\n          vpRect.right < imgRect.right + deltaX\n        ) {\n          transform.x = left\n        }\n      } else {\n        transform.y = top\n        transform.x = left\n      }\n    }\n\n    function toggleGrabState(isDragging) {\n      self.elements.preview.setAttribute(\"aria-grabbed\", isDragging)\n      self.elements.boundary.setAttribute(\n        \"aria-dropeffect\",\n        isDragging ? \"move\" : \"none\"\n      )\n    }\n\n    function keyDown(ev) {\n      var LEFT_ARROW = 37,\n        UP_ARROW = 38,\n        RIGHT_ARROW = 39,\n        DOWN_ARROW = 40\n\n      if (\n        ev.shiftKey &&\n        (ev.keyCode === UP_ARROW || ev.keyCode === DOWN_ARROW)\n      ) {\n        var zoom\n        if (ev.keyCode === UP_ARROW) {\n          zoom =\n            parseFloat(self.elements.zoomer.value) +\n            parseFloat(self.elements.zoomer.step)\n        } else {\n          zoom =\n            parseFloat(self.elements.zoomer.value) -\n            parseFloat(self.elements.zoomer.step)\n        }\n        self.setZoom(zoom)\n      } else if (\n        self.options.enableKeyMovement &&\n        ev.keyCode >= 37 &&\n        ev.keyCode <= 40\n      ) {\n        ev.preventDefault()\n        var movement = parseKeyDown(ev.keyCode)\n\n        transform = Transform.parse(self.elements.preview)\n        document.body.style[CSS_USERSELECT] = \"none\"\n        vpRect = self.elements.viewport.getBoundingClientRect()\n        keyMove(movement)\n      }\n\n      function parseKeyDown(key) {\n        switch (key) {\n          case LEFT_ARROW:\n            return [1, 0]\n          case UP_ARROW:\n            return [0, 1]\n          case RIGHT_ARROW:\n            return [-1, 0]\n          case DOWN_ARROW:\n            return [0, -1]\n        }\n      }\n    }\n\n    function keyMove(movement) {\n      var deltaX = movement[0],\n        deltaY = movement[1],\n        newCss = {}\n\n      assignTransformCoordinates(deltaX, deltaY)\n\n      newCss[CSS_TRANSFORM] = transform.toString()\n      css(self.elements.preview, newCss)\n      _updateOverlay.call(self)\n      document.body.style[CSS_USERSELECT] = \"\"\n      _updateCenterPoint.call(self)\n      _triggerUpdate.call(self)\n      originalDistance = 0\n    }\n\n    function mouseDown(ev) {\n      if (ev.button !== undefined && ev.button !== 0) return\n\n      ev.preventDefault()\n      if (isDragging) return\n      isDragging = true\n      originalX = ev.pageX\n      originalY = ev.pageY\n\n      if (ev.touches) {\n        var touches = ev.touches[0]\n        originalX = touches.pageX\n        originalY = touches.pageY\n      }\n      toggleGrabState(isDragging)\n      transform = Transform.parse(self.elements.preview)\n      window.addEventListener(\"mousemove\", mouseMove)\n      window.addEventListener(\"touchmove\", mouseMove)\n      window.addEventListener(\"mouseup\", mouseUp)\n      window.addEventListener(\"touchend\", mouseUp)\n      document.body.style[CSS_USERSELECT] = \"none\"\n      vpRect = self.elements.viewport.getBoundingClientRect()\n    }\n\n    function mouseMove(ev) {\n      ev.preventDefault()\n      var pageX = ev.pageX,\n        pageY = ev.pageY\n\n      if (ev.touches) {\n        var touches = ev.touches[0]\n        pageX = touches.pageX\n        pageY = touches.pageY\n      }\n\n      var deltaX = pageX - originalX,\n        deltaY = pageY - originalY,\n        newCss = {}\n\n      if (ev.type === \"touchmove\") {\n        if (ev.touches.length > 1) {\n          var touch1 = ev.touches[0]\n          var touch2 = ev.touches[1]\n          var dist = Math.sqrt(\n            (touch1.pageX - touch2.pageX) * (touch1.pageX - touch2.pageX) +\n              (touch1.pageY - touch2.pageY) * (touch1.pageY - touch2.pageY)\n          )\n\n          if (!originalDistance) {\n            originalDistance = dist / self._currentZoom\n          }\n\n          var scale = dist / originalDistance\n\n          _setZoomerVal.call(self, scale)\n          dispatchChange(self.elements.zoomer)\n          return\n        }\n      }\n\n      assignTransformCoordinates(deltaX, deltaY)\n\n      newCss[CSS_TRANSFORM] = transform.toString()\n      css(self.elements.preview, newCss)\n      _updateOverlay.call(self)\n      originalY = pageY\n      originalX = pageX\n    }\n\n    function mouseUp() {\n      isDragging = false\n      toggleGrabState(isDragging)\n      window.removeEventListener(\"mousemove\", mouseMove)\n      window.removeEventListener(\"touchmove\", mouseMove)\n      window.removeEventListener(\"mouseup\", mouseUp)\n      window.removeEventListener(\"touchend\", mouseUp)\n      document.body.style[CSS_USERSELECT] = \"\"\n      _updateCenterPoint.call(self)\n      _triggerUpdate.call(self)\n      originalDistance = 0\n    }\n\n    self.elements.overlay.addEventListener(\"mousedown\", mouseDown)\n    self.elements.viewport.addEventListener(\"keydown\", keyDown)\n    self.elements.overlay.addEventListener(\"touchstart\", mouseDown)\n  }\n\n  function _updateOverlay() {\n    if (!this.elements) return // since this is debounced, it can be fired after destroy\n    var self = this,\n      boundRect = self.elements.boundary.getBoundingClientRect(),\n      imgData = self.elements.preview.getBoundingClientRect()\n\n    css(self.elements.overlay, {\n      width: imgData.width + \"px\",\n      height: imgData.height + \"px\",\n      top: imgData.top - boundRect.top + \"px\",\n      left: imgData.left - boundRect.left + \"px\",\n    })\n  }\n  var _debouncedOverlay = debounce(_updateOverlay, 500)\n\n  function _triggerUpdate() {\n    var self = this,\n      data = self.get()\n\n    if (!_isVisible.call(self)) {\n      return\n    }\n\n    self.options.update.call(self, data)\n    if (self.$ && typeof Prototype === \"undefined\") {\n      self.$(self.element).trigger(\"update.croppie\", data)\n    } else {\n      var ev\n      if (window.CustomEvent) {\n        ev = new CustomEvent(\"update\", { detail: data })\n      } else {\n        ev = document.createEvent(\"CustomEvent\")\n        ev.initCustomEvent(\"update\", true, true, data)\n      }\n\n      self.element.dispatchEvent(ev)\n    }\n  }\n\n  function _isVisible() {\n    return (\n      this.elements.preview.offsetHeight > 0 &&\n      this.elements.preview.offsetWidth > 0\n    )\n  }\n\n  function _updatePropertiesFromImage() {\n    var self = this,\n      initialZoom = 1,\n      cssReset = {},\n      img = self.elements.preview,\n      imgData,\n      transformReset = new Transform(0, 0, initialZoom),\n      originReset = new TransformOrigin(),\n      isVisible = _isVisible.call(self)\n\n    if (!isVisible || self.data.bound) {\n      // if the croppie isn't visible or it doesn't need binding\n      return\n    }\n\n    self.data.bound = true\n    cssReset[CSS_TRANSFORM] = transformReset.toString()\n    cssReset[CSS_TRANS_ORG] = originReset.toString()\n    cssReset[\"opacity\"] = 1\n    css(img, cssReset)\n\n    imgData = self.elements.preview.getBoundingClientRect()\n\n    self._originalImageWidth = imgData.width\n    self._originalImageHeight = imgData.height\n    self.data.orientation = _hasExif.call(self)\n      ? getExifOrientation(self.elements.img)\n      : self.data.orientation\n\n    if (self.options.enableZoom) {\n      _updateZoomLimits.call(self, true)\n    } else {\n      self._currentZoom = initialZoom\n    }\n\n    transformReset.scale = self._currentZoom\n    cssReset[CSS_TRANSFORM] = transformReset.toString()\n    css(img, cssReset)\n\n    if (self.data.points.length) {\n      _bindPoints.call(self, self.data.points)\n    } else {\n      _centerImage.call(self)\n    }\n\n    _updateCenterPoint.call(self)\n    _updateOverlay.call(self)\n  }\n\n  function _updateZoomLimits(initial) {\n    var self = this,\n      minZoom = Math.max(self.options.minZoom, 0) || 0,\n      maxZoom = self.options.maxZoom || 1.5,\n      initialZoom,\n      defaultInitialZoom,\n      zoomer = self.elements.zoomer,\n      scale = parseFloat(zoomer.value),\n      boundaryData = self.elements.boundary.getBoundingClientRect(),\n      imgData = naturalImageDimensions(\n        self.elements.img,\n        self.data.orientation\n      ),\n      vpData = self.elements.viewport.getBoundingClientRect(),\n      minW,\n      minH\n    if (self.options.enforceBoundary) {\n      minW = vpData.width / imgData.width\n      minH = vpData.height / imgData.height\n      minZoom = Math.max(minW, minH)\n    }\n\n    if (minZoom >= maxZoom) {\n      maxZoom = minZoom + 1\n    }\n\n    zoomer.min = fix(minZoom, 4)\n    zoomer.max = fix(maxZoom, 4)\n\n    if (!initial && (scale < zoomer.min || scale > zoomer.max)) {\n      _setZoomerVal.call(self, scale < zoomer.min ? zoomer.min : zoomer.max)\n    } else if (initial) {\n      defaultInitialZoom = Math.max(\n        boundaryData.width / imgData.width,\n        boundaryData.height / imgData.height\n      )\n      initialZoom =\n        self.data.boundZoom !== null ? self.data.boundZoom : defaultInitialZoom\n      _setZoomerVal.call(self, initialZoom)\n    }\n\n    dispatchChange(zoomer)\n  }\n\n  function _bindPoints(points) {\n    if (points.length !== 4) {\n      throw \"Croppie - Invalid number of points supplied: \" + points\n    }\n    var self = this,\n      pointsWidth = points[2] - points[0],\n      // pointsHeight = points[3] - points[1],\n      vpData = self.elements.viewport.getBoundingClientRect(),\n      boundRect = self.elements.boundary.getBoundingClientRect(),\n      vpOffset = {\n        left: vpData.left - boundRect.left,\n        top: vpData.top - boundRect.top,\n      },\n      scale = vpData.width / pointsWidth,\n      originTop = points[1],\n      originLeft = points[0],\n      transformTop = -1 * points[1] + vpOffset.top,\n      transformLeft = -1 * points[0] + vpOffset.left,\n      newCss = {}\n\n    newCss[CSS_TRANS_ORG] = originLeft + \"px \" + originTop + \"px\"\n    newCss[CSS_TRANSFORM] = new Transform(\n      transformLeft,\n      transformTop,\n      scale\n    ).toString()\n    css(self.elements.preview, newCss)\n\n    _setZoomerVal.call(self, scale)\n    self._currentZoom = scale\n  }\n\n  function _centerImage() {\n    var self = this,\n      imgDim = self.elements.preview.getBoundingClientRect(),\n      vpDim = self.elements.viewport.getBoundingClientRect(),\n      boundDim = self.elements.boundary.getBoundingClientRect(),\n      vpLeft = vpDim.left - boundDim.left,\n      vpTop = vpDim.top - boundDim.top,\n      w = vpLeft - (imgDim.width - vpDim.width) / 2,\n      h = vpTop - (imgDim.height - vpDim.height) / 2,\n      transform = new Transform(w, h, self._currentZoom)\n\n    css(self.elements.preview, CSS_TRANSFORM, transform.toString())\n  }\n\n  function _transferImageToCanvas(customOrientation) {\n    var self = this,\n      canvas = self.elements.canvas,\n      img = self.elements.img,\n      ctx = canvas.getContext(\"2d\")\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n    canvas.width = img.width\n    canvas.height = img.height\n\n    var orientation =\n      (self.options.enableOrientation && customOrientation) ||\n      getExifOrientation(img)\n    drawCanvas(canvas, img, orientation)\n  }\n\n  function _getCanvas(data) {\n    var self = this,\n      points = data.points,\n      left = num(points[0]),\n      top = num(points[1]),\n      right = num(points[2]),\n      bottom = num(points[3]),\n      width = right - left,\n      height = bottom - top,\n      circle = data.circle,\n      canvas = document.createElement(\"canvas\"),\n      ctx = canvas.getContext(\"2d\"),\n      startX = 0,\n      startY = 0,\n      canvasWidth = data.outputWidth || width,\n      canvasHeight = data.outputHeight || height\n\n    canvas.width = canvasWidth\n    canvas.height = canvasHeight\n\n    if (data.backgroundColor) {\n      ctx.fillStyle = data.backgroundColor\n      ctx.fillRect(0, 0, canvasWidth, canvasHeight)\n    }\n\n    // By default assume we're going to draw the entire\n    // source image onto the destination canvas.\n    var sx = left,\n      sy = top,\n      sWidth = width,\n      sHeight = height,\n      dx = 0,\n      dy = 0,\n      dWidth = canvasWidth,\n      dHeight = canvasHeight\n\n    //\n    // Do not go outside of the original image's bounds along the x-axis.\n    // Handle translations when projecting onto the destination canvas.\n    //\n\n    // The smallest possible source x-position is 0.\n    if (left < 0) {\n      sx = 0\n      dx = (Math.abs(left) / width) * canvasWidth\n    }\n\n    // The largest possible source width is the original image's width.\n    if (sWidth + sx > self._originalImageWidth) {\n      sWidth = self._originalImageWidth - sx\n      dWidth = (sWidth / width) * canvasWidth\n    }\n\n    //\n    // Do not go outside of the original image's bounds along the y-axis.\n    //\n\n    // The smallest possible source y-position is 0.\n    if (top < 0) {\n      sy = 0\n      dy = (Math.abs(top) / height) * canvasHeight\n    }\n\n    // The largest possible source height is the original image's height.\n    if (sHeight + sy > self._originalImageHeight) {\n      sHeight = self._originalImageHeight - sy\n      dHeight = (sHeight / height) * canvasHeight\n    }\n\n    // console.table({ left, right, top, bottom, canvasWidth, canvasHeight, width, height, startX, startY, circle, sx, sy, dx, dy, sWidth, sHeight, dWidth, dHeight });\n\n    ctx.drawImage(\n      this.elements.preview,\n      sx,\n      sy,\n      sWidth,\n      sHeight,\n      dx,\n      dy,\n      dWidth,\n      dHeight\n    )\n    if (circle) {\n      ctx.fillStyle = \"#fff\"\n      ctx.globalCompositeOperation = \"destination-in\"\n      ctx.beginPath()\n      ctx.arc(\n        canvas.width / 2,\n        canvas.height / 2,\n        canvas.width / 2,\n        0,\n        Math.PI * 2,\n        true\n      )\n      ctx.closePath()\n      ctx.fill()\n    }\n    return canvas\n  }\n\n  function _getHtmlResult(data) {\n    var points = data.points,\n      div = document.createElement(\"div\"),\n      img = document.createElement(\"img\"),\n      width = points[2] - points[0],\n      height = points[3] - points[1]\n\n    addClass(div, \"croppie-result\")\n    div.appendChild(img)\n    css(img, {\n      left: -1 * points[0] + \"px\",\n      top: -1 * points[1] + \"px\",\n    })\n    img.src = data.url\n    css(div, {\n      width: width + \"px\",\n      height: height + \"px\",\n    })\n\n    return div\n  }\n\n  function _getBase64Result(data) {\n    return _getCanvas.call(this, data).toDataURL(data.format, data.quality)\n  }\n\n  function _getBlobResult(data) {\n    var self = this\n    return new Promise(function (resolve) {\n      _getCanvas.call(self, data).toBlob(\n        function (blob) {\n          resolve(blob)\n        },\n        data.format,\n        data.quality\n      )\n    })\n  }\n\n  function _replaceImage(img) {\n    if (this.elements.img.parentNode) {\n      Array.prototype.forEach.call(this.elements.img.classList, function (c) {\n        img.classList.add(c)\n      })\n      this.elements.img.parentNode.replaceChild(img, this.elements.img)\n      this.elements.preview = img // if the img is attached to the DOM, they're not using the canvas\n    }\n    this.elements.img = img\n  }\n\n  function _bind(options, cb) {\n    var self = this,\n      url,\n      points = [],\n      zoom = null,\n      hasExif = _hasExif.call(self)\n\n    if (typeof options === \"string\") {\n      url = options\n      options = {}\n    } else if (Array.isArray(options)) {\n      points = options.slice()\n    } else if (typeof options === \"undefined\" && self.data.url) {\n      //refreshing\n      _updatePropertiesFromImage.call(self)\n      _triggerUpdate.call(self)\n      return null\n    } else {\n      url = options.url\n      points = options.points || []\n      zoom = typeof options.zoom === \"undefined\" ? null : options.zoom\n    }\n\n    self.data.bound = false\n    self.data.url = url || self.data.url\n    self.data.boundZoom = zoom\n\n    return loadImage(url, hasExif).then(function (img) {\n      _replaceImage.call(self, img)\n      if (!points.length) {\n        var natDim = naturalImageDimensions(img)\n        var rect = self.elements.viewport.getBoundingClientRect()\n        var aspectRatio = rect.width / rect.height\n        var imgAspectRatio = natDim.width / natDim.height\n        var width, height\n\n        if (imgAspectRatio > aspectRatio) {\n          height = natDim.height\n          width = height * aspectRatio\n        } else {\n          width = natDim.width\n          height = natDim.height / aspectRatio\n        }\n\n        var x0 = (natDim.width - width) / 2\n        var y0 = (natDim.height - height) / 2\n        var x1 = x0 + width\n        var y1 = y0 + height\n        self.data.points = [x0, y0, x1, y1]\n      } else if (self.options.relative) {\n        points = [\n          (points[0] * img.naturalWidth) / 100,\n          (points[1] * img.naturalHeight) / 100,\n          (points[2] * img.naturalWidth) / 100,\n          (points[3] * img.naturalHeight) / 100,\n        ]\n      }\n\n      self.data.orientation = options.orientation || 1\n      self.data.points = points.map(function (p) {\n        return parseFloat(p)\n      })\n      if (self.options.useCanvas) {\n        _transferImageToCanvas.call(self, self.data.orientation)\n      }\n      _updatePropertiesFromImage.call(self)\n      _triggerUpdate.call(self)\n      cb && cb()\n    })\n  }\n\n  function fix(v, decimalPoints) {\n    return parseFloat(v).toFixed(decimalPoints || 0)\n  }\n\n  function _get() {\n    var self = this,\n      imgData = self.elements.preview.getBoundingClientRect(),\n      vpData = self.elements.viewport.getBoundingClientRect(),\n      x1 = vpData.left - imgData.left,\n      y1 = vpData.top - imgData.top,\n      widthDiff = (vpData.width - self.elements.viewport.offsetWidth) / 2, //border\n      heightDiff = (vpData.height - self.elements.viewport.offsetHeight) / 2,\n      x2 = x1 + self.elements.viewport.offsetWidth + widthDiff,\n      y2 = y1 + self.elements.viewport.offsetHeight + heightDiff,\n      scale = self._currentZoom\n\n    if (scale === Infinity || isNaN(scale)) {\n      scale = 1\n    }\n\n    var max = self.options.enforceBoundary ? 0 : Number.NEGATIVE_INFINITY\n    x1 = Math.max(max, x1 / scale)\n    y1 = Math.max(max, y1 / scale)\n    x2 = Math.max(max, x2 / scale)\n    y2 = Math.max(max, y2 / scale)\n\n    return {\n      points: [fix(x1), fix(y1), fix(x2), fix(y2)],\n      zoom: scale,\n      orientation: self.data.orientation,\n    }\n  }\n\n  var RESULT_DEFAULTS = {\n      type: \"canvas\",\n      format: \"png\",\n      quality: 1,\n    },\n    RESULT_FORMATS = [\"jpeg\", \"webp\", \"png\"]\n\n  function _result(options) {\n    var self = this,\n      data = _get.call(self),\n      opts = deepExtend(clone(RESULT_DEFAULTS), clone(options)),\n      resultType =\n        typeof options === \"string\" ? options : opts.type || \"base64\",\n      size = opts.size || \"viewport\",\n      format = opts.format,\n      quality = opts.quality,\n      backgroundColor = opts.backgroundColor,\n      circle =\n        typeof opts.circle === \"boolean\"\n          ? opts.circle\n          : self.options.viewport.type === \"circle\",\n      vpRect = self.elements.viewport.getBoundingClientRect(),\n      ratio = vpRect.width / vpRect.height,\n      prom\n\n    if (size === \"viewport\") {\n      data.outputWidth = vpRect.width\n      data.outputHeight = vpRect.height\n    } else if (typeof size === \"object\") {\n      if (size.width && size.height) {\n        data.outputWidth = size.width\n        data.outputHeight = size.height\n      } else if (size.width) {\n        data.outputWidth = size.width\n        data.outputHeight = size.width / ratio\n      } else if (size.height) {\n        data.outputWidth = size.height * ratio\n        data.outputHeight = size.height\n      }\n    }\n\n    if (RESULT_FORMATS.indexOf(format) > -1) {\n      data.format = \"image/\" + format\n      data.quality = quality\n    }\n\n    data.circle = circle\n    data.url = self.data.url\n    data.backgroundColor = backgroundColor\n\n    prom = new Promise(function (resolve) {\n      switch (resultType.toLowerCase()) {\n        case \"rawcanvas\":\n          resolve(_getCanvas.call(self, data))\n          break\n        case \"canvas\":\n        case \"base64\":\n          resolve(_getBase64Result.call(self, data))\n          break\n        case \"blob\":\n          _getBlobResult.call(self, data).then(resolve)\n          break\n        default:\n          resolve(_getHtmlResult.call(self, data))\n          break\n      }\n    })\n    return prom\n  }\n\n  function _refresh() {\n    _updatePropertiesFromImage.call(this)\n  }\n\n  function _rotate(deg) {\n    if (!this.options.useCanvas || !this.options.enableOrientation) {\n      throw \"Croppie: Cannot rotate without enableOrientation && EXIF.js included\"\n    }\n\n    var self = this,\n      canvas = self.elements.canvas\n\n    self.data.orientation = getExifOffset(self.data.orientation, deg)\n    drawCanvas(canvas, self.elements.img, self.data.orientation)\n    _updateCenterPoint.call(self, true)\n    _updateZoomLimits.call(self)\n\n    // Reverses image dimensions if the degrees of rotation is not divisible by 180.\n    if ((Math.abs(deg) / 90) % 2 === 1) {\n      var oldHeight = self._originalImageHeight\n      var oldWidth = self._originalImageWidth\n      self._originalImageWidth = oldHeight\n      self._originalImageHeight = oldWidth\n    }\n  }\n\n  function _destroy() {\n    var self = this\n    self.element.removeChild(self.elements.boundary)\n    removeClass(self.element, \"croppie-container\")\n    if (self.options.enableZoom) {\n      self.element.removeChild(self.elements.zoomerWrap)\n    }\n    delete self.elements\n  }\n\n  if (typeof window !== \"undefined\" && window.jQuery) {\n    var $ = window.jQuery\n    $.fn.croppie = function (opts) {\n      var ot = typeof opts\n\n      if (ot === \"string\") {\n        var args = Array.prototype.slice.call(arguments, 1)\n        var singleInst = $(this).data(\"croppie\")\n\n        if (opts === \"get\") {\n          return singleInst.get()\n        } else if (opts === \"result\") {\n          return singleInst.result.apply(singleInst, args)\n        } else if (opts === \"bind\") {\n          return singleInst.bind.apply(singleInst, args)\n        }\n\n        return this.each(function () {\n          var i = $(this).data(\"croppie\")\n          if (!i) return\n\n          var method = i[opts]\n          if ($.isFunction(method)) {\n            method.apply(i, args)\n            if (opts === \"destroy\") {\n              $(this).removeData(\"croppie\")\n            }\n          } else {\n            throw \"Croppie \" + opts + \" method not found\"\n          }\n        })\n      } else {\n        return this.each(function () {\n          var i = new Croppie(this, opts)\n          i.$ = $\n          $(this).data(\"croppie\", i)\n        })\n      }\n    }\n  }\n\n  function Croppie(element, opts) {\n    if (element.className.indexOf(\"croppie-container\") > -1) {\n      throw new Error(\"Croppie: Can't initialize croppie more than once\")\n    }\n    this.element = element\n    this.options = deepExtend(clone(Croppie.defaults), opts)\n\n    if (this.element.tagName.toLowerCase() === \"img\") {\n      var origImage = this.element\n      addClass(origImage, \"cr-original-image\")\n      setAttributes(origImage, { \"aria-hidden\": \"true\", alt: \"\" })\n      var replacementDiv = document.createElement(\"div\")\n      this.element.parentNode.appendChild(replacementDiv)\n      replacementDiv.appendChild(origImage)\n      this.element = replacementDiv\n      this.options.url = this.options.url || origImage.src\n    }\n\n    _create.call(this)\n    if (this.options.url) {\n      var bindOpts = {\n        url: this.options.url,\n        points: this.options.points,\n      }\n      delete this.options[\"url\"]\n      delete this.options[\"points\"]\n      _bind.call(this, bindOpts)\n    }\n  }\n\n  Croppie.defaults = {\n    viewport: {\n      width: 100,\n      height: 100,\n      type: \"square\",\n    },\n    boundary: {},\n    orientationControls: {\n      enabled: true,\n      leftClass: \"\",\n      rightClass: \"\",\n    },\n    resizeControls: {\n      width: true,\n      height: true,\n    },\n    customClass: \"\",\n    showZoomer: true,\n    enableZoom: true,\n    enableResize: false,\n    mouseWheelZoom: true,\n    enableExif: false,\n    enforceBoundary: true,\n    enableOrientation: false,\n    enableKeyMovement: true,\n    update: function () {},\n  }\n\n  Croppie.globals = {\n    translate: \"translate3d\",\n  }\n\n  deepExtend(Croppie.prototype, {\n    bind: function (options, cb) {\n      return _bind.call(this, options, cb)\n    },\n    get: function () {\n      var data = _get.call(this)\n      var points = data.points\n      if (this.options.relative) {\n        points[0] /= this.elements.img.naturalWidth / 100\n        points[1] /= this.elements.img.naturalHeight / 100\n        points[2] /= this.elements.img.naturalWidth / 100\n        points[3] /= this.elements.img.naturalHeight / 100\n      }\n      return data\n    },\n    result: function (type) {\n      return _result.call(this, type)\n    },\n    refresh: function () {\n      return _refresh.call(this)\n    },\n    setZoom: function (v) {\n      _setZoomerVal.call(this, v)\n      dispatchChange(this.elements.zoomer)\n    },\n    rotate: function (deg) {\n      _rotate.call(this, deg)\n    },\n    destroy: function () {\n      return _destroy.call(this)\n    },\n  })\n  return Croppie\n})\n", "import htmx from \"./vendored/htmx.cjs\"\nimport hamburgerMenu from \"./behaviours/hamburger\"\nimport toggleButton from \"./behaviours/toggle-button\"\nimport flashMessages from \"./behaviours/flash-message\"\nimport modal from \"./behaviours/modal\"\nimport imagePreview from \"./behaviours/image-preview\"\nimport avatarModal from \"./behaviours/avatar-modal\"\n\n// add behaviours on page and htmx load\naddEventListener(\"htmx:load\", (e) => {\n  hamburgerMenu(e.target)\n  toggleButton(e.target)\n  flashMessages(e.target)\n  modal(e.target)\n  imagePreview(e.target)\n  avatarModal(e.target)\n})\n\n// htmx stuff\nhtmx.defineExtension(\"reset-on-success\", {\n  onEvent: (name, event) => {\n    if (name !== \"htmx:beforeSwap\") return\n    if (event.detail.isError || event.detail.xhr.status === 422) return\n\n    const triggeringElt = event.detail.requestConfig.elt\n    if (\n      !triggeringElt.closest(\"[hx-reset-on-success]\") &&\n      !triggeringElt.closest(\"[data-hx-reset-on-success]\")\n    )\n      return\n\n    switch (triggeringElt.tagName) {\n      case \"INPUT\":\n      case \"TEXTAREA\":\n        triggeringElt.value = triggeringElt.defaultValue\n        break\n      case \"SELECT\":\n        //too much work\n        break\n      case \"FORM\":\n        triggeringElt.reset()\n        break\n    }\n  },\n})\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n  document.addEventListener(\"htmx:beforeSwap\", (evt) => {\n    if (evt.detail.xhr.status === 422) {\n      evt.detail.shouldSwap = true\n      evt.detail.isError = false\n    }\n  })\n})\n", "// trying out rsjs\n\nexport default function hamburgerMenu(tree = document) {\n  tree.querySelectorAll(\"[data-hb-menu]\").forEach((hbRoot) => {\n    const hbBtn = hbRoot.querySelector(\"[data-hb-btn]\")\n    const hbMenu = hbRoot.querySelector(\"[data-hb-menu-list]\")\n    const isOpen = () => !hbMenu.hidden\n\n    function toggleMenu(open = !isOpen()) {\n      if (open) {\n        hbMenu.hidden = false\n        hbBtn.setAttribute(\"data-hb-open\", \"\")\n      } else {\n        hbMenu.hidden = true\n        hbBtn.removeAttribute(\"data-hb-open\", \"\")\n      }\n    }\n\n    // ie by default ensure that menu behaves according\n    // to DOM representation (hidden attribute)\n    toggleMenu(isOpen())\n    hbBtn.addEventListener(\"click\", () => toggleMenu())\n  })\n}\n", "export default function toggleButton(tree = document) {\n  tree.querySelectorAll(\"[data-toggle-btn]\").forEach((toggleBtn) => {\n    const input = toggleBtn.querySelector(\"[role='switch']\")\n    const switchSpan = toggleBtn.querySelector(\"[data-toggle-btn-switch]\")\n    const textTrue = toggleBtn.querySelector(\"[data-toggle-btn-true]\")\n    const textFalse = toggleBtn.querySelector(\"[data-toggle-btn-false]\")\n\n    const isOn = () => input.checked\n\n    function toggle(value = isOn()) {\n      if (value == true) {\n        textTrue.hidden = false\n        textFalse.hidden = true\n        switchSpan.removeAttribute(\"data-toggle-btn-off\")\n      } else {\n        textTrue.hidden = true\n        textFalse.hidden = false\n        switchSpan.setAttribute(\"data-toggle-btn-off\", \"\")\n      }\n    }\n\n    input.addEventListener(\"click\", () => toggle())\n  })\n}\n", "export default function flashMessages(tree = document) {\n  tree.querySelectorAll(\"[data-flash-msg]\").forEach((elem) => {\n    const closeBtn = elem.querySelector(\"button.flash-close\")\n\n    closeBtn.addEventListener(\"click\", () => {\n      elem.setAttribute(\"hidden\", \"\")\n      elem.addEventListener(\"animationend\", () => {\n        elem.remove()\n      })\n    })\n  })\n}\n", "export default function modal(tree = document) {\n  // it's quite likely that the parent is the [data-modal]\n  // but querySelectorAll only finds children so we need\n  // to include the parent tree in the search\n  ;[tree, ...tree.querySelectorAll(\"[data-modal]\")]\n    .filter((el) => el.matches(\"[data-modal]\"))\n    .forEach((modal) => {\n      const modalUnderlay = modal.querySelector(\"[data-modal-underlay]\")\n\n      function closeModal() {\n        modal.setAttribute(\"hidden\", \"\")\n        modal.addEventListener(\"animationend\", () => {\n          modal.remove()\n        })\n      }\n\n      modalUnderlay.addEventListener(\"click\", () => closeModal())\n\n      modal.querySelectorAll(\"[data-modal-close-btn]\").forEach((btn) => {\n        btn.addEventListener(\"click\", () => closeModal())\n      })\n    })\n}\n", "export default function imagePreview(tree = document) {\n  tree.querySelectorAll(\"[data-image-preview-form]\").forEach((form) => {\n    const imgInput = form.querySelector(\"[data-image-preview-input]\")\n    const imgTag = form.querySelector(\"[data-image-preview-img]\")\n\n    function readFile(input = imgInput) {\n      if (input.files && input.files[0]) {\n        const reader = new FileReader()\n        reader.readAsDataURL(input.files[0])\n        reader.onload = () => {\n          imgTag.setAttribute(\"src\", reader.result)\n          imgTag.removeAttribute(\"hidden\")\n        }\n      }\n    }\n\n    imgInput.addEventListener(\"change\", () => readFile())\n  })\n}\n", "import Croppie from \"../vendored/croppie.cjs\"\n\nconst croppieOptions = {\n  showZoomer: true,\n  enableOrientation: true,\n  mouseWheelZoom: \"ctrl\",\n  viewport: {\n    width: 220,\n    height: 220,\n    type: \"circle\",\n  },\n  boundary: {\n    width: \"320px\",\n    height: \"320px\",\n  },\n}\n\nexport default function avatarModal(tree = document) {\n  tree.querySelectorAll(\"[data-avatar-modal-form]\").forEach((form) => {\n    const avatarInput = form.querySelector(\"[data-avatar-modal-input]\")\n    const croppie = form.querySelector(\"[data-avatar-modal-croppie]\")\n    const placeholder = form.querySelector(\"[data-avatar-modal-placeholder]\")\n    const submitBtn = form.querySelector(\"[data-avatar-modal-submit]\")\n\n    // the thing with the logic\n    const avatarCroppie = new Croppie(croppie, croppieOptions)\n\n    const readFile = (input) => {\n      if (input.files && input.files[0]) {\n        const reader = new FileReader()\n        reader.readAsDataURL(input.files[0])\n        reader.onload = () => {\n          croppie.removeAttribute(\"hidden\")\n          placeholder.setAttribute(\"hidden\", \"\")\n          submitBtn.removeAttribute(\"disabled\")\n          avatarCroppie.bind({ url: reader.result })\n        }\n      }\n    }\n    avatarInput.addEventListener(\"change\", () => readFile(avatarInput))\n\n    // crop image before form send\n    document.body.addEventListener(\"htmx:confirm\", (evt) => {\n      // ensure this is the avatar form event\n      if (!evt.detail.elt.getAttribute(\"data-avatar-modal-form\")) return\n\n      // otherwise prevent default behaviour and crop image\n      evt.preventDefault()\n      avatarCroppie\n        .result(\"blob\", \"original\", \"png\", 1, false)\n        .then((result) => {\n          const imageFile = new File([result], \"avatar.png\", {\n            type: \"image/png\",\n            lastModified: new Date(),\n          })\n          const dt = new DataTransfer()\n          dt.items.add(imageFile)\n          evt.detail.elt.avatar.files = dt.files\n          evt.detail.issueRequest()\n        })\n    })\n  })\n}\n"],
  "mappings": "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",
  "names": ["str", "elt", "extensions", "parentElt", "prompt", "target", "event", "exports", "module", "a", "b", "c", "d", "e", "f", "g", "h", "i", "CustomEvent", "Croppie", "css", "self", "isDragging", "modal", "Croppie", "htmx"]
}
