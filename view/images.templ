package view

import (
	"fmt"
	"github.com/Jedsonofnel/otterkin-web/model"
	"github.com/Jedsonofnel/otterkin-web/view/components"
)

templ ImageModal(image model.ArtistImage) {
	// only rendered once
	@components.Modal() {
		<form
			hx-put={ fmt.Sprintf("/artwork/edit/%s", image.Id) }
			hx-target="#modal-image-update-form"
			hx-swap="beforeend"
			class="column-form"
			id="modal-image-update-form"
		>
			<h2 class="dashboard-subtitle">Edit artwork</h2>
			@LoadImage(fmt.Sprintf("/artwork/%s", image.Id))
			<div class="form-field">
				<label for="modal-title">Title</label>
				<input class="text-input" id="modal-title" type="text" value={ image.Title } name="title"/>
				<span id="title-error-modal"></span>
			</div>
			<div class="form-field">
				<label for="modal-description">Description (optional)</label>
				<textarea class="textarea-input" id="modal-description" rows="3" name="description">{ image.Description }</textarea>
			</div>
			<div class="form-field">
				<div style="display:flex; justify-content:space-between; width:100%;">
					@components.ToggleButton(components.ToggleButtonProps{
						Value:     image.Visible,
						TrueText:  "Visible",
						FalseText: "Hidden",
					})
					<button class="button soft" hx-delete={ fmt.Sprintf("/artwork/%s", image.Id) }>Delete</button>
				</div>
			</div>
			<div class="modal-bottom">
				<button class="button text" type="button" data-close-modal-btn>Cancel</button>
				<input class="button primary" type="submit" value="Edit"/>
			</div>
		</form>
	}
}

templ ImageUpdateError(errMap map[string]string) {
	if errMap["title"] != "" {
		<p id="title-error-modal" hx-swap-oob="outerHTML" class="form-error">{ errMap["title"] }</p>
	} else {
		<span id="title-error-modal" hx-swap-oob="outerHTML"></span>
	}
}

templ EditableImage(image model.ArtistImage) {
	<button
		class="editable-image-button"
		hx-get={ fmt.Sprintf("/artwork/edit/%s", image.Id) }
		hx-target="body"
		hx-swap="beforeend"
		hx-trigger="click"
	>
		@LoadImageSquare(fmt.Sprintf("/artwork/%s", image.Id))
	</button>
}

templ artistGallery() {
	<div id="artist-gallery" class="image-gallery">
		{ children... }
	</div>
}

templ LoadImage(url string) {
	<div hx-get={ url } hx-trigger="revealed" class="image-wrapper-fullsize" hx-swap="innerHTML" hx-target="this">
		<img alt="Image loading..." class="htmx-indicator image-placeholder"/>
	</div>
}

templ LoadImageSquare(url string) {
	<div hx-get={ url } hx-trigger="revealed" class="image-wrapper-square" hx-swap="innerHTML" hx-target="this">
		<img alt="Image loading..." class="htmx-indicator image-placeholder"/>
	</div>
}

templ Image(url string, alt string) {
	<img alt={ alt } src={ url }/>
}
