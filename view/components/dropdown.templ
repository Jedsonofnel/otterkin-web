package components

import "fmt"

// we need a dropdown add things like tags
// this will work by sending a PUT request to add/remove tags on
// menu button or cross button press

type DropdownMultiSelectProps struct {
	Name     string
	Options  []string
	Path     string
	Selected []string
}

// TODO create a helper function to
templ DropdownMultiSelect(ddmsp DropdownMultiSelectProps) {
	<div class="ddms">
		<div class="ddms-header">
			<p>Select things</p>
			<div data-menu-wrapper>
				<button
					type="button"
					id={ fmt.Sprintf("dd-menubutton-%s", ddmsp.Name) }
					aria-haspopup="menu"
					aria-expanded="false"
					aria-controls={ fmt.Sprintf("dd-menu-%s", ddmsp.Name) }
				>Add</button>
				<ul
					id={ fmt.Sprintf("dd-menu-%s", ddmsp.Name) }
					role="menu"
					hidden
					tabindex="-1"
					aria-labelledby={ fmt.Sprintf("dd-menubutton-%s", ddmsp.Name) }
					aria-activedescendant={ fmt.Sprintf("dd-mi-%s-1", ddmsp.Name) }
				>
					for index, option := range ddmsp.Options {
						<li id={ fmt.Sprintf("dd-mi-%s-%v", ddmsp.Name, index+1) } role="menuitem">
							<button
								hx-put={ ddmsp.Path }
								hx-target={ fmt.Sprintf("#ddms-tags-%s", ddmsp.Name) }
								hx-swap="beforeend"
								hx-vals={ fmt.Sprintf(`{"%s": "%s" }`, ddmsp.Name, option) }
							>{ option }</button>
						</li>
					}
				</ul>
			</div>
		</div>
		<div class="ddms-tag-container" id={ fmt.Sprintf("ddms-tags-%s", ddmsp.Name) }>
			for _, option := range ddmsp.Selected {
				<div>{ option } </div>
			}
		</div>
	</div>
}

templ DropdownMultiSelectTag(text string) {
	<div>{ text }</div>
}
