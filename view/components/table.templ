package components

import (
	"fmt"
	"github.com/Jedsonofnel/otterkin-web/model"
)

type TableProps struct {
	CreateURL  string
	PagNextURL string
	PagPrevURL string
	PagPage    int64
	PagMaxPage int64
}

// Services Table
templ ServicesTable(tp TableProps, rows []string) {
	<div>Table</div>
	<table>
		<thead>
			<tr>
				<th>Subject</th>
				<th>Surface</th>
				<th>Size</th>
				<th>Completion Time (days)</th>
				<th>Price (Â£)</th>
			</tr>
		</thead>
		<tbody>
			if len(rows) > 0 {
				for _, row := range rows {
					<tr>
						<td>
							{ row }
						</td>
					</tr>
				}
			} else {
				<tr>
					<td>No rows yet</td>
				</tr>
			}
		</tbody>
	</table>
}

// Tag Table
templ TagTable(tp TableProps, rows []model.Tag, tagType string) {
	<div id={ fmt.Sprintf("table-tag-%s", tagType) } class="column-form">
		<h2 class="dashboard-subtitle">Add "{ tagType }" tags</h2>
		<button
			hx-get={ tp.CreateURL }
			hx-target="body"
			hx-swap="beforeend"
			class="button soft"
			style="margin-left: auto;"
		>Add Tag</button>
		<table>
			<thead>
				<tr>
					<th>Tag Name</th>
				</tr>
			</thead>
			<tfoot colspan="all">
				<tr>
					<td>
						<div>
							{ 
            fmt.Sprintf("%v/%v", tp.PagPage, tp.PagMaxPage) }
						</div>
						<div>
							if tp.PagPage == 1 {
								<button class="pag-button" disabled><i class="at-arrow-left"></i></button>
							} else {
								<button
									class="pag-button"
									hx-get={ tp.PagPrevURL }
									hx-target={ fmt.Sprintf("#table-tag-%s", tagType) }
									hx-swap="outerHTML"
								><i class="at-arrow-left"></i></button>
							}
							if tp.PagMaxPage == tp.PagPage {
								<button class="pag-button" disabled><i class="at-arrow-right"></i></button>
							} else {
								<button
									class="pag-button"
									hx-get={ tp.PagNextURL }
									hx-target={ fmt.Sprintf("#table-tag-%s", tagType) }
									hx-swap="outerHTML"
								><i class="at-arrow-right"></i></button>
							}
						</div>
					</td>
				</tr>
			</tfoot>
			<tbody>
				if len(rows) > 0 {
					for _, row := range rows {
						@TagTableRow(row)
					}
				} else {
					<tr>
						<td>No rows yet</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}

templ TagTableRow(tag model.Tag) {
	<tr>
		<td>{ tag.Name }</td>
		<td class="table-contextbtn-td">
			<div data-menu-wrapper class="table-contextbtn-wrapper">
				<button
					class="table-contextbtn"
					type="button"
					id={ fmt.Sprintf("tt-contextbtn-%s", tag.Id) }
					aria-haspopup="menu"
					aria-expanded="false"
					aria-controls={ fmt.Sprintf("tt-contextmenu-%s", tag.Id) }
				>
					<span class="table-contextbtn-icon"></span>
				</button>
				<ul
					class="table-contextmenu"
					id={ fmt.Sprintf("tt-contextmenu-%s", tag.Id) }
					role="menu"
					hidden
					tabindex="-1"
					aria-labelledby={ fmt.Sprintf("tt-contextbtn-%s", tag.Id) }
					aria-activedescendant={ fmt.Sprintf("tt-mi-%s-1",
        tag.Id) }
				>
					<li class="table-contextmenu-item" id={ fmt.Sprintf("tt-mi-%s-1", tag.Id) } role="menuitem">
						<button
							class="table-contextmenu-button"
							hx-get={ fmt.Sprintf("/tag/table/update-modal/%s", tag.Id) }
							hx-target="body"
							hx-swap="beforeend"
						>Edit</button>
					</li>
					<li class="table-contextmenu-item" id={ fmt.Sprintf("tt-mi-%s-2", tag.Id) } role="menuitem">
						<button
							class="table-contextmenu-button"
							style="color:red;"
							hx-get={ fmt.Sprintf("/tag/table/delete-modal/%s",
            tag.Id) }
							hx-target="body"
							hx-swap="beforeend"
						>Delete</button>
					</li>
				</ul>
			</div>
		</td>
	</tr>
}
