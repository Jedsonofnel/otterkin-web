package view

import (
	"fmt"
	"github.com/Jedsonofnel/otterkin-web/model"
)

type ArtistProfilePageData struct {
	artist model.Artist
}

func NewArtistProfilePageData(artist model.Artist) ArtistProfilePageData {
	return ArtistProfilePageData{
		artist: artist,
	}
}

type ArtistGalleryPageData struct {
	artist model.Artist
	images []model.ArtistImage
}

func NewArtistGalleryPageData(artist model.Artist, images []model.ArtistImage) ArtistGalleryPageData {
	return ArtistGalleryPageData{
		artist: artist,
		images: images,
	}
}

templ ArtistProfilePage(ld LayoutData, apd ArtistProfilePageData) {
	@layout(ld, dashboardHamburger(apd.artist.User, "artist-settings")) {
		@userDashboardLayout(apd.artist.User, "artist-settings") {
			<h1 class="dashboard-title" id="artist-greeting">Hello { apd.artist.User.FirstName }</h1>
			if !apd.artist.Approved {
				<p>
					You haven't yet been approved. Our team should be in touch (if they aren't already)
					very soon and we hope to get you on your way before long!
				</p>
			}
			<section class="dashboard-section">
				@artistUpdateForm(apd.artist)
			</section>
		}
	}
}

templ ArtistProfileGalleryPage(ld LayoutData, agd ArtistGalleryPageData) {
	@layout(ld, dashboardHamburger(agd.artist.User, "artist-gallery")) {
		@userDashboardLayout(agd.artist.User, "artist-gallery") {
			<h1 class="dashboard-title">Your gallery</h1>
			<section class="dashboard-section">
				<form
					hx-post={ toString("/artist/profile/%s/gallery", agd.artist.Id) }
					enctype="multipart/form-data"
					hx-target="#artist-gallery"
					hx-swap="beforeend"
					class="column-form"
					hx-reset-on-success
				>
					<h2 class="dashboard-subtitle">Add your artwork</h2>
					<div class="form-field">
						<label for="title">Title</label>
						<input class="text-input" id="title" name="title" type="text"/>
						<span id="title-error"></span>
					</div>
					<div class="form-field">
						<label for="description">Description (optional)</label>
						<textarea class="textarea-input" id="description" name="description" rows="3" maxlength="128"></textarea>
					</div>
					<input type="hidden" name="visible" value="true"/>
					<input type="hidden" name="artist_id" value={ agd.artist.Id }/>
					<div class="form-field">
						<label for="image" hidden="true">Image</label>
						<input id="image" class="file-input" name="image" type="file" accept="image/*"/>
						<span id="image-error"></span>
					</div>
					<img id="gallery-preview" class="hidden"/>
					<input class="button soft" type="submit" value="Add image"/>
				</form>
			</section>
			<section class="dashboard-section">
				<h2 class="dashboard-subtitle">Your artwork</h2>
				@artistGallery() {
					for _, image := range agd.images {
						@EditableImage(image)
					}
				}
			</section>
		}
	}
}

var galleryErrFields []string = []string{
	"title",
	"image",
}

templ GalleryFormError(errMap map[string]string) {
	for _,field := range galleryErrFields {
		if errMap[field] != "" {
			<p id={ fmt.Sprintf("%s-error", field) } hx-swap-oob="outerHTML" class="form-error">{ errMap[field] }</p>
		} else {
			<span id={ fmt.Sprintf("%s-error", field) } hx-swap-oob="outerHTML"></span>
		}
	}
}

templ GalleryFormSuccess(image model.ArtistImage) {
	<img id="gallery-preview" class="hidden" hx-swap-oob="outerHTML"/>
	@EditableImage(image)
	@GalleryFormError(make(map[string]string))
}

templ artistUpdateForm(artist model.Artist) {
	<form hx-put={ toString("/artist/profile/%s", artist.Id) } class="column-form">
		<h2 class="dashboard-subtitle">Update your artist details</h2>
		<div class="form-field">
			<label for="instagram_handle">Instagram Handle</label>
			<input
				class="text-input"
				id="instagram_handle"
				name="instagram_handle"
				type="text"
				value={ artist.InstagramHandle }
			/>
		</div>
		<div class="form-field">
			<label for="biography">Biography</label>
			<textarea class="textarea-input" id="biography" name="biography" rows="3" maxlength="128">
				{ artist.Biography }
			</textarea>
		</div>
		<input class="button soft" type="submit" value="Update"/>
	</form>
}

templ ArtistUpdateResponse(artist model.Artist) {
	@artistUpdateForm(artist)
	<h1 id="artist-greeting" hx-swap-oob="outerHTML">Hello { artist.User.FirstName }</h1>
	@flashInfo("Updated your details!")
}
